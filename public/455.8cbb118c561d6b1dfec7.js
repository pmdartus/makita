"use strict";(self.webpackChunktakimafr=self.webpackChunktakimafr||[]).push([[455],{4455:(Ny,Fa,At)=>{At.r(Fa),At.d(Fa,{KartShellComponent:()=>Oa,SuperkartComponent:()=>Xu,SuperkartModule:()=>Iy});var Wt=At(8297),g=At(7716),dn=At(6889);let Pr=(()=>{class r{constructor(){this.forcedFullscreen=!1,this.forcedFullscreenSubject=new dn.x,this.forcedFullscreenState=this.forcedFullscreenSubject.asObservable()}initData(){}setForcedFullscreen(t){this.forcedFullscreen=t,this.forcedFullscreenSubject.next(t)}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();var Ze=At(8583);let uh=(()=>{class r{constructor(){this.title=""}ngOnInit(){}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-page-header"]],inputs:{title:"title"},decls:2,vars:1,consts:[[1,"header-title"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g._uU(1),g.qZA()),2&t&&(g.xp6(1),g.hij(" ",n.title,"\n"))},styles:["[_nghost-%COMP%]{width:100%;height:60px;display:flex;justify-content:center;align-items:center;color:#fff;font-size:40px;text-align:center}@media (max-width: 600px){[_nghost-%COMP%]{font-size:30px}}"]}),r})();var vt=(()=>{return(r=vt||(vt={}))[r.exit=0]="exit",r[r.about=1]="about",r[r.driver=2]="driver",r[r.game=3]="game",r[r.help=4]="help",vt;var r})();class Hi{constructor(e){this.action=e.action,this.name=e.name,this.icon=e.icon,this.background=e.background}}const In={EXIT:new Hi({action:vt.exit,name:"Revenir sur le site",icon:"assets/img/ui/icon-exit.png",background:"#cb2468"}),ABOUT:new Hi({action:vt.about,name:"A propos",icon:"assets/img/ui/icon-help.png",background:"#00aa00"}),DRIVER:new Hi({action:vt.driver,name:"C'est parti",icon:"assets/img/ui/icon-driver.png",background:"#00aa00"}),GAME:new Hi({action:vt.game,name:"Choisir ce pilote",background:"#00aa00"}),HELP:new Hi({action:vt.help,name:"Revoir l'aide",icon:"assets/img/ui/icon-help.png",background:"#cb2468"})};let Xs=(()=>{class r{constructor(t,n){this.router=t,this.route=n,this.actionSubject=new dn.x,this.actionState=this.actionSubject.asObservable()}setAction(t){switch(this.actionSubject.next(t),t){case vt.about:this.router.navigate(["kart/about"]);break;case vt.help:this.router.navigate(["kart/welcome"]);break;case vt.game:break;case vt.driver:this.router.navigate(["kart/driver-choice"]);break;case vt.exit:window.open("/","_self")}}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(Wt.F0),g.LFG(Wt.gz))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();function ph(r,e){if(1&r&&(g.TgZ(0,"div",4),g._UZ(1,"img",5),g.qZA()),2&r){const t=g.oxw().$implicit;g.xp6(1),g.Q6J("src",t.icon,g.LSH)}}function mh(r,e){if(1&r){const t=g.EpF();g.TgZ(0,"div",1),g.NdJ("click",function(){const s=g.CHM(t).$implicit;return g.oxw().onBtnClick(s)}),g.YNc(1,ph,2,1,"div",2),g.TgZ(2,"span",3),g._uU(3),g.qZA(),g.qZA()}if(2&r){const t=e.$implicit;g.Udp("background",t.background),g.xp6(1),g.Q6J("ngIf",t.icon),g.xp6(2),g.hij(" ",t.name," ")}}let gh=(()=>{class r{constructor(t){this.footerService=t}ngOnInit(){}onBtnClick(t){this.footerService.setAction(t.action)}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(Xs))},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-page-footer"]],inputs:{btns:"btns"},decls:1,vars:1,consts:[["class","footer-btn",3,"background","click",4,"ngFor","ngForOf"],[1,"footer-btn",3,"click"],["class","btn-icon",4,"ngIf"],[1,"btn-text"],[1,"btn-icon"],[3,"src"]],template:function(t,n){1&t&&g.YNc(0,mh,4,4,"div",0),2&t&&g.Q6J("ngForOf",n.btns)},directives:[Ze.sg,Ze.O5],styles:["[_nghost-%COMP%]{width:100%;height:60px;display:flex;justify-content:space-around;align-items:center;color:#fff;padding:0 5px}.footer-btn[_ngcontent-%COMP%]{display:flex;align-items:center;border-radius:3px;height:30px;padding:0 5px;color:#fff;line-height:12px;font-size:21px;max-width:160px;cursor:pointer;margin:0 5px}@media (max-width: 600px){.footer-btn[_ngcontent-%COMP%]{font-size:16px}}.footer-btn[_ngcontent-%COMP%]   .btn-icon[_ngcontent-%COMP%]{height:30px;display:flex;align-items:center;margin-right:10px}.footer-btn[_ngcontent-%COMP%]   .btn-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:24px;image-rendering:pixelated}@media (max-width: 600px){.footer-btn[_ngcontent-%COMP%]   .btn-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:16px}}.footer-btn[_ngcontent-%COMP%]   .btn-text[_ngcontent-%COMP%]{text-align:center}"]}),r})();function vh(r,e){if(1&r&&g._UZ(0,"app-page-header",4),2&r){const t=g.oxw();g.Q6J("title",t.routeOptions.headerTitle)}}function xh(r,e){if(1&r&&g._UZ(0,"app-page-footer",5),2&r){const t=g.oxw();g.Q6J("btns",t.routeOptions.footerBtns)}}let Oa=(()=>{class r{constructor(t,n,i){this.router=t,this.coreService=n,this.activatedRoute=i,this.routeOptions={headerTitle:"",footerBtns:[],fullscreen:!1},this.forcedFullscreen=this.coreService.forcedFullscreen}ngOnInit(){this.forcedFullscreen=this.coreService.forcedFullscreen,this.coreService.forcedFullscreenState.subscribe(t=>{this.forcedFullscreen=t}),this.initRoute(),this.router.events.forEach(t=>{t instanceof Wt.m2&&this.initRoute()})}initRoute(){const t=this.activatedRoute.snapshot.firstChild;t&&(this.routeOptions.headerTitle=t.data.title||"",this.routeOptions.footerBtns=t.data.footerBtns||[],this.routeOptions.fullscreen=!!t.data.fullscreen)}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(Wt.F0),g.Y36(Pr),g.Y36(Wt.gz))},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-kart-shell"]],decls:5,vars:4,consts:[[1,"app-content"],[3,"title",4,"ngIf"],[1,"app-route-content"],[3,"btns",4,"ngIf"],[3,"title"],[3,"btns"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g.YNc(1,vh,1,1,"app-page-header",1),g.TgZ(2,"div",2),g._UZ(3,"router-outlet"),g.qZA(),g.YNc(4,xh,1,1,"app-page-footer",3),g.qZA()),2&t&&(g.ekj("fullscreen",n.routeOptions.fullscreen||n.forcedFullscreen),g.xp6(1),g.Q6J("ngIf",n.routeOptions.headerTitle&&!n.forcedFullscreen),g.xp6(3),g.Q6J("ngIf",n.routeOptions.footerBtns&&n.routeOptions.footerBtns.length&&!n.forcedFullscreen))},directives:[Ze.O5,Wt.lC,uh,gh],styles:['@font-face{font-family:"Visitor";src:url(visitor2.53646d36fdd02397c450.ttf) format("truetype");font-style:normal}[_nghost-%COMP%]{position:relative;display:block;width:100%;height:100%;background-image:url(wallpaper.f9ed6bfe7bb654e862c2.png);overflow:hidden;display:flex;justify-content:center}[_nghost-%COMP%]   .btn-fullscreen[_ngcontent-%COMP%]{position:absolute;z-index:20;right:10px;top:10px;width:40px;height:40px;display:flex;justify-content:center;align-items:center;background:#222}[_nghost-%COMP%]   .btn-fullscreen[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:22px}[_nghost-%COMP%]   .app-content[_ngcontent-%COMP%]{width:100%;height:100%;max-width:1100px;background:rgba(255,255,255,.05);display:flex;flex-direction:column}[_nghost-%COMP%]   .app-content.fullscreen[_ngcontent-%COMP%]{max-width:none}[_nghost-%COMP%]   .app-content[_ngcontent-%COMP%]   .app-route-content[_ngcontent-%COMP%]{flex:1;overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch}[_nghost-%COMP%] {font-family:"Visitor",sans-serif}[_nghost-%COMP%]  *{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-tap-highlight-color:transparent}[_nghost-%COMP%]  * input, [_nghost-%COMP%]  * textarea{-webkit-touch-callout:default;-webkit-user-select:text;user-select:text;-webkit-tap-highlight-color:black}[_nghost-%COMP%]  * .game-screen canvas{position:relative}[_nghost-%COMP%]  * .game-screen .parallax-ctnr{position:absolute;top:0}[_nghost-%COMP%]  * .game-screen .parallax-background{position:absolute;top:0;width:100%;height:100%;background-repeat:no-repeat}[_nghost-%COMP%]  * .game-screen .pixelated-background{image-rendering:pixelated;image-rendering:-moz-crisp-edges}[_nghost-%COMP%]  input{font-family:"Roboto",sans-serif}[_nghost-%COMP%]  textarea{font-family:"Roboto",sans-serif}[_nghost-%COMP%]  *:focus{outline:none}[_nghost-%COMP%]  input:-webkit-autofill, [_nghost-%COMP%]  textarea:-webkit-autofill, [_nghost-%COMP%]  select:-webkit-autofill{-webkit-box-shadow:0 0 0 1000px white inset}']}),r})();var fn=At(5207),Ba=At(1841);let Na=(()=>{class r{constructor(t){this.http=t}getBlob(t){return this.http.get(t,{responseType:"blob"})}getArrayBuffer(t){return this.http.get(t,{responseType:"arraybuffer"})}doGet(t,n,i){return this.http.get(t,{observe:"response",params:n,headers:i})}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(Ba.eN))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();function ka(r,e,t,n,i,s,o){try{var a=r[s](o),l=a.value}catch(c){return void t(c)}a.done?e(l):Promise.resolve(l).then(n,i)}const Ct=1001,Ge=1003,lt=1006,mn=1015,ji=1020,Dn=1022,kt=1023,si=1026,Ji=1027,oi=2400,ai=2401,Lt=3e3,Qi=35044,$i=35048;class Fn{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const i=this._listeners[e];if(void 0!==i){const s=i.indexOf(t);-1!==s&&i.splice(s,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const n=this._listeners[e.type];if(void 0!==n){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const xt=[];for(let r=0;r<256;r++)xt[r]=(r<16?"0":"")+r.toString(16);let Wr=1234567;const On=Math.PI/180,Ki=180/Math.PI;function Rt(){const r=4294967295*Math.random()|0,e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return(xt[255&r]+xt[r>>8&255]+xt[r>>16&255]+xt[r>>24&255]+"-"+xt[255&e]+xt[e>>8&255]+"-"+xt[e>>16&15|64]+xt[e>>24&255]+"-"+xt[63&t|128]+xt[t>>8&255]+"-"+xt[t>>16&255]+xt[t>>24&255]+xt[255&n]+xt[n>>8&255]+xt[n>>16&255]+xt[n>>24&255]).toUpperCase()}function yt(r,e,t){return Math.max(e,Math.min(t,r))}function so(r,e){return(r%e+e)%e}function er(r,e,t){return(1-t)*r+t*e}function oo(r){return 0==(r&r-1)&&0!==r}function dc(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function fc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}var tr=Object.freeze({__proto__:null,DEG2RAD:On,RAD2DEG:Ki,generateUUID:Rt,clamp:yt,euclideanModulo:so,mapLinear:function(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)},inverseLerp:function(r,e,t){return r!==e?(t-r)/(e-r):0},lerp:er,damp:function(r,e,t,n){return er(r,e,1-Math.exp(-t*n))},pingpong:function(r,e=1){return e-Math.abs(so(r,2*e)-e)},smoothstep:function(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e))*r*(3-2*r)},smootherstep:function(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e))*r*r*(r*(6*r-15)+10)},randInt:function(r,e){return r+Math.floor(Math.random()*(e-r+1))},randFloat:function(r,e){return r+Math.random()*(e-r)},randFloatSpread:function(r){return r*(.5-Math.random())},seededRandom:function(r){return void 0!==r&&(Wr=r%2147483647),Wr=16807*Wr%2147483647,(Wr-1)/2147483646},degToRad:function(r){return r*On},radToDeg:function(r){return r*Ki},isPowerOfTwo:oo,ceilPowerOfTwo:dc,floorPowerOfTwo:fc,setQuaternionFromProperEuler:function(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+n)/2),u=o((e+n)/2),h=s((e-n)/2),d=o((e-n)/2),f=s((n-e)/2),m=o((n-e)/2);switch(i){case"XYX":r.set(a*u,l*h,l*d,a*c);break;case"YZY":r.set(l*d,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*d,a*u,a*c);break;case"XZX":r.set(a*u,l*m,l*f,a*c);break;case"YXY":r.set(l*f,a*u,l*m,a*c);break;case"ZYZ":r.set(l*m,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}});class z{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}z.prototype.isVector2=!0;class ut{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],m=n[8],x=i[0],y=i[3],v=i[6],p=i[1],w=i[4],M=i[7],E=i[2],_=i[5],C=i[8];return s[0]=o*x+a*p+l*E,s[3]=o*y+a*w+l*_,s[6]=o*v+a*M+l*C,s[1]=c*x+u*p+h*E,s[4]=c*y+u*w+h*_,s[7]=c*v+u*M+h*C,s[2]=d*x+f*p+m*E,s[5]=d*y+f*w+m*_,s[8]=d*v+f*M+m*C,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,m=t*h+n*d+i*f;if(0===m)return this.set(0,0,0,0,0,0,0,0,0);const x=1/m;return e[0]=h*x,e[1]=(i*c-u*n)*x,e[2]=(a*n-i*o)*x,e[3]=d*x,e[4]=(u*t-i*l)*x,e[5]=(i*s-a*t)*x,e[6]=f*x,e[7]=(n*l-c*t)*x,e[8]=(o*t-n*s)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-i*c,i*l,-i*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],l=i[1],c=i[4],u=i[7];return i[0]=t*s+n*l,i[3]=t*o+n*c,i[6]=t*a+n*u,i[1]=-n*s+t*l,i[4]=-n*o+t*c,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}let li;ut.prototype.isMatrix3=!0;class ui{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===li&&(li=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),li.width=e.width,li.height=e.height;const n=li.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=li}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let uf=0;class ht extends Fn{constructor(e=ht.DEFAULT_IMAGE,t=ht.DEFAULT_MAPPING,n=Ct,i=Ct,s=lt,o=1008,a=kt,l=1009,c=1,u=Lt){super(),Object.defineProperty(this,"id",{value:uf++}),this.uuid=Rt(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new z(0,0),this.repeat=new z(1,1),this.center=new z(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ut,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const i=this.image;if(void 0===i.uuid&&(i.uuid=Rt()),!t&&void 0===e.images[i.uuid]){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)s.push(ao(i[o].isDataTexture?i[o].image:i[o]))}else s=ao(i);e.images[i.uuid]={uuid:i.uuid,url:s}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case Ct:e.x=e.x<0?0:1;break;case 1002:e.x=1===Math.abs(Math.floor(e.x)%2)?Math.ceil(e.x)-e.x:e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case Ct:e.y=e.y<0?0:1;break;case 1002:e.y=1===Math.abs(Math.floor(e.y)%2)?Math.ceil(e.y)-e.y:e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function ao(r){return"undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap?ui.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}ht.DEFAULT_IMAGE=void 0,ht.DEFAULT_MAPPING=300,ht.prototype.isTexture=!0;class Ne{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const o=.01,a=.1,l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],m=l[9],x=l[2],y=l[6],v=l[10];if(Math.abs(u-d)<o&&Math.abs(h-x)<o&&Math.abs(m-y)<o){if(Math.abs(u+d)<a&&Math.abs(h+x)<a&&Math.abs(m+y)<a&&Math.abs(c+f+v-3)<a)return this.set(1,0,0,0),this;t=Math.PI;const w=(c+1)/2,M=(f+1)/2,E=(v+1)/2,_=(u+d)/4,C=(h+x)/4,L=(m+y)/4;return w>M&&w>E?w<o?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(w),i=_/n,s=C/n):M>E?M<o?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(M),n=_/i,s=L/i):E<o?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(E),n=C/s,i=L/s),this.set(n,i,s,t),this}let p=Math.sqrt((y-m)*(y-m)+(h-x)*(h-x)+(d-u)*(d-u));return Math.abs(p)<.001&&(p=1),this.x=(y-m)/p,this.y=(h-x)/p,this.z=(d-u)/p,this.w=Math.acos((c+f+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}Ne.prototype.isVector4=!0;class gn extends Fn{constructor(e,t,n){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new Ne(0,0,e,t),this.scissorTest=!1,this.viewport=new Ne(0,0,e,t),this.texture=new ht(void 0,(n=n||{}).mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:lt,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}gn.prototype.isWebGLRenderTarget=!0,class extends gn{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}.prototype.isWebGLMultisampleRenderTarget=!0;class _t{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=s[o+0],f=s[o+1],m=s[o+2],x=s[o+3];if(0===a)return e[t+0]=l,e[t+1]=c,e[t+2]=u,void(e[t+3]=h);if(1===a)return e[t+0]=d,e[t+1]=f,e[t+2]=m,void(e[t+3]=x);if(h!==x||l!==d||c!==f||u!==m){let y=1-a;const v=l*d+c*f+u*m+h*x,p=v>=0?1:-1,w=1-v*v;if(w>Number.EPSILON){const E=Math.sqrt(w),_=Math.atan2(E,v*p);y=Math.sin(y*_)/E,a=Math.sin(a*_)/E}const M=a*p;if(l=l*y+d*M,c=c*y+f*M,u=u*y+m*M,h=h*y+x*M,y===1-a){const E=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=E,c*=E,u*=E,h*=E}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],d=s[o+1],f=s[o+2],m=s[o+3];return e[t]=a*m+u*h+l*f-c*d,e[t+1]=l*m+u*d+c*h-a*f,e[t+2]=c*m+u*f+a*d-l*h,e[t+3]=u*m-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),d=l(n/2),f=l(i/2),m=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*m,this._y=c*f*h-d*u*m,this._z=c*u*m+d*f*h,this._w=c*u*h-d*f*m;break;case"YXZ":this._x=d*u*h+c*f*m,this._y=c*f*h-d*u*m,this._z=c*u*m-d*f*h,this._w=c*u*h+d*f*m;break;case"ZXY":this._x=d*u*h-c*f*m,this._y=c*f*h+d*u*m,this._z=c*u*m+d*f*h,this._w=c*u*h-d*f*m;break;case"ZYX":this._x=d*u*h-c*f*m,this._y=c*f*h+d*u*m,this._z=c*u*m-d*f*h,this._w=c*u*h+d*f*m;break;case"YZX":this._x=d*u*h+c*f*m,this._y=c*f*h+d*u*m,this._z=c*u*m-d*f*h,this._w=c*u*h-d*f*m;break;case"XZY":this._x=d*u*h-c*f*m,this._y=c*f*h-d*u*m,this._z=c*u*m+d*f*h,this._w=c*u*h+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(s-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(yt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*n+t*this._x,this._y=f*i+t*this._y,this._z=f*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}_t.prototype.isQuaternion=!0;class b{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(pc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(pc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*i-a*n,u=l*n+a*t-s*i,h=l*i+s*n-o*t,d=-s*t-o*n-a*i;return this.x=c*l+d*-s+u*-a-h*-o,this.y=u*l+d*-o+h*-s-c*-a,this.z=h*l+d*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return co.copy(this).projectOnVector(e),this.sub(co)}reflect(e){return this.sub(co.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}b.prototype.isVector3=!0;const co=new b,pc=new _t;class It{constructor(e=new b(1/0,1/0,1/0),t=new b(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],h=e[l+1],d=e[l+2];u<t&&(t=u),h<n&&(n=h),d<i&&(i=d),u>s&&(s=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),h=e.getY(l),d=e.getZ(l);u<t&&(t=u),h<n&&(n=h),d<i&&(i=d),u>s&&(s=u),h>o&&(o=h),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=nr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new b),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new b),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),lo.copy(t.boundingBox),lo.applyMatrix4(e.matrixWorld),this.union(lo));const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new b),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,nr),nr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ir),qr.subVectors(this.max,ir),hi.subVectors(e.a,ir),di.subVectors(e.b,ir),fi.subVectors(e.c,ir),vn.subVectors(di,hi),xn.subVectors(fi,di),Bn.subVectors(hi,fi);let t=[0,-vn.z,vn.y,0,-xn.z,xn.y,0,-Bn.z,Bn.y,vn.z,0,-vn.x,xn.z,0,-xn.x,Bn.z,0,-Bn.x,-vn.y,vn.x,0,-xn.y,xn.x,0,-Bn.y,Bn.x,0];return!(!uo(t,hi,di,fi,qr)||(t=[1,0,0,0,1,0,0,0,1],!uo(t,hi,di,fi,qr)))&&(Zr.crossVectors(vn,xn),t=[Zr.x,Zr.y,Zr.z],uo(t,hi,di,fi,qr))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new b),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return nr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(nr).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(tn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),tn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),tn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),tn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),tn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),tn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),tn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),tn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(tn)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}It.prototype.isBox3=!0;const tn=[new b,new b,new b,new b,new b,new b,new b,new b],nr=new b,lo=new It,hi=new b,di=new b,fi=new b,vn=new b,xn=new b,Bn=new b,ir=new b,qr=new b,Zr=new b,Nn=new b;function uo(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Nn.fromArray(r,s);const a=i.x*Math.abs(Nn.x)+i.y*Math.abs(Nn.y)+i.z*Math.abs(Nn.z),l=e.dot(Nn),c=t.dot(Nn),u=n.dot(Nn);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const df=new It,mc=new b,ho=new b,fo=new b;class kn{constructor(e=new b,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):df.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new b),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new It),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){fo.subVectors(e,this.center);const t=fo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=.5*(n-this.radius);this.center.add(fo.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return ho.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(mc.copy(e.center).add(ho)),this.expandByPoint(mc.copy(e.center).sub(ho)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const nn=new b,po=new b,Xr=new b,yn=new b,mo=new b,Yr=new b,go=new b;class zn{constructor(e=new b,t=new b(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new b),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,nn)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new b),t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=nn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(nn.copy(this.direction).multiplyScalar(t).add(this.origin),nn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){po.copy(e).add(t).multiplyScalar(.5),Xr.copy(t).sub(e).normalize(),yn.copy(this.origin).sub(po);const s=.5*e.distanceTo(t),o=-this.direction.dot(Xr),a=yn.dot(this.direction),l=-yn.dot(Xr),c=yn.lengthSq(),u=Math.abs(1-o*o);let h,d,f,m;if(u>0)if(h=o*l-a,d=o*a-l,m=s*u,h>=0)if(d>=-m)if(d<=m){const x=1/u;h*=x,d*=x,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-m?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=m?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(h).add(this.origin),i&&i.copy(Xr).multiplyScalar(d).add(po),f}intersectSphere(e,t){nn.subVectors(e.center,this.origin);const n=nn.dot(this.direction),i=nn.dot(nn)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return a<0&&l<0?null:this.at(a<0?l:a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>i||((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),n>l||a>i)||((a>n||n!=n)&&(n=a),(l<i||i!=i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return null!==this.intersectBox(e,nn)}intersectTriangle(e,t,n,i,s){mo.subVectors(t,e),Yr.subVectors(n,e),go.crossVectors(mo,Yr);let a,o=this.direction.dot(go);if(o>0){if(i)return null;a=1}else{if(!(o<0))return null;a=-1,o=-o}yn.subVectors(this.origin,e);const l=a*this.direction.dot(Yr.crossVectors(yn,Yr));if(l<0)return null;const c=a*this.direction.dot(mo.cross(yn));if(c<0||l+c>o)return null;const u=-a*yn.dot(go);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class le{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,l,c,u,h,d,f,m,x,y){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=h,v[14]=d,v[3]=f,v[7]=m,v[11]=x,v[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new le).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/pi.setFromMatrixColumn(e,0).length(),s=1/pi.setFromMatrixColumn(e,1).length(),o=1/pi.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if("XYZ"===e.order){const d=o*u,f=o*h,m=a*u,x=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=f+m*c,t[5]=d-x*c,t[9]=-a*l,t[2]=x-d*c,t[6]=m+f*c,t[10]=o*l}else if("YXZ"===e.order){const d=l*u,f=l*h,m=c*u,x=c*h;t[0]=d+x*a,t[4]=m*a-f,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-m,t[6]=x+d*a,t[10]=o*l}else if("ZXY"===e.order){const d=l*u,f=l*h,m=c*u,x=c*h;t[0]=d-x*a,t[4]=-o*h,t[8]=m+f*a,t[1]=f+m*a,t[5]=o*u,t[9]=x-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if("ZYX"===e.order){const d=o*u,f=o*h,m=a*u,x=a*h;t[0]=l*u,t[4]=m*c-f,t[8]=d*c+x,t[1]=l*h,t[5]=x*c+d,t[9]=f*c-m,t[2]=-c,t[6]=a*l,t[10]=o*l}else if("YZX"===e.order){const d=o*l,f=o*c,m=a*l,x=a*c;t[0]=l*u,t[4]=x-d*h,t[8]=m*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=f*h+m,t[10]=d-x*h}else if("XZY"===e.order){const d=o*l,f=o*c,m=a*l,x=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+x,t[5]=o*u,t[9]=f*h-m,t[2]=m*h-f,t[6]=a*u,t[10]=x*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ff,e,pf)}lookAt(e,t,n){const i=this.elements;return Dt.subVectors(e,t),0===Dt.lengthSq()&&(Dt.z=1),Dt.normalize(),_n.crossVectors(n,Dt),0===_n.lengthSq()&&(1===Math.abs(n.z)?Dt.x+=1e-4:Dt.z+=1e-4,Dt.normalize(),_n.crossVectors(n,Dt)),_n.normalize(),jr.crossVectors(Dt,_n),i[0]=_n.x,i[4]=jr.x,i[8]=Dt.x,i[1]=_n.y,i[5]=jr.y,i[9]=Dt.y,i[2]=_n.z,i[6]=jr.z,i[10]=Dt.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],m=n[2],x=n[6],y=n[10],v=n[14],p=n[3],w=n[7],M=n[11],E=n[15],_=i[0],C=i[4],L=i[8],D=i[12],B=i[1],G=i[5],k=i[9],R=i[13],F=i[2],O=i[6],I=i[10],X=i[14],K=i[3],j=i[7],ae=i[11],oe=i[15];return s[0]=o*_+a*B+l*F+c*K,s[4]=o*C+a*G+l*O+c*j,s[8]=o*L+a*k+l*I+c*ae,s[12]=o*D+a*R+l*X+c*oe,s[1]=u*_+h*B+d*F+f*K,s[5]=u*C+h*G+d*O+f*j,s[9]=u*L+h*k+d*I+f*ae,s[13]=u*D+h*R+d*X+f*oe,s[2]=m*_+x*B+y*F+v*K,s[6]=m*C+x*G+y*O+v*j,s[10]=m*L+x*k+y*I+v*ae,s[14]=m*D+x*R+y*X+v*oe,s[3]=p*_+w*B+M*F+E*K,s[7]=p*C+w*G+M*O+E*j,s[11]=p*L+w*k+M*I+E*ae,s[15]=p*D+w*R+M*X+E*oe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14];return e[3]*(+s*l*h-i*c*h-s*a*d+n*c*d+i*a*f-n*l*f)+e[7]*(+t*l*f-t*c*d+s*o*d-i*o*f+i*c*u-s*l*u)+e[11]*(+t*c*h-t*a*f-s*o*h+n*o*f+s*a*u-n*c*u)+e[15]*(-i*a*u-t*l*h+t*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],m=e[12],x=e[13],y=e[14],v=e[15],p=h*y*c-x*d*c+x*l*f-a*y*f-h*l*v+a*d*v,w=m*d*c-u*y*c-m*l*f+o*y*f+u*l*v-o*d*v,M=u*x*c-m*h*c+m*a*f-o*x*f-u*a*v+o*h*v,E=m*h*l-u*x*l-m*a*d+o*x*d+u*a*y-o*h*y,_=t*p+n*w+i*M+s*E;if(0===_)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const C=1/_;return e[0]=p*C,e[1]=(x*d*s-h*y*s-x*i*f+n*y*f+h*i*v-n*d*v)*C,e[2]=(a*y*s-x*l*s+x*i*c-n*y*c-a*i*v+n*l*v)*C,e[3]=(h*l*s-a*d*s-h*i*c+n*d*c+a*i*f-n*l*f)*C,e[4]=w*C,e[5]=(u*y*s-m*d*s+m*i*f-t*y*f-u*i*v+t*d*v)*C,e[6]=(m*l*s-o*y*s-m*i*c+t*y*c+o*i*v-t*l*v)*C,e[7]=(o*d*s-u*l*s+u*i*c-t*d*c-o*i*f+t*l*f)*C,e[8]=M*C,e[9]=(m*h*s-u*x*s-m*n*f+t*x*f+u*n*v-t*h*v)*C,e[10]=(o*x*s-m*a*s+m*n*c-t*x*c-o*n*v+t*a*v)*C,e[11]=(u*a*s-o*h*s-u*n*c+t*h*c+o*n*f-t*a*f)*C,e[12]=E*C,e[13]=(u*x*i-m*h*i+m*n*d-t*x*d-u*n*y+t*h*y)*C,e[14]=(m*a*i-o*x*i-m*n*l+t*x*l+o*n*y-t*a*y)*C,e[15]=(o*h*i-u*a*i+u*n*l-t*h*l-o*n*d+t*a*d)*C,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,m=s*h,x=o*u,y=o*h,v=a*h,p=l*c,w=l*u,M=l*h,E=n.x,_=n.y,C=n.z;return i[0]=(1-(x+v))*E,i[1]=(f+M)*E,i[2]=(m-w)*E,i[3]=0,i[4]=(f-M)*_,i[5]=(1-(d+v))*_,i[6]=(y+p)*_,i[7]=0,i[8]=(m+w)*C,i[9]=(y-p)*C,i[10]=(1-(d+x))*C,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=pi.set(i[0],i[1],i[2]).length();const o=pi.set(i[4],i[5],i[6]).length(),a=pi.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],zt.copy(this);const c=1/s,u=1/o,h=1/a;return zt.elements[0]*=c,zt.elements[1]*=c,zt.elements[2]*=c,zt.elements[4]*=u,zt.elements[5]*=u,zt.elements[6]*=u,zt.elements[8]*=h,zt.elements[9]*=h,zt.elements[10]*=h,t.setFromRotationMatrix(zt),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),d=-(o+s)/(o-s),f=-2*o*s/(o-s);return a[0]=2*s/(t-e),a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,l=1/(t-e),c=1/(n-i),u=1/(o-s),h=(t+e)*l,d=(n+i)*c,f=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}le.prototype.isMatrix4=!0;const pi=new b,zt=new le,ff=new b(0,0,0),pf=new b(1,1,1),_n=new b,jr=new b,Dt=new b,gc=new le,vc=new _t;class mi{constructor(e=0,t=0,n=0,i=mi.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){const i=e.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(yt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-yt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-yt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(yt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-yt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return gc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(gc,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return vc.setFromEuler(this),this.setFromQuaternion(vc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new b(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}mi.prototype.isEuler=!0,mi.DefaultOrder="XYZ",mi.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class xc{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let mf=0;const yc=new b,gi=new _t,rn=new le,Jr=new b,rr=new b,gf=new b,vf=new _t,_c=new b(1,0,0),bc=new b(0,1,0),wc=new b(0,0,1),xf={type:"added"},Mc={type:"removed"};class Pe extends Fn{constructor(){super(),Object.defineProperty(this,"id",{value:mf++}),this.uuid=Rt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Pe.DefaultUp.clone();const e=new b,t=new mi,n=new _t,i=new b(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new le},normalMatrix:{value:new ut}}),this.matrix=new le,this.matrixWorld=new le,this.matrixAutoUpdate=Pe.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new xc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return gi.setFromAxisAngle(e,t),this.quaternion.multiply(gi),this}rotateOnWorldAxis(e,t){return gi.setFromAxisAngle(e,t),this.quaternion.premultiply(gi),this}rotateX(e){return this.rotateOnAxis(_c,e)}rotateY(e){return this.rotateOnAxis(bc,e)}rotateZ(e){return this.rotateOnAxis(wc,e)}translateOnAxis(e,t){return yc.copy(e).applyQuaternion(this.quaternion),this.position.add(yc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(_c,e)}translateY(e){return this.translateOnAxis(bc,e)}translateZ(e){return this.translateOnAxis(wc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(rn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Jr.copy(e):Jr.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),rr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?rn.lookAt(rr,Jr,this.up):rn.lookAt(Jr,rr,this.up),this.quaternion.setFromRotationMatrix(rn),i&&(rn.extractRotation(i.matrixWorld),gi.setFromRotationMatrix(rn),this.quaternion.premultiply(gi.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(xf)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Mc)),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Mc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),rn.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),rn.multiply(e.parent.matrixWorld)),e.applyMatrix4(rn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(void 0!==o)return o}}getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new b),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new _t),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rr,e,gf),e}getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new b),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(rr,vf,e),e}getWorldDirection(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new b),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function s(a,l){return void 0===a[l.uuid]&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++)s(e.shapes,l[c]);else s(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++)i.animations.push(s(e.animations,this.animations[a]))}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let n=0;n<e.children.length;n++)this.add(e.children[n].clone());return this}}Pe.DefaultUp=new b(0,1,0),Pe.DefaultMatrixAutoUpdate=!0,Pe.prototype.isObject3D=!0;const vo=new b,yf=new b,_f=new ut;class Zt{constructor(e=new b(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=vo.subVectors(n,t).cross(yf.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new b),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new b);const n=e.delta(vo),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new b),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||_f.getNormalMatrix(e),i=this.coplanarPoint(vo).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Zt.prototype.isPlane=!0;const Ut=new b,sn=new b,xo=new b,on=new b,vi=new b,xi=new b,Sc=new b,yo=new b,_o=new b,bo=new b;class it{constructor(e=new b,t=new b,n=new b){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){void 0===i&&(console.warn("THREE.Triangle: .getNormal() target is now required"),i=new b),i.subVectors(n,t),Ut.subVectors(e,t),i.cross(Ut);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Ut.subVectors(i,t),sn.subVectors(n,t),xo.subVectors(e,t);const o=Ut.dot(Ut),a=Ut.dot(sn),l=Ut.dot(xo),c=sn.dot(sn),u=sn.dot(xo),h=o*c-a*a;if(void 0===s&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),s=new b),0===h)return s.set(-2,-1,-1);const d=1/h,f=(c*l-a*u)*d,m=(o*u-a*l)*d;return s.set(1-f-m,m,f)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,on),on.x>=0&&on.y>=0&&on.x+on.y<=1}static getUV(e,t,n,i,s,o,a,l){return this.getBarycoord(e,t,n,i,on),l.set(0,0),l.addScaledVector(s,on.x),l.addScaledVector(o,on.y),l.addScaledVector(a,on.z),l}static isFrontFacing(e,t,n,i){return Ut.subVectors(n,t),sn.subVectors(e,t),Ut.cross(sn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ut.subVectors(this.c,this.b),sn.subVectors(this.a,this.b),.5*Ut.cross(sn).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new b),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return it.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Zt),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return it.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return it.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return it.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return it.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new b);const n=this.a,i=this.b,s=this.c;let o,a;vi.subVectors(i,n),xi.subVectors(s,n),yo.subVectors(e,n);const l=vi.dot(yo),c=xi.dot(yo);if(l<=0&&c<=0)return t.copy(n);_o.subVectors(e,i);const u=vi.dot(_o),h=xi.dot(_o);if(u>=0&&h<=u)return t.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(vi,o);bo.subVectors(e,s);const f=vi.dot(bo),m=xi.dot(bo);if(m>=0&&f<=m)return t.copy(s);const x=f*c-l*m;if(x<=0&&c>=0&&m<=0)return a=c/(c-m),t.copy(n).addScaledVector(xi,a);const y=u*m-f*h;if(y<=0&&h-u>=0&&f-m>=0)return Sc.subVectors(s,i),a=(h-u)/(h-u+(f-m)),t.copy(i).addScaledVector(Sc,a);const v=1/(y+x+d);return o=x*v,a=d*v,t.copy(n).addScaledVector(vi,o).addScaledVector(xi,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let bf=0;function at(){Object.defineProperty(this,"id",{value:bf++}),this.uuid=Rt(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}at.prototype=Object.assign(Object.create(Fn.prototype),{constructor:at,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(r){if(void 0!==r)for(const e in r){const t=r[e];if(void 0===t){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;continue}const n=this[e];void 0!==n?n&&n.isColor?n.set(t):n&&n.isVector3&&t&&t.isVector3?n.copy(t):this[e]=t:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(r){const e=void 0===r||"string"==typeof r;e&&(r={textures:{},images:{}});const t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(i){const s=[];for(const o in i){const a=i[o];delete a.metadata,s.push(a)}return s}if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),void 0!==this.roughness&&(t.roughness=this.roughness),void 0!==this.metalness&&(t.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(t.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),void 0!==this.shininess&&(t.shininess=this.shininess),void 0!==this.clearcoat&&(t.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(r).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(r).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(r).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(r).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(r).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(r).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(r).uuid,t.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(r).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(r).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(r).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(r).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(r).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(r).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(r).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(r).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(r).uuid,void 0!==this.combine&&(t.combine=this.combine)),void 0!==this.envMapIntensity&&(t.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(t.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(t.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(r).uuid),void 0!==this.size&&(t.size=this.size),null!==this.shadowSide&&(t.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(t.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(t.blending=this.blending),0!==this.side&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),!0===this.transparent&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.colorWrite=this.colorWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(t.rotation=this.rotation),!0===this.polygonOffset&&(t.polygonOffset=!0),0!==this.polygonOffsetFactor&&(t.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(t.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(t.linewidth=this.linewidth),void 0!==this.dashSize&&(t.dashSize=this.dashSize),void 0!==this.gapSize&&(t.gapSize=this.gapSize),void 0!==this.scale&&(t.scale=this.scale),!0===this.dithering&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(t.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(t.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(t.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(t.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(t.morphTargets=!0),!0===this.morphNormals&&(t.morphNormals=!0),!0===this.skinning&&(t.skinning=!0),!0===this.flatShading&&(t.flatShading=this.flatShading),!1===this.visible&&(t.visible=!1),!1===this.toneMapped&&(t.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(t.userData=this.userData),e){const i=n(r.textures),s=n(r.images);i.length>0&&(t.textures=i),s.length>0&&(t.images=s)}return t},clone:function(){return(new this.constructor).copy(this)},copy:function(r){this.name=r.name,this.fog=r.fog,this.blending=r.blending,this.side=r.side,this.vertexColors=r.vertexColors,this.opacity=r.opacity,this.transparent=r.transparent,this.blendSrc=r.blendSrc,this.blendDst=r.blendDst,this.blendEquation=r.blendEquation,this.blendSrcAlpha=r.blendSrcAlpha,this.blendDstAlpha=r.blendDstAlpha,this.blendEquationAlpha=r.blendEquationAlpha,this.depthFunc=r.depthFunc,this.depthTest=r.depthTest,this.depthWrite=r.depthWrite,this.stencilWriteMask=r.stencilWriteMask,this.stencilFunc=r.stencilFunc,this.stencilRef=r.stencilRef,this.stencilFuncMask=r.stencilFuncMask,this.stencilFail=r.stencilFail,this.stencilZFail=r.stencilZFail,this.stencilZPass=r.stencilZPass,this.stencilWrite=r.stencilWrite;const e=r.clippingPlanes;let t=null;if(null!==e){const n=e.length;t=new Array(n);for(let i=0;i!==n;++i)t[i]=e[i].clone()}return this.clippingPlanes=t,this.clipIntersection=r.clipIntersection,this.clipShadows=r.clipShadows,this.shadowSide=r.shadowSide,this.colorWrite=r.colorWrite,this.precision=r.precision,this.polygonOffset=r.polygonOffset,this.polygonOffsetFactor=r.polygonOffsetFactor,this.polygonOffsetUnits=r.polygonOffsetUnits,this.dithering=r.dithering,this.alphaTest=r.alphaTest,this.alphaToCoverage=r.alphaToCoverage,this.premultipliedAlpha=r.premultipliedAlpha,this.visible=r.visible,this.toneMapped=r.toneMapped,this.userData=JSON.parse(JSON.stringify(r.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(at.prototype,"needsUpdate",{set:function(r){!0===r&&this.version++}});const Tc={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Gt={h:0,s:0,l:0},Qr={h:0,s:0,l:0};function wo(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+6*(e-r)*t:t<.5?e:t<2/3?r+6*(e-r)*(2/3-t):r}function Mo(r){return r<.04045?.0773993808*r:Math.pow(.9478672986*r+.0521327014,2.4)}function So(r){return r<.0031308?12.92*r:1.055*Math.pow(r,.41666)-.055}let se=(()=>{class r{constructor(t,n,i){return void 0===n&&void 0===i?this.set(t):this.setRGB(t,n,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,n,i){return this.r=t,this.g=n,this.b=i,this}setHSL(t,n,i){if(t=so(t,1),n=yt(n,0,1),i=yt(i,0,1),0===n)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+n):i+n-i*n,o=2*i-s;this.r=wo(o,s,t+1/3),this.g=wo(o,s,t),this.b=wo(o,s,t-1/3)}return this}setStyle(t){function n(s){void 0!==s&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let s;const a=i[2];switch(i[1]){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(l,c,u)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(3===o)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,this;if(6===o)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const n=Tc[t.toLowerCase()];return void 0!==n?this.setHex(n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,n=2){return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}copyLinearToGamma(t,n=2){const i=n>0?1/n:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Mo(t.r),this.g=Mo(t.g),this.b=Mo(t.b),this}copyLinearToSRGB(t){return this.r=So(t.r),this.g=So(t.g),this.b=So(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const n=this.r,i=this.g,s=this.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4}l/=6}return t.h=l,t.s=c,t.l=u,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,n,i){return this.getHSL(Gt),Gt.h+=t,Gt.s+=n,Gt.l+=i,this.setHSL(Gt.h,Gt.s,Gt.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpColors(t,n,i){return this.r=t.r+(n.r-t.r)*i,this.g=t.g+(n.g-t.g)*i,this.b=t.b+(n.b-t.b)*i,this}lerpHSL(t,n){this.getHSL(Gt),t.getHSL(Qr);const i=er(Gt.h,Qr.h,n),s=er(Gt.s,Qr.s,n),o=er(Gt.l,Qr.l,n);return this.setHSL(i,s,o),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}return r.NAMES=Tc,r})();se.prototype.isColor=!0,se.prototype.r=1,se.prototype.g=1,se.prototype.b=1;class bt extends at{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}bt.prototype.isMeshBasicMaterial=!0;const qe=new b,$r=new z;class Be{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=Qi,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new se),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new z),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new b),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new Ne),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)$r.fromBufferAttribute(this,t),$r.applyMatrix3(e),this.setXY(t,$r.x,$r.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)qe.fromBufferAttribute(this,t),qe.applyMatrix3(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.applyMatrix4(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.applyNormalMatrix(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)qe.x=this.getX(t),qe.y=this.getY(t),qe.z=this.getZ(t),qe.transformDirection(e),this.setXYZ(t,qe.x,qe.y,qe.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.array[0+(e*=this.itemSize)]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Qi&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}Be.prototype.isBufferAttribute=!0;class To extends Be{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Eo extends Be{constructor(e,t,n){super(new Uint32Array(e),t,n)}}(class extends Be{constructor(e,t,n){super(new Uint16Array(e),t,n)}}).prototype.isFloat16BufferAttribute=!0;class ce extends Be{constructor(e,t,n){super(new Float32Array(e),t,n)}}function Ec(r){if(0===r.length)return-1/0;let e=r[0];for(let t=1,n=r.length;t<n;++t)r[t]>e&&(e=r[t]);return e}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;let Pf=0;const Xt=new le,Ao=new Pe,yi=new b,Ft=new It,or=new It,dt=new b;class de extends Fn{constructor(){super(),Object.defineProperty(this,"id",{value:Pf++}),this.uuid=Rt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return this.index=Array.isArray(e)?new(Ec(e)>65535?Eo:To)(e,1):e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const s=(new ut).getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(e){return Xt.makeRotationX(e),this.applyMatrix4(Xt),this}rotateY(e){return Xt.makeRotationY(e),this.applyMatrix4(Xt),this}rotateZ(e){return Xt.makeRotationZ(e),this.applyMatrix4(Xt),this}translate(e,t,n){return Xt.makeTranslation(e,t,n),this.applyMatrix4(Xt),this}scale(e,t,n){return Xt.makeScale(e,t,n),this.applyMatrix4(Xt),this}lookAt(e){return Ao.lookAt(e),Ao.updateMatrix(),this.applyMatrix4(Ao.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(yi).negate(),this.translate(yi.x,yi.y,yi.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new ce(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new It);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new b(-1/0,-1/0,-1/0),new b(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++)Ft.setFromBufferAttribute(t[n]),this.morphTargetsRelative?(dt.addVectors(this.boundingBox.min,Ft.min),this.boundingBox.expandByPoint(dt),dt.addVectors(this.boundingBox.max,Ft.max),this.boundingBox.expandByPoint(dt)):(this.boundingBox.expandByPoint(Ft.min),this.boundingBox.expandByPoint(Ft.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new kn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new b,1/0);if(e){const n=this.boundingSphere.center;if(Ft.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++)or.setFromBufferAttribute(t[s]),this.morphTargetsRelative?(dt.addVectors(Ft.min,or.min),Ft.expandByPoint(dt),dt.addVectors(Ft.max,or.max),Ft.expandByPoint(dt)):(Ft.expandByPoint(or.min),Ft.expandByPoint(or.max));Ft.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)dt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(dt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)dt.fromBufferAttribute(a,c),l&&(yi.fromBufferAttribute(e,c),dt.add(yi)),i=Math.max(i,n.distanceToSquared(dt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;void 0===t.tangent&&this.setAttribute("tangent",new Be(new Float32Array(4*a),4));const l=t.tangent.array,c=[],u=[];for(let B=0;B<a;B++)c[B]=new b,u[B]=new b;const h=new b,d=new b,f=new b,m=new z,x=new z,y=new z,v=new b,p=new b;function w(B,G,k){h.fromArray(i,3*B),d.fromArray(i,3*G),f.fromArray(i,3*k),m.fromArray(o,2*B),x.fromArray(o,2*G),y.fromArray(o,2*k),d.sub(h),f.sub(h),x.sub(m),y.sub(m);const R=1/(x.x*y.y-y.x*x.y);!isFinite(R)||(v.copy(d).multiplyScalar(y.y).addScaledVector(f,-x.y).multiplyScalar(R),p.copy(f).multiplyScalar(x.x).addScaledVector(d,-y.x).multiplyScalar(R),c[B].add(v),c[G].add(v),c[k].add(v),u[B].add(p),u[G].add(p),u[k].add(p))}let M=this.groups;0===M.length&&(M=[{start:0,count:n.length}]);for(let B=0,G=M.length;B<G;++B){const k=M[B],R=k.start;for(let O=R,I=R+k.count;O<I;O+=3)w(n[O+0],n[O+1],n[O+2])}const E=new b,_=new b,C=new b,L=new b;function D(B){C.fromArray(s,3*B),L.copy(C);const G=c[B];E.copy(G),E.sub(C.multiplyScalar(C.dot(G))).normalize(),_.crossVectors(L,G);const R=_.dot(u[B])<0?-1:1;l[4*B]=E.x,l[4*B+1]=E.y,l[4*B+2]=E.z,l[4*B+3]=R}for(let B=0,G=M.length;B<G;++B){const k=M[B],R=k.start;for(let O=R,I=R+k.count;O<I;O+=3)D(n[O+0]),D(n[O+1]),D(n[O+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new Be(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new b,s=new b,o=new b,a=new b,l=new b,c=new b,u=new b,h=new b;if(e)for(let d=0,f=e.count;d<f;d+=3){const m=e.getX(d+0),x=e.getX(d+1),y=e.getX(d+2);i.fromBufferAttribute(t,m),s.fromBufferAttribute(t,x),o.fromBufferAttribute(t,y),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,m),l.fromBufferAttribute(n,x),c.fromBufferAttribute(n,y),a.add(u),l.add(u),c.add(u),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(x,l.x,l.y,l.z),n.setXYZ(y,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!e||!e.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(void 0===e.attributes[i])continue;const o=n[i].array,a=e.attributes[i],l=a.array,c=a.itemSize*t,u=Math.min(l.length,o.length-c);for(let h=0,d=c;h<u;h++,d++)o[d]=l[h]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)dt.fromBufferAttribute(e,t),dt.normalize(),e.setXYZ(t,dt.x,dt.y,dt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,m=0;for(let x=0,y=l.length;x<y;x++){f=l[x]*u;for(let v=0;v<u;v++)d[m++]=c[f++]}return new Be(d,u,h)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new de,n=this.index.array,i=this.attributes;for(const a in i){const c=e(i[a],n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const f=e(c[u],n);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const l=this.parameters;for(const c in l)void 0!==l[c]&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n)e.data.attributes[l]=n[l].toJSON(e.data);const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++)u.push(c[h].toJSON(e.data));u.length>0&&(i[l]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return null!==a&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return(new de).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i)this.setAttribute(c,i[c].clone(t));const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;null!==a&&(this.boundingBox=a.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}de.prototype.isBufferGeometry=!0;const Ac=new le,_i=new zn,Co=new kn,bn=new b,wn=new b,Mn=new b,Lo=new b,Po=new b,Ro=new b,Kr=new b,es=new b,ts=new b,ns=new z,is=new z,rs=new z,Io=new b,ss=new b;class Xe extends Pe{constructor(e=new de,t=new bt){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(void 0===i||(null===n.boundingSphere&&n.computeBoundingSphere(),Co.copy(n.boundingSphere),Co.applyMatrix4(s),!1===e.ray.intersectsSphere(Co))||(Ac.copy(s).invert(),_i.copy(e.ray).applyMatrix4(Ac),null!==n.boundingBox&&!1===_i.intersectsBox(n.boundingBox)))return;let o;if(n.isBufferGeometry){const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,h=n.attributes.uv,d=n.attributes.uv2,f=n.groups,m=n.drawRange;if(null!==a)if(Array.isArray(i))for(let x=0,y=f.length;x<y;x++){const v=f[x],p=i[v.materialIndex];for(let E=Math.max(v.start,m.start),_=Math.min(v.start+v.count,m.start+m.count);E<_;E+=3){const C=a.getX(E),L=a.getX(E+1),D=a.getX(E+2);o=os(this,p,e,_i,l,c,u,h,d,C,L,D),o&&(o.faceIndex=Math.floor(E/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else for(let v=Math.max(0,m.start),p=Math.min(a.count,m.start+m.count);v<p;v+=3){const w=a.getX(v),M=a.getX(v+1),E=a.getX(v+2);o=os(this,i,e,_i,l,c,u,h,d,w,M,E),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}else if(void 0!==l)if(Array.isArray(i))for(let x=0,y=f.length;x<y;x++){const v=f[x],p=i[v.materialIndex];for(let E=Math.max(v.start,m.start),_=Math.min(v.start+v.count,m.start+m.count);E<_;E+=3)o=os(this,p,e,_i,l,c,u,h,d,E,E+1,E+2),o&&(o.faceIndex=Math.floor(E/3),o.face.materialIndex=v.materialIndex,t.push(o))}else for(let v=Math.max(0,m.start),p=Math.min(l.count,m.start+m.count);v<p;v+=3)o=os(this,i,e,_i,l,c,u,h,d,v,v+1,v+2),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function os(r,e,t,n,i,s,o,a,l,c,u,h){bn.fromBufferAttribute(i,c),wn.fromBufferAttribute(i,u),Mn.fromBufferAttribute(i,h);const d=r.morphTargetInfluences;if(e.morphTargets&&s&&d){Kr.set(0,0,0),es.set(0,0,0),ts.set(0,0,0);for(let m=0,x=s.length;m<x;m++){const y=d[m],v=s[m];0!==y&&(Lo.fromBufferAttribute(v,c),Po.fromBufferAttribute(v,u),Ro.fromBufferAttribute(v,h),o?(Kr.addScaledVector(Lo,y),es.addScaledVector(Po,y),ts.addScaledVector(Ro,y)):(Kr.addScaledVector(Lo.sub(bn),y),es.addScaledVector(Po.sub(wn),y),ts.addScaledVector(Ro.sub(Mn),y)))}bn.add(Kr),wn.add(es),Mn.add(ts)}r.isSkinnedMesh&&e.skinning&&(r.boneTransform(c,bn),r.boneTransform(u,wn),r.boneTransform(h,Mn));const f=function(r,e,t,n,i,s,o,a){let l;if(l=1===e.side?n.intersectTriangle(o,s,i,!0,a):n.intersectTriangle(i,s,o,2!==e.side,a),null===l)return null;ss.copy(a),ss.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(ss);return c<t.near||c>t.far?null:{distance:c,point:ss.clone(),object:r}}(r,e,t,n,bn,wn,Mn,Io);if(f){a&&(ns.fromBufferAttribute(a,c),is.fromBufferAttribute(a,u),rs.fromBufferAttribute(a,h),f.uv=it.getUV(Io,bn,wn,Mn,ns,is,rs,new z)),l&&(ns.fromBufferAttribute(l,c),is.fromBufferAttribute(l,u),rs.fromBufferAttribute(l,h),f.uv2=it.getUV(Io,bn,wn,Mn,ns,is,rs,new z));const m={a:c,b:u,c:h,normal:new b,materialIndex:0};it.getNormal(bn,wn,Mn,m.normal),f.face=m}return f}Xe.prototype.isMesh=!0;class Un extends de{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;function m(x,y,v,p,w,M,E,_,C,L,D){const B=M/C,G=E/L,k=M/2,R=E/2,F=_/2,O=C+1,I=L+1;let X=0,K=0;const j=new b;for(let ae=0;ae<I;ae++){const oe=ae*G-R;for(let pe=0;pe<O;pe++)j[x]=(pe*B-k)*p,j[y]=oe*w,j[v]=F,c.push(j.x,j.y,j.z),j[x]=0,j[y]=0,j[v]=_>0?1:-1,u.push(j.x,j.y,j.z),h.push(pe/C),h.push(1-ae/L),X+=1}for(let ae=0;ae<L;ae++)for(let oe=0;oe<C;oe++){const _e=d+oe+O*(ae+1),V=d+(oe+1)+O*(ae+1),Ve=d+(oe+1)+O*ae;l.push(d+oe+O*ae,_e,Ve),l.push(_e,V,Ve),K+=6}a.addGroup(f,K,D),f+=K,d+=X}m("z","y","x",-1,-1,n,t,e,o,s,0),m("z","y","x",1,-1,n,t,-e,o,s,1),m("x","z","y",1,1,e,n,t,i,o,2),m("x","z","y",1,-1,e,n,-t,i,o,3),m("x","y","z",1,-1,e,t,n,i,s,4),m("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new ce(c,3)),this.setAttribute("normal",new ce(u,3)),this.setAttribute("uv",new ce(h,2))}}function bi(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];e[t][n]=i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.clone():Array.isArray(i)?i.slice():i}}return e}function wt(r){const e={};for(let t=0;t<r.length;t++){const n=bi(r[t]);for(const i in n)e[i]=n[i]}return e}const If={clone:bi,merge:wt};class Sn extends at{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=bi(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;t.uniforms[i]=o&&o.isTexture?{type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?{type:"c",value:o.getHex()}:o&&o.isVector2?{type:"v2",value:o.toArray()}:o&&o.isVector3?{type:"v3",value:o.toArray()}:o&&o.isVector4?{type:"v4",value:o.toArray()}:o&&o.isMatrix3?{type:"m3",value:o.toArray()}:o&&o.isMatrix4?{type:"m4",value:o.toArray()}:{value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)!0===this.extensions[i]&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}Sn.prototype.isShaderMaterial=!0;class as extends Pe{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new le,this.projectionMatrix=new le,this.projectionMatrixInverse=new le}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new b),this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}as.prototype.isCamera=!0;class ft extends as{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*Ki*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*On*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Ki*Math.atan(Math.tan(.5*On*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*On*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(null!==this.view&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,t-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;0!==a&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}ft.prototype.isPerspectiveCamera=!0;class Do extends Pe{constructor(e,t,n){if(super(),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const i=new ft(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new b(1,0,0)),this.add(i);const s=new ft(90,1,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new b(-1,0,0)),this.add(s);const o=new ft(90,1,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new b(0,1,0)),this.add(o);const a=new ft(90,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new b(0,-1,0)),this.add(a);const l=new ft(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new b(0,0,1)),this.add(l);const c=new ft(90,1,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new b(0,0,-1)),this.add(c)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,l,c]=this.children,u=e.xr.enabled,h=e.getRenderTarget();e.xr.enabled=!1;const d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(h),e.xr.enabled=u}}class ar extends ht{constructor(e,t,n,i,s,o,a,l,c,u){super(e=void 0!==e?e:[],t=void 0!==t?t:301,n,i,s,o,a=void 0!==a?a:Dn,l,c,u),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}ar.prototype.isCubeTexture=!0;class Fo extends gn{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),this.texture=new ar(void 0,(t=t||{}).mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:lt,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=kt,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n_uniforms={tEquirect:{value:null}},n_vertexShader="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",n_fragmentShader="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",i=new Un(5,5,5),s=new Sn({name:"CubemapFromEquirect",uniforms:bi(n_uniforms),vertexShader:n_vertexShader,fragmentShader:n_fragmentShader,side:1,blending:0});s.uniforms.tEquirect.value=t;const o=new Xe(i,s),a=t.minFilter;return 1008===t.minFilter&&(t.minFilter=lt),new Do(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}Fo.prototype.isWebGLCubeRenderTarget=!0;class cr extends ht{constructor(e,t,n,i,s,o,a,l,c,u,h,d){super(null,o,a,l,c,u,i,s,h,d),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==c?c:Ge,this.minFilter=void 0!==u?u:Ge,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}cr.prototype.isDataTexture=!0;const Si=new kn,cs=new b;class ls{constructor(e=new Zt,t=new Zt,n=new Zt,i=new Zt,s=new Zt,o=new Zt){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],h=n[7],d=n[8],f=n[9],m=n[10],x=n[11],y=n[12],v=n[13],p=n[14],w=n[15];return t[0].setComponents(a-i,h-l,x-d,w-y).normalize(),t[1].setComponents(a+i,h+l,x+d,w+y).normalize(),t[2].setComponents(a+s,h+c,x+f,w+v).normalize(),t[3].setComponents(a-s,h-c,x-f,w-v).normalize(),t[4].setComponents(a-o,h-u,x-m,w-p).normalize(),t[5].setComponents(a+o,h+u,x+m,w+p).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Si.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Si)}intersectsSprite(e){return Si.center.set(0,0,0),Si.radius=.7071067811865476,Si.applyMatrix4(e.matrixWorld),this.intersectsSphere(Si)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(cs.x=i.normal.x>0?e.max.x:e.min.x,cs.y=i.normal.y>0?e.max.y:e.min.y,cs.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(cs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Cc(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==t&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function Of(r,e){const t=e.isWebGL2,n=new WeakMap;return{get:function(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)},remove:function(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(r.deleteBuffer(u.buffer),n.delete(c))},update:function(c,u){if(c.isGLBufferAttribute){const d=n.get(c);return void((!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version}))}c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);void 0===h?n.set(c,function(c,u){const h=c.array,d=c.usage,f=r.createBuffer();r.bindBuffer(u,f),r.bufferData(u,h,d),c.onUploadCallback();let m=5126;return h instanceof Float32Array?m=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?t?m=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):m=5123:h instanceof Int16Array?m=5122:h instanceof Uint32Array?m=5125:h instanceof Int32Array?m=5124:h instanceof Int8Array?m=5120:h instanceof Uint8Array&&(m=5121),{buffer:f,type:m,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}(c,u)):h.version<c.version&&(function(c,u,h){const d=u.array,f=u.updateRange;r.bindBuffer(h,c),-1===f.count?r.bufferSubData(h,0,d):(t?r.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d,f.offset,f.count):r.bufferSubData(h,f.offset*d.BYTES_PER_ELEMENT,d.subarray(f.offset,f.offset+f.count)),f.count=-1)}(h.buffer,c,u),h.version=c.version)}}}class Gn extends de{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=e/a,d=t/l,f=[],m=[],x=[],y=[];for(let v=0;v<u;v++){const p=v*d-o;for(let w=0;w<c;w++)m.push(w*h-s,-p,0),x.push(0,0,1),y.push(w/a),y.push(1-v/l)}for(let v=0;v<l;v++)for(let p=0;p<a;p++){const M=p+c*(v+1),E=p+1+c*(v+1),_=p+1+c*v;f.push(p+c*v,M,_),f.push(M,E,_)}this.setIndex(f),this.setAttribute("position",new ce(m,3)),this.setAttribute("normal",new ce(x,3)),this.setAttribute("uv",new ce(y,2))}}const Ae={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},$={common:{diffuse:{value:new se(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new ut},uv2Transform:{value:new ut},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new z(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new se(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new se(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ut}},sprite:{diffuse:{value:new se(15658734)},opacity:{value:1},center:{value:new z(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new ut}}},Yt={basic:{uniforms:wt([$.common,$.specularmap,$.envmap,$.aomap,$.lightmap,$.fog]),vertexShader:Ae.meshbasic_vert,fragmentShader:Ae.meshbasic_frag},lambert:{uniforms:wt([$.common,$.specularmap,$.envmap,$.aomap,$.lightmap,$.emissivemap,$.fog,$.lights,{emissive:{value:new se(0)}}]),vertexShader:Ae.meshlambert_vert,fragmentShader:Ae.meshlambert_frag},phong:{uniforms:wt([$.common,$.specularmap,$.envmap,$.aomap,$.lightmap,$.emissivemap,$.bumpmap,$.normalmap,$.displacementmap,$.fog,$.lights,{emissive:{value:new se(0)},specular:{value:new se(1118481)},shininess:{value:30}}]),vertexShader:Ae.meshphong_vert,fragmentShader:Ae.meshphong_frag},standard:{uniforms:wt([$.common,$.envmap,$.aomap,$.lightmap,$.emissivemap,$.bumpmap,$.normalmap,$.displacementmap,$.roughnessmap,$.metalnessmap,$.fog,$.lights,{emissive:{value:new se(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ae.meshphysical_vert,fragmentShader:Ae.meshphysical_frag},toon:{uniforms:wt([$.common,$.aomap,$.lightmap,$.emissivemap,$.bumpmap,$.normalmap,$.displacementmap,$.gradientmap,$.fog,$.lights,{emissive:{value:new se(0)}}]),vertexShader:Ae.meshtoon_vert,fragmentShader:Ae.meshtoon_frag},matcap:{uniforms:wt([$.common,$.bumpmap,$.normalmap,$.displacementmap,$.fog,{matcap:{value:null}}]),vertexShader:Ae.meshmatcap_vert,fragmentShader:Ae.meshmatcap_frag},points:{uniforms:wt([$.points,$.fog]),vertexShader:Ae.points_vert,fragmentShader:Ae.points_frag},dashed:{uniforms:wt([$.common,$.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ae.linedashed_vert,fragmentShader:Ae.linedashed_frag},depth:{uniforms:wt([$.common,$.displacementmap]),vertexShader:Ae.depth_vert,fragmentShader:Ae.depth_frag},normal:{uniforms:wt([$.common,$.bumpmap,$.normalmap,$.displacementmap,{opacity:{value:1}}]),vertexShader:Ae.normal_vert,fragmentShader:Ae.normal_frag},sprite:{uniforms:wt([$.sprite,$.fog]),vertexShader:Ae.sprite_vert,fragmentShader:Ae.sprite_frag},background:{uniforms:{uvTransform:{value:new ut},t2D:{value:null}},vertexShader:Ae.background_vert,fragmentShader:Ae.background_frag},cube:{uniforms:wt([$.envmap,{opacity:{value:1}}]),vertexShader:Ae.cube_vert,fragmentShader:Ae.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ae.equirect_vert,fragmentShader:Ae.equirect_frag},distanceRGBA:{uniforms:wt([$.common,$.displacementmap,{referencePosition:{value:new b},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ae.distanceRGBA_vert,fragmentShader:Ae.distanceRGBA_frag},shadow:{uniforms:wt([$.lights,$.fog,{color:{value:new se(0)},opacity:{value:1}}]),vertexShader:Ae.shadow_vert,fragmentShader:Ae.shadow_frag}};function ig(r,e,t,n,i){const s=new se(0);let a,l,o=0,c=null,u=0,h=null;function f(m,x){t.buffers.color.setClear(m.r,m.g,m.b,x,i)}return{getClearColor:function(){return s},setClearColor:function(m,x=1){s.set(m),o=x,f(s,o)},getClearAlpha:function(){return o},setClearAlpha:function(m){o=m,f(s,o)},render:function(m,x,y,v){let p=!0===x.isScene?x.background:null;p&&p.isTexture&&(p=e.get(p));const w=r.xr,M=w.getSession&&w.getSession();M&&"additive"===M.environmentBlendMode&&(p=null),null===p?f(s,o):p&&p.isColor&&(f(p,1),v=!0),(r.autoClear||v)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),p&&(p.isCubeTexture||306===p.mapping)?(void 0===l&&(l=new Xe(new Un(1,1,1),new Sn({name:"BackgroundCubeMaterial",uniforms:bi(Yt.cube.uniforms),vertexShader:Yt.cube.vertexShader,fragmentShader:Yt.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(E,_,C){this.matrixWorld.copyPosition(C.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(l)),l.material.uniforms.envMap.value=p,l.material.uniforms.flipEnvMap.value=p.isCubeTexture&&p._needsFlipEnvMap?-1:1,(c!==p||u!==p.version||h!==r.toneMapping)&&(l.material.needsUpdate=!0,c=p,u=p.version,h=r.toneMapping),m.unshift(l,l.geometry,l.material,0,0,null)):p&&p.isTexture&&(void 0===a&&(a=new Xe(new Gn(2,2),new Sn({name:"BackgroundMaterial",uniforms:bi(Yt.background.uniforms),vertexShader:Yt.background.vertexShader,fragmentShader:Yt.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(a)),a.material.uniforms.t2D.value=p,!0===p.matrixAutoUpdate&&p.updateMatrix(),a.material.uniforms.uvTransform.value.copy(p.matrix),(c!==p||u!==p.version||h!==r.toneMapping)&&(a.material.needsUpdate=!0,c=p,u=p.version,h=r.toneMapping),m.unshift(a,a.geometry,a.material,0,0,null))}}}function rg(r,e,t,n){const i=r.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||null!==s,a={},l=x(null);let c=l;function d(R){return n.isWebGL2?r.bindVertexArray(R):s.bindVertexArrayOES(R)}function f(R){return n.isWebGL2?r.deleteVertexArray(R):s.deleteVertexArrayOES(R)}function x(R){const F=[],O=[],I=[];for(let X=0;X<i;X++)F[X]=0,O[X]=0,I[X]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:F,enabledAttributes:O,attributeDivisors:I,object:R,attributes:{},index:null}}function p(){const R=c.newAttributes;for(let F=0,O=R.length;F<O;F++)R[F]=0}function w(R){M(R,0)}function M(R,F){const I=c.enabledAttributes,X=c.attributeDivisors;c.newAttributes[R]=1,0===I[R]&&(r.enableVertexAttribArray(R),I[R]=1),X[R]!==F&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](R,F),X[R]=F)}function E(){const R=c.newAttributes,F=c.enabledAttributes;for(let O=0,I=F.length;O<I;O++)F[O]!==R[O]&&(r.disableVertexAttribArray(O),F[O]=0)}function _(R,F,O,I,X,K){!0!==n.isWebGL2||5124!==O&&5125!==O?r.vertexAttribPointer(R,F,O,I,X,K):r.vertexAttribIPointer(R,F,O,X,K)}function G(){k(),c!==l&&(c=l,d(c.object))}function k(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function(R,F,O,I,X){let K=!1;if(o){const j=function(R,F,O){const I=!0===O.wireframe;let X=a[R.id];void 0===X&&(X={},a[R.id]=X);let K=X[F.id];void 0===K&&(K={},X[F.id]=K);let j=K[I];return void 0===j&&(j=x(n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()),K[I]=j),j}(I,O,F);c!==j&&(c=j,d(c.object)),K=function(R,F){const O=c.attributes,I=R.attributes;let X=0;for(const K in I){const j=O[K],ae=I[K];if(void 0===j||j.attribute!==ae||j.data!==ae.data)return!0;X++}return c.attributesNum!==X||c.index!==F}(I,X),K&&function(R,F){const O={},I=R.attributes;let X=0;for(const K in I){const j=I[K],ae={};ae.attribute=j,j.data&&(ae.data=j.data),O[K]=ae,X++}c.attributes=O,c.attributesNum=X,c.index=F}(I,X)}else{const j=!0===F.wireframe;(c.geometry!==I.id||c.program!==O.id||c.wireframe!==j)&&(c.geometry=I.id,c.program=O.id,c.wireframe=j,K=!0)}!0===R.isInstancedMesh&&(K=!0),null!==X&&t.update(X,34963),K&&(function(R,F,O,I){if(!1===n.isWebGL2&&(R.isInstancedMesh||I.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;p();const X=I.attributes,K=O.getAttributes(),j=F.defaultAttributeValues;for(const ae in K){const oe=K[ae];if(oe>=0){const pe=X[ae];if(void 0!==pe){const _e=pe.normalized,V=pe.itemSize,Ve=t.get(pe);if(void 0===Ve)continue;const Re=Ve.buffer,be=Ve.type,me=Ve.bytesPerElement;if(pe.isInterleavedBufferAttribute){const De=pe.data,Ee=De.stride,Ce=pe.offset;De&&De.isInstancedInterleavedBuffer?(M(oe,De.meshPerAttribute),void 0===I._maxInstanceCount&&(I._maxInstanceCount=De.meshPerAttribute*De.count)):w(oe),r.bindBuffer(34962,Re),_(oe,V,be,_e,Ee*me,Ce*me)}else pe.isInstancedBufferAttribute?(M(oe,pe.meshPerAttribute),void 0===I._maxInstanceCount&&(I._maxInstanceCount=pe.meshPerAttribute*pe.count)):w(oe),r.bindBuffer(34962,Re),_(oe,V,be,_e,0,0)}else if("instanceMatrix"===ae){const _e=t.get(R.instanceMatrix);if(void 0===_e)continue;const V=_e.buffer,Ve=_e.type;M(oe+0,1),M(oe+1,1),M(oe+2,1),M(oe+3,1),r.bindBuffer(34962,V),r.vertexAttribPointer(oe+0,4,Ve,!1,64,0),r.vertexAttribPointer(oe+1,4,Ve,!1,64,16),r.vertexAttribPointer(oe+2,4,Ve,!1,64,32),r.vertexAttribPointer(oe+3,4,Ve,!1,64,48)}else if("instanceColor"===ae){const _e=t.get(R.instanceColor);if(void 0===_e)continue;const V=_e.buffer,Ve=_e.type;M(oe,1),r.bindBuffer(34962,V),r.vertexAttribPointer(oe,3,Ve,!1,12,0)}else if(void 0!==j){const _e=j[ae];if(void 0!==_e)switch(_e.length){case 2:r.vertexAttrib2fv(oe,_e);break;case 3:r.vertexAttrib3fv(oe,_e);break;case 4:r.vertexAttrib4fv(oe,_e);break;default:r.vertexAttrib1fv(oe,_e)}}}}E()}(R,F,O,I),null!==X&&r.bindBuffer(34963,t.get(X).buffer))},reset:G,resetDefaultState:k,dispose:function(){G();for(const R in a){const F=a[R];for(const O in F){const I=F[O];for(const X in I)f(I[X].object),delete I[X];delete F[O]}delete a[R]}},releaseStatesOfGeometry:function(R){if(void 0===a[R.id])return;const F=a[R.id];for(const O in F){const I=F[O];for(const X in I)f(I[X].object),delete I[X];delete F[O]}delete a[R.id]},releaseStatesOfProgram:function(R){for(const F in a){const O=a[F];if(void 0===O[R.id])continue;const I=O[R.id];for(const X in I)f(I[X].object),delete I[X];delete O[R.id]}},initAttributes:p,enableAttribute:w,disableUnusedAttributes:E}}function sg(r,e,t,n){const i=n.isWebGL2;let s;this.setMode=function(c){s=c},this.render=function(c,u){r.drawArrays(s,c,u),t.update(u,s,1)},this.renderInstances=function(c,u,h){if(0===h)return;let d,f;if(i)d=r,f="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),f="drawArraysInstancedANGLE",null===d)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");d[f](s,c,u,h),t.update(u,s,h)}}function og(r,e,t){let n;function s(_){if("highp"===_){if(r.getShaderPrecisionFormat(35633,36338).precision>0&&r.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";_="mediump"}return"mediump"===_&&r.getShaderPrecisionFormat(35633,36337).precision>0&&r.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&r instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&r instanceof WebGL2ComputeRenderingContext;let a=void 0!==t.precision?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=!0===t.logarithmicDepthBuffer,u=r.getParameter(34930),h=r.getParameter(35660),d=r.getParameter(3379),f=r.getParameter(34076),m=r.getParameter(34921),x=r.getParameter(36347),y=r.getParameter(36348),v=r.getParameter(36349),p=h>0,w=o||e.has("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==n)return n;if(!0===e.has("EXT_texture_filter_anisotropic")){const _=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n},getMaxPrecision:s,precision:a,logarithmicDepthBuffer:c,maxTextures:u,maxVertexTextures:h,maxTextureSize:d,maxCubemapSize:f,maxAttributes:m,maxVertexUniforms:x,maxVaryings:y,maxFragmentUniforms:v,vertexTextures:p,floatFragmentTextures:w,floatVertexTextures:p&&w,maxSamples:o?r.getParameter(36183):0}}function ag(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new Zt,a=new ut,l={value:null,needsUpdate:!1};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(h,d,f,m){const x=null!==h?h.length:0;let y=null;if(0!==x){if(y=l.value,!0!==m||null===y){const v=f+4*x,p=d.matrixWorldInverse;a.getNormalMatrix(p),(null===y||y.length<v)&&(y=new Float32Array(v));for(let w=0,M=f;w!==x;++w,M+=4)o.copy(h[w]).applyMatrix4(p,a),o.normal.toArray(y,M),y[M+3]=o.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,y}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d,f){const m=0!==h.length||d||0!==n||i;return i=d,t=u(h,f,0),n=h.length,m},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(h,d,f){const m=h.clippingPlanes,x=h.clipIntersection,y=h.clipShadows,v=r.get(h);if(!i||null===m||0===m.length||s&&!y)s?u(null):c();else{const p=s?0:n,w=4*p;let M=v.clippingState||null;l.value=M,M=u(m,d,w,f);for(let E=0;E!==w;++E)M[E]=t[E];v.clippingState=M,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=p}}}function cg(r){let e=new WeakMap;function t(o,a){return 303===a?o.mapping=301:304===a&&(o.mapping=302),o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=e.get(a);void 0!==l&&(e.delete(a),l.dispose())}return{get:function(o){if(o&&o.isTexture){const a=o.mapping;if(303===a||304===a){if(e.has(o))return t(e.get(o).texture,o.mapping);{const l=o.image;if(l&&l.height>0){const c=r.getRenderTarget(),u=new Fo(l.height/2);return u.fromEquirectangularTexture(r,o),e.set(o,u),r.setRenderTarget(c),o.addEventListener("dispose",i),t(u.texture,o.mapping)}return null}}}return o},dispose:function(){e=new WeakMap}}}function lg(r){const e={};function t(n){if(void 0!==e[n])return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return null!==t(n)},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float")},get:function(n){const i=t(n);return null===i&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function ug(r,e,t,n){const i={},s=new WeakMap;function o(h){const d=h.target;null!==d.index&&e.remove(d.index);for(const m in d.attributes)e.remove(d.attributes[m]);d.removeEventListener("dispose",o),delete i[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),!0===d.isInstancedBufferGeometry&&delete d._maxInstanceCount,t.memory.geometries--}function c(h){const d=[],f=h.index,m=h.attributes.position;let x=0;if(null!==f){const p=f.array;x=f.version;for(let w=0,M=p.length;w<M;w+=3){const E=p[w+0],_=p[w+1],C=p[w+2];d.push(E,_,_,C,C,E)}}else{x=m.version;for(let w=0,M=m.array.length/3-1;w<M;w+=3){const E=w+0,_=w+1,C=w+2;d.push(E,_,_,C,C,E)}}const y=new(Ec(d)>65535?Eo:To)(d,1);y.version=x;const v=s.get(h);v&&e.remove(v),s.set(h,y)}return{get:function(h,d){return!0===i[d.id]||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d},update:function(h){const d=h.attributes;for(const m in d)e.update(d[m],34962);const f=h.morphAttributes;for(const m in f){const x=f[m];for(let y=0,v=x.length;y<v;y++)e.update(x[y],34962)}},getWireframeAttribute:function(h){const d=s.get(h);if(d){const f=h.index;null!==f&&d.version<f.version&&c(h)}else c(h);return s.get(h)}}}function hg(r,e,t,n){const i=n.isWebGL2;let s,a,l;this.setMode=function(d){s=d},this.setIndex=function(d){a=d.type,l=d.bytesPerElement},this.render=function(d,f){r.drawElements(s,f,a,d*l),t.update(f,s,1)},this.renderInstances=function(d,f,m){if(0===m)return;let x,y;if(i)x=r,y="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",null===x)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");x[y](s,f,a,d*l,m),t.update(f,s,m)}}function dg(r){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o)}}}}function fg(r,e){return r[0]-e[0]}function pg(r,e){return Math.abs(e[1])-Math.abs(r[1])}function mg(r){const e={},t=new Float32Array(8),n=[];for(let s=0;s<8;s++)n[s]=[s,0];return{update:function(s,o,a,l){const c=s.morphTargetInfluences,u=void 0===c?0:c.length;let h=e[o.id];if(void 0===h){h=[];for(let y=0;y<u;y++)h[y]=[y,0];e[o.id]=h}for(let y=0;y<u;y++){const v=h[y];v[0]=y,v[1]=c[y]}h.sort(pg);for(let y=0;y<8;y++)y<u&&h[y][1]?(n[y][0]=h[y][0],n[y][1]=h[y][1]):(n[y][0]=Number.MAX_SAFE_INTEGER,n[y][1]=0);n.sort(fg);const d=a.morphTargets&&o.morphAttributes.position,f=a.morphNormals&&o.morphAttributes.normal;let m=0;for(let y=0;y<8;y++){const v=n[y],p=v[0],w=v[1];p!==Number.MAX_SAFE_INTEGER&&w?(d&&o.getAttribute("morphTarget"+y)!==d[p]&&o.setAttribute("morphTarget"+y,d[p]),f&&o.getAttribute("morphNormal"+y)!==f[p]&&o.setAttribute("morphNormal"+y,f[p]),t[y]=w,m+=w):(d&&!0===o.hasAttribute("morphTarget"+y)&&o.deleteAttribute("morphTarget"+y),f&&!0===o.hasAttribute("morphNormal"+y)&&o.deleteAttribute("morphNormal"+y),t[y]=0)}const x=o.morphTargetsRelative?1:1-m;l.getUniforms().setValue(r,"morphTargetBaseInfluence",x),l.getUniforms().setValue(r,"morphTargetInfluences",t)}}}function gg(r,e,t,n){let i=new WeakMap;function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),null!==c.instanceColor&&t.remove(c.instanceColor)}return{update:function(l){const c=n.render.frame,h=e.get(l,l.geometry);return i.get(h)!==c&&(e.update(h),i.set(h,c)),l.isInstancedMesh&&(!1===l.hasEventListener("dispose",a)&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),null!==l.instanceColor&&t.update(l.instanceColor,34962)),h},dispose:function(){i=new WeakMap}}}Yt.physical={uniforms:wt([Yt.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new z(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new se(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ae.meshphysical_vert,fragmentShader:Ae.meshphysical_frag};class Lc extends ht{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=Ge,this.minFilter=Ge,this.wrapR=Ct,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Lc.prototype.isDataTexture2DArray=!0;class Pc extends ht{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=Ge,this.minFilter=Ge,this.wrapR=Ct,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Pc.prototype.isDataTexture3D=!0;const Rc=new ht,vg=new Lc,xg=new Pc,Ic=new ar,Dc=[],Fc=[],Oc=new Float32Array(16),Bc=new Float32Array(9),Nc=new Float32Array(4);function Ti(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=Dc[i];if(void 0===s&&(s=new Float32Array(i),Dc[i]=s),0!==e){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function St(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Mt(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function kc(r,e){let t=Fc[e];void 0===t&&(t=new Int32Array(e),Fc[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function yg(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function _g(r,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(St(t,e))return;r.uniform2fv(this.addr,e),Mt(t,e)}}function bg(r,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(void 0!==e.r)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(St(t,e))return;r.uniform3fv(this.addr,e),Mt(t,e)}}function wg(r,e){const t=this.cache;if(void 0!==e.x)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(St(t,e))return;r.uniform4fv(this.addr,e),Mt(t,e)}}function Mg(r,e){const t=this.cache,n=e.elements;if(void 0===n){if(St(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Mt(t,e)}else{if(St(t,n))return;Nc.set(n),r.uniformMatrix2fv(this.addr,!1,Nc),Mt(t,n)}}function Sg(r,e){const t=this.cache,n=e.elements;if(void 0===n){if(St(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Mt(t,e)}else{if(St(t,n))return;Bc.set(n),r.uniformMatrix3fv(this.addr,!1,Bc),Mt(t,n)}}function Tg(r,e){const t=this.cache,n=e.elements;if(void 0===n){if(St(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Mt(t,e)}else{if(St(t,n))return;Oc.set(n),r.uniformMatrix4fv(this.addr,!1,Oc),Mt(t,n)}}function Eg(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Ag(r,e){const t=this.cache;St(t,e)||(r.uniform2iv(this.addr,e),Mt(t,e))}function Cg(r,e){const t=this.cache;St(t,e)||(r.uniform3iv(this.addr,e),Mt(t,e))}function Lg(r,e){const t=this.cache;St(t,e)||(r.uniform4iv(this.addr,e),Mt(t,e))}function Pg(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function Rg(r,e){const t=this.cache;St(t,e)||(r.uniform2uiv(this.addr,e),Mt(t,e))}function Ig(r,e){const t=this.cache;St(t,e)||(r.uniform3uiv(this.addr,e),Mt(t,e))}function Dg(r,e){const t=this.cache;St(t,e)||(r.uniform4uiv(this.addr,e),Mt(t,e))}function Fg(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.safeSetTexture2D(e||Rc,i)}function Og(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||xg,i)}function Bg(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.safeSetTextureCube(e||Ic,i)}function Ng(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||vg,i)}function zg(r,e){r.uniform1fv(this.addr,e)}function Ug(r,e){const t=Ti(e,this.size,2);r.uniform2fv(this.addr,t)}function Gg(r,e){const t=Ti(e,this.size,3);r.uniform3fv(this.addr,t)}function Hg(r,e){const t=Ti(e,this.size,4);r.uniform4fv(this.addr,t)}function Vg(r,e){const t=Ti(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function Wg(r,e){const t=Ti(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function qg(r,e){const t=Ti(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function Zg(r,e){r.uniform1iv(this.addr,e)}function Xg(r,e){r.uniform2iv(this.addr,e)}function Yg(r,e){r.uniform3iv(this.addr,e)}function jg(r,e){r.uniform4iv(this.addr,e)}function Jg(r,e){r.uniform1uiv(this.addr,e)}function Qg(r,e){r.uniform2uiv(this.addr,e)}function $g(r,e){r.uniform3uiv(this.addr,e)}function Kg(r,e){r.uniform4uiv(this.addr,e)}function ev(r,e,t){const n=e.length,i=kc(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.safeSetTexture2D(e[s]||Rc,i[s])}function tv(r,e,t){const n=e.length,i=kc(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.safeSetTextureCube(e[s]||Ic,i[s])}function iv(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=function(r){switch(r){case 5126:return yg;case 35664:return _g;case 35665:return bg;case 35666:return wg;case 35674:return Mg;case 35675:return Sg;case 35676:return Tg;case 5124:case 35670:return Eg;case 35667:case 35671:return Ag;case 35668:case 35672:return Cg;case 35669:case 35673:return Lg;case 5125:return Pg;case 36294:return Rg;case 36295:return Ig;case 36296:return Dg;case 35678:case 36198:case 36298:case 36306:case 35682:return Fg;case 35679:case 36299:case 36307:return Og;case 35680:case 36300:case 36308:case 36293:return Bg;case 36289:case 36303:case 36311:case 36292:return Ng}}(e.type)}function zc(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=function(r){switch(r){case 5126:return zg;case 35664:return Ug;case 35665:return Gg;case 35666:return Hg;case 35674:return Vg;case 35675:return Wg;case 35676:return qg;case 5124:case 35670:return Zg;case 35667:case 35671:return Xg;case 35668:case 35672:return Yg;case 35669:case 35673:return jg;case 5125:return Jg;case 36294:return Qg;case 36295:return $g;case 36296:return Kg;case 35678:case 36198:case 36298:case 36306:case 35682:return ev;case 35680:case 36300:case 36308:case 36293:return tv}}(e.type)}function Uc(r){this.id=r,this.seq=[],this.map={}}zc.prototype.updateCache=function(r){const e=this.cache;r instanceof Float32Array&&e.length!==r.length&&(this.cache=new Float32Array(r.length)),Mt(e,r)},Uc.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,e[o.id],t)}};const Oo=/(\w+)(\])?(\[|\.)?/g;function Gc(r,e){r.seq.push(e),r.map[e.id]=e}function rv(r,e,t){const n=r.name,i=n.length;for(Oo.lastIndex=0;;){const s=Oo.exec(n),o=Oo.lastIndex;let a=s[1];const c=s[3];if("]"===s[2]&&(a|=0),void 0===c||"["===c&&o+2===i){Gc(t,void 0===c?new iv(a,r,e):new zc(a,r,e));break}{let h=t.map[a];void 0===h&&(h=new Uc(a),Gc(t,h)),t=h}}}function Tn(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,35718);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n);rv(i,r.getUniformLocation(e,i.name),this)}}function Hc(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}Tn.prototype.setValue=function(r,e,t,n){const i=this.map[e];void 0!==i&&i.setValue(r,t,n)},Tn.prototype.setOptional=function(r,e,t){const n=e[t];void 0!==n&&this.setValue(r,t,n)},Tn.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const o=e[i],a=t[o.id];!1!==a.needsUpdate&&o.setValue(r,a.value,n)}},Tn.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};let sv=0;function Vc(r){switch(r){case Lt:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function Wc(r,e,t){const n=r.getShaderParameter(e,35713),i=r.getShaderInfoLog(e).trim();return n&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+t+"\n"+i+function(r){const e=r.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(r.getShaderSource(e))}function lr(r,e){const t=Vc(e);return"vec4 "+r+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function av(r,e){const t=Vc(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function cv(r,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case 4:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function ur(r){return""!==r}function qc(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Zc(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const dv=/^[ \t]*#include +<([\w\d./]+)>/gm;function Bo(r){return r.replace(dv,fv)}function fv(r,e){const t=Ae[e];if(void 0===t)throw new Error("Can not resolve #include <"+e+">");return Bo(t)}const pv=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,mv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Xc(r){return r.replace(mv,Yc).replace(pv,gv)}function gv(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Yc(0,e,t,n)}function Yc(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function jc(r){let e="precision "+r.precision+" float;\nprecision "+r.precision+" int;";return"highp"===r.precision?e+="\n#define HIGH_PRECISION":"mediump"===r.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===r.precision&&(e+="\n#define LOW_PRECISION"),e}function bv(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=function(r){let e="SHADOWMAP_TYPE_BASIC";return 1===r.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===r.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===r.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(t),c=function(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(t),u=function(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(t),h=function(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(t),d=r.gammaFactor>0?r.gammaFactor:1,f=t.isWebGL2?"":function(r){return[r.extensionDerivatives||r.envMapCubeUV||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||"physical"===r.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ur).join("\n")}(t),m=function(r){const e=[];for(const t in r){const n=r[t];!1!==n&&e.push("#define "+t+" "+n)}return e.join("\n")}(s),x=i.createProgram();let y,v,p=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(y=[m].filter(ur).join("\n"),y.length>0&&(y+="\n"),v=[f,m].filter(ur).join("\n"),v.length>0&&(v+="\n")):(y=[jc(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ur).join("\n"),v=[f,jc(t),"#define SHADER_NAME "+t.shaderName,m,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==t.toneMapping?"#define TONE_MAPPING":"",0!==t.toneMapping?Ae.tonemapping_pars_fragment:"",0!==t.toneMapping?cv("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",Ae.encodings_pars_fragment,t.map?lr("mapTexelToLinear",t.mapEncoding):"",t.matcap?lr("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?lr("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?lr("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?lr("lightMapTexelToLinear",t.lightMapEncoding):"",av("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(ur).join("\n")),o=Bo(o),o=qc(o,t),o=Zc(o,t),a=Bo(a),a=qc(a,t),a=Zc(a,t),o=Xc(o),a=Xc(a),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(p="#version 300 es\n",y=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+y,v=["#define varying in","300 es"===t.glslVersion?"":"out highp vec4 pc_fragColor;","300 es"===t.glslVersion?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);const M=p+v+a,E=Hc(i,35633,p+y+o),_=Hc(i,35632,M);if(i.attachShader(x,E),i.attachShader(x,_),void 0!==t.index0AttributeName?i.bindAttribLocation(x,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x),r.debug.checkShaderErrors){const D=i.getProgramInfoLog(x).trim(),B=i.getShaderInfoLog(E).trim(),G=i.getShaderInfoLog(_).trim();let k=!0,R=!0;if(!1===i.getProgramParameter(x,35714)){k=!1;const F=Wc(i,E,"vertex"),O=Wc(i,_,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(x,35715),"gl.getProgramInfoLog",D,F,O)}else""!==D?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",D):(""===B||""===G)&&(R=!1);R&&(this.diagnostics={runnable:k,programLog:D,vertexShader:{log:B,prefix:y},fragmentShader:{log:G,prefix:v}})}let C,L;return i.deleteShader(E),i.deleteShader(_),this.getUniforms=function(){return void 0===C&&(C=new Tn(i,x)),C},this.getAttributes=function(){return void 0===L&&(L=function(r,e){const t={},n=r.getProgramParameter(e,35721);for(let i=0;i<n;i++){const o=r.getActiveAttrib(e,i).name;t[o]=r.getAttribLocation(e,o)}return t}(i,x)),L},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=sv++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=E,this.fragmentShader=_,this}function wv(r,e,t,n,i,s){const o=[],a=n.isWebGL2,l=n.logarithmicDepthBuffer,c=n.floatVertexTextures,u=n.maxVertexUniforms,h=n.vertexTextures;let d=n.precision;const f={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},m=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function y(_){let C;return _&&_.isTexture?C=_.encoding:_&&_.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),C=_.texture.encoding):C=Lt,C}return{getParameters:function(_,C,L,D,B){const G=D.fog,R=e.get(_.envMap||(_.isMeshStandardMaterial?D.environment:null)),F=f[_.type],O=B.isSkinnedMesh?function(_){const L=_.skeleton.bones;if(c)return 1024;{const B=Math.floor((u-20)/4),G=Math.min(B,L.length);return G<L.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+L.length+" bones. This GPU supports "+G+"."),0):G}}(B):0;let I,X;if(null!==_.precision&&(d=n.getMaxPrecision(_.precision),d!==_.precision&&console.warn("THREE.WebGLProgram.getParameters:",_.precision,"not supported, using",d,"instead.")),F){const ae=Yt[F];I=ae.vertexShader,X=ae.fragmentShader}else I=_.vertexShader,X=_.fragmentShader;const K=r.getRenderTarget();return{isWebGL2:a,shaderID:F,shaderName:_.type,vertexShader:I,fragmentShader:X,defines:_.defines,isRawShaderMaterial:!0===_.isRawShaderMaterial,glslVersion:_.glslVersion,precision:d,instancing:!0===B.isInstancedMesh,instancingColor:!0===B.isInstancedMesh&&null!==B.instanceColor,supportsVertexTextures:h,outputEncoding:null!==K?y(K.texture):r.outputEncoding,map:!!_.map,mapEncoding:y(_.map),matcap:!!_.matcap,matcapEncoding:y(_.matcap),envMap:!!R,envMapMode:R&&R.mapping,envMapEncoding:y(R),envMapCubeUV:!!R&&(306===R.mapping||307===R.mapping),lightMap:!!_.lightMap,lightMapEncoding:y(_.lightMap),aoMap:!!_.aoMap,emissiveMap:!!_.emissiveMap,emissiveMapEncoding:y(_.emissiveMap),bumpMap:!!_.bumpMap,normalMap:!!_.normalMap,objectSpaceNormalMap:1===_.normalMapType,tangentSpaceNormalMap:0===_.normalMapType,clearcoatMap:!!_.clearcoatMap,clearcoatRoughnessMap:!!_.clearcoatRoughnessMap,clearcoatNormalMap:!!_.clearcoatNormalMap,displacementMap:!!_.displacementMap,roughnessMap:!!_.roughnessMap,metalnessMap:!!_.metalnessMap,specularMap:!!_.specularMap,alphaMap:!!_.alphaMap,gradientMap:!!_.gradientMap,sheen:!!_.sheen,transmissionMap:!!_.transmissionMap,combine:_.combine,vertexTangents:_.normalMap&&_.vertexTangents,vertexColors:_.vertexColors,vertexAlphas:!0===_.vertexColors&&B.geometry&&B.geometry.attributes.color&&4===B.geometry.attributes.color.itemSize,vertexUvs:!!(_.map||_.bumpMap||_.normalMap||_.specularMap||_.alphaMap||_.emissiveMap||_.roughnessMap||_.metalnessMap||_.clearcoatMap||_.clearcoatRoughnessMap||_.clearcoatNormalMap||_.displacementMap||_.transmissionMap),uvsVertexOnly:!(_.map||_.bumpMap||_.normalMap||_.specularMap||_.alphaMap||_.emissiveMap||_.roughnessMap||_.metalnessMap||_.clearcoatNormalMap||_.transmissionMap||!_.displacementMap),fog:!!G,useFog:_.fog,fogExp2:G&&G.isFogExp2,flatShading:!!_.flatShading,sizeAttenuation:_.sizeAttenuation,logarithmicDepthBuffer:l,skinning:_.skinning&&O>0,maxBones:O,useVertexTexture:c,morphTargets:_.morphTargets,morphNormals:_.morphNormals,numDirLights:C.directional.length,numPointLights:C.point.length,numSpotLights:C.spot.length,numRectAreaLights:C.rectArea.length,numHemiLights:C.hemi.length,numDirLightShadows:C.directionalShadowMap.length,numPointLightShadows:C.pointShadowMap.length,numSpotLightShadows:C.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:_.dithering,shadowMapEnabled:r.shadowMap.enabled&&L.length>0,shadowMapType:r.shadowMap.type,toneMapping:_.toneMapped?r.toneMapping:0,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:_.premultipliedAlpha,alphaTest:_.alphaTest,doubleSided:2===_.side,flipSided:1===_.side,depthPacking:void 0!==_.depthPacking&&_.depthPacking,index0AttributeName:_.index0AttributeName,extensionDerivatives:_.extensions&&_.extensions.derivatives,extensionFragDepth:_.extensions&&_.extensions.fragDepth,extensionDrawBuffers:_.extensions&&_.extensions.drawBuffers,extensionShaderTextureLOD:_.extensions&&_.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||t.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||t.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||t.has("EXT_shader_texture_lod"),customProgramCacheKey:_.customProgramCacheKey()}},getProgramCacheKey:function(_){const C=[];if(_.shaderID?C.push(_.shaderID):(C.push(_.fragmentShader),C.push(_.vertexShader)),void 0!==_.defines)for(const L in _.defines)C.push(L),C.push(_.defines[L]);if(!1===_.isRawShaderMaterial){for(let L=0;L<m.length;L++)C.push(_[m[L]]);C.push(r.outputEncoding),C.push(r.gammaFactor)}return C.push(_.customProgramCacheKey),C.join()},getUniforms:function(_){const C=f[_.type];let L;return L=C?If.clone(Yt[C].uniforms):_.uniforms,L},acquireProgram:function(_,C){let L;for(let D=0,B=o.length;D<B;D++){const G=o[D];if(G.cacheKey===C){L=G,++L.usedTimes;break}}return void 0===L&&(L=new bv(r,C,_,i),o.push(L)),L},releaseProgram:function(_){if(0==--_.usedTimes){const C=o.indexOf(_);o[C]=o[o.length-1],o.pop(),_.destroy()}},programs:o}}function Mv(){let r=new WeakMap;return{get:function(s){let o=r.get(s);return void 0===o&&(o={},r.set(s,o)),o},remove:function(s){r.delete(s)},update:function(s,o,a){r.get(s)[o]=a},dispose:function(){r=new WeakMap}}}function Sv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.program!==e.program?r.program.id-e.program.id:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function Tv(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function Jc(r){const e=[];let t=0;const n=[],i=[],s={id:-1};function a(d,f,m,x,y,v){let p=e[t];const w=r.get(m);return void 0===p?(p={id:d.id,object:d,geometry:f,material:m,program:w.program||s,groupOrder:x,renderOrder:d.renderOrder,z:y,group:v},e[t]=p):(p.id=d.id,p.object=d,p.geometry=f,p.material=m,p.program=w.program||s,p.groupOrder=x,p.renderOrder=d.renderOrder,p.z=y,p.group=v),t++,p}return{opaque:n,transparent:i,init:function(){t=0,n.length=0,i.length=0},push:function(d,f,m,x,y,v){const p=a(d,f,m,x,y,v);(!0===m.transparent?i:n).push(p)},unshift:function(d,f,m,x,y,v){const p=a(d,f,m,x,y,v);(!0===m.transparent?i:n).unshift(p)},finish:function(){for(let d=t,f=e.length;d<f;d++){const m=e[d];if(null===m.id)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.program=null,m.group=null}},sort:function(d,f){n.length>1&&n.sort(d||Sv),i.length>1&&i.sort(f||Tv)}}}function Ev(r){let e=new WeakMap;return{get:function(i,s){let o;return!1===e.has(i)?(o=new Jc(r),e.set(i,[o])):s>=e.get(i).length?(o=new Jc(r),e.get(i).push(o)):o=e.get(i)[s],o},dispose:function(){e=new WeakMap}}}function Av(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new b,color:new se};break;case"SpotLight":t={position:new b,direction:new b,color:new se,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new b,color:new se,distance:0,decay:0};break;case"HemisphereLight":t={direction:new b,skyColor:new se,groundColor:new se};break;case"RectAreaLight":t={color:new se,position:new b,halfWidth:new b,halfHeight:new b}}return r[e.id]=t,t}}}let Lv=0;function Pv(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function Rv(r,e){const t=new Av,n=function(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new z};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new z,shadowCameraNear:1,shadowCameraFar:1e3}}return r[e.id]=t,t}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new b);const s=new b,o=new le,a=new le;return{setup:function(u){let h=0,d=0,f=0;for(let C=0;C<9;C++)i.probe[C].set(0,0,0);let m=0,x=0,y=0,v=0,p=0,w=0,M=0,E=0;u.sort(Pv);for(let C=0,L=u.length;C<L;C++){const D=u[C],B=D.color,G=D.intensity,k=D.distance,R=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)h+=B.r*G,d+=B.g*G,f+=B.b*G;else if(D.isLightProbe)for(let F=0;F<9;F++)i.probe[F].addScaledVector(D.sh.coefficients[F],G);else if(D.isDirectionalLight){const F=t.get(D);if(F.color.copy(D.color).multiplyScalar(D.intensity),D.castShadow){const O=D.shadow,I=n.get(D);I.shadowBias=O.bias,I.shadowNormalBias=O.normalBias,I.shadowRadius=O.radius,I.shadowMapSize=O.mapSize,i.directionalShadow[m]=I,i.directionalShadowMap[m]=R,i.directionalShadowMatrix[m]=D.shadow.matrix,w++}i.directional[m]=F,m++}else if(D.isSpotLight){const F=t.get(D);if(F.position.setFromMatrixPosition(D.matrixWorld),F.color.copy(B).multiplyScalar(G),F.distance=k,F.coneCos=Math.cos(D.angle),F.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),F.decay=D.decay,D.castShadow){const O=D.shadow,I=n.get(D);I.shadowBias=O.bias,I.shadowNormalBias=O.normalBias,I.shadowRadius=O.radius,I.shadowMapSize=O.mapSize,i.spotShadow[y]=I,i.spotShadowMap[y]=R,i.spotShadowMatrix[y]=D.shadow.matrix,E++}i.spot[y]=F,y++}else if(D.isRectAreaLight){const F=t.get(D);F.color.copy(B).multiplyScalar(G),F.halfWidth.set(.5*D.width,0,0),F.halfHeight.set(0,.5*D.height,0),i.rectArea[v]=F,v++}else if(D.isPointLight){const F=t.get(D);if(F.color.copy(D.color).multiplyScalar(D.intensity),F.distance=D.distance,F.decay=D.decay,D.castShadow){const O=D.shadow,I=n.get(D);I.shadowBias=O.bias,I.shadowNormalBias=O.normalBias,I.shadowRadius=O.radius,I.shadowMapSize=O.mapSize,I.shadowCameraNear=O.camera.near,I.shadowCameraFar=O.camera.far,i.pointShadow[x]=I,i.pointShadowMap[x]=R,i.pointShadowMatrix[x]=D.shadow.matrix,M++}i.point[x]=F,x++}else if(D.isHemisphereLight){const F=t.get(D);F.skyColor.copy(D.color).multiplyScalar(G),F.groundColor.copy(D.groundColor).multiplyScalar(G),i.hemi[p]=F,p++}}v>0&&(e.isWebGL2||!0===r.has("OES_texture_float_linear")?(i.rectAreaLTC1=$.LTC_FLOAT_1,i.rectAreaLTC2=$.LTC_FLOAT_2):!0===r.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=$.LTC_HALF_1,i.rectAreaLTC2=$.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=h,i.ambient[1]=d,i.ambient[2]=f;const _=i.hash;(_.directionalLength!==m||_.pointLength!==x||_.spotLength!==y||_.rectAreaLength!==v||_.hemiLength!==p||_.numDirectionalShadows!==w||_.numPointShadows!==M||_.numSpotShadows!==E)&&(i.directional.length=m,i.spot.length=y,i.rectArea.length=v,i.point.length=x,i.hemi.length=p,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=M,i.pointShadowMap.length=M,i.spotShadow.length=E,i.spotShadowMap.length=E,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=M,i.spotShadowMatrix.length=E,_.directionalLength=m,_.pointLength=x,_.spotLength=y,_.rectAreaLength=v,_.hemiLength=p,_.numDirectionalShadows=w,_.numPointShadows=M,_.numSpotShadows=E,i.version=Lv++)},setupView:function(u,h){let d=0,f=0,m=0,x=0,y=0;const v=h.matrixWorldInverse;for(let p=0,w=u.length;p<w;p++){const M=u[p];if(M.isDirectionalLight){const E=i.directional[d];E.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),E.direction.sub(s),E.direction.transformDirection(v),d++}else if(M.isSpotLight){const E=i.spot[m];E.position.setFromMatrixPosition(M.matrixWorld),E.position.applyMatrix4(v),E.direction.setFromMatrixPosition(M.matrixWorld),s.setFromMatrixPosition(M.target.matrixWorld),E.direction.sub(s),E.direction.transformDirection(v),m++}else if(M.isRectAreaLight){const E=i.rectArea[x];E.position.setFromMatrixPosition(M.matrixWorld),E.position.applyMatrix4(v),a.identity(),o.copy(M.matrixWorld),o.premultiply(v),a.extractRotation(o),E.halfWidth.set(.5*M.width,0,0),E.halfHeight.set(0,.5*M.height,0),E.halfWidth.applyMatrix4(a),E.halfHeight.applyMatrix4(a),x++}else if(M.isPointLight){const E=i.point[f];E.position.setFromMatrixPosition(M.matrixWorld),E.position.applyMatrix4(v),f++}else if(M.isHemisphereLight){const E=i.hemi[y];E.direction.setFromMatrixPosition(M.matrixWorld),E.direction.transformDirection(v),E.direction.normalize(),y++}}},state:i}}function Qc(r,e){const t=new Rv(r,e),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:function(){t.setup(n)},setupLightsView:function(h){t.setupView(n,h)},pushLight:function(h){n.push(h)},pushShadow:function(h){i.push(h)}}}function Iv(r,e){let t=new WeakMap;return{get:function(s,o=0){let a;return!1===t.has(s)?(a=new Qc(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new Qc(r,e),t.get(s).push(a)):a=t.get(s)[o],a},dispose:function(){t=new WeakMap}}}class No extends at{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}No.prototype.isMeshDepthMaterial=!0;class ko extends at{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new b,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function $c(r,e,t){let n=new ls;const i=new z,s=new z,o=new Ne,a=[],l=[],c={},u=t.maxTextureSize,h={0:1,1:0,2:2},d=new Sn({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new z},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const m=new de;m.setAttribute("position",new Be(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new Xe(m,d),y=this;function v(_,C){const L=e.update(x);d.uniforms.shadow_pass.value=_.map.texture,d.uniforms.resolution.value=_.mapSize,d.uniforms.radius.value=_.radius,r.setRenderTarget(_.mapPass),r.clear(),r.renderBufferDirect(C,null,L,d,x,null),f.uniforms.shadow_pass.value=_.mapPass.texture,f.uniforms.resolution.value=_.mapSize,f.uniforms.radius.value=_.radius,r.setRenderTarget(_.map),r.clear(),r.renderBufferDirect(C,null,L,f,x,null)}function p(_,C,L){const D=_<<0|C<<1|L<<2;let B=a[D];return void 0===B&&(B=new No({depthPacking:3201,morphTargets:_,skinning:C}),a[D]=B),B}function w(_,C,L){const D=_<<0|C<<1|L<<2;let B=l[D];return void 0===B&&(B=new ko({morphTargets:_,skinning:C}),l[D]=B),B}function M(_,C,L,D,B,G,k){let R=null,F=p,O=_.customDepthMaterial;if(!0===D.isPointLight&&(F=w,O=_.customDistanceMaterial),void 0===O){let I=!1;!0===L.morphTargets&&(I=C.morphAttributes&&C.morphAttributes.position&&C.morphAttributes.position.length>0);let X=!1;!0===_.isSkinnedMesh&&(!0===L.skinning?X=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",_)),R=F(I,X,!0===_.isInstancedMesh)}else R=O;if(r.localClippingEnabled&&!0===L.clipShadows&&0!==L.clippingPlanes.length){const I=R.uuid,X=L.uuid;let K=c[I];void 0===K&&(K={},c[I]=K);let j=K[X];void 0===j&&(j=R.clone(),K[X]=j),R=j}return R.visible=L.visible,R.wireframe=L.wireframe,R.side=3===k?null!==L.shadowSide?L.shadowSide:L.side:null!==L.shadowSide?L.shadowSide:h[L.side],R.clipShadows=L.clipShadows,R.clippingPlanes=L.clippingPlanes,R.clipIntersection=L.clipIntersection,R.wireframeLinewidth=L.wireframeLinewidth,R.linewidth=L.linewidth,!0===D.isPointLight&&!0===R.isMeshDistanceMaterial&&(R.referencePosition.setFromMatrixPosition(D.matrixWorld),R.nearDistance=B,R.farDistance=G),R}function E(_,C,L,D,B){if(!1===_.visible)return;if(_.layers.test(C.layers)&&(_.isMesh||_.isLine||_.isPoints)&&(_.castShadow||_.receiveShadow&&3===B)&&(!_.frustumCulled||n.intersectsObject(_))){_.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,_.matrixWorld);const R=e.update(_),F=_.material;if(Array.isArray(F)){const O=R.groups;for(let I=0,X=O.length;I<X;I++){const K=O[I],j=F[K.materialIndex];if(j&&j.visible){const ae=M(_,R,j,D,L.near,L.far,B);r.renderBufferDirect(L,null,R,ae,_,K)}}}else if(F.visible){const O=M(_,R,F,D,L.near,L.far,B);r.renderBufferDirect(L,null,R,O,_,null)}}const k=_.children;for(let R=0,F=k.length;R<F;R++)E(k[R],C,L,D,B)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(_,C,L){if(!1===y.enabled||!1===y.autoUpdate&&!1===y.needsUpdate||0===_.length)return;const D=r.getRenderTarget(),B=r.getActiveCubeFace(),G=r.getActiveMipmapLevel(),k=r.state;k.setBlending(0),k.buffers.color.setClear(1,1,1,1),k.buffers.depth.setTest(!0),k.setScissorTest(!1);for(let R=0,F=_.length;R<F;R++){const O=_[R],I=O.shadow;if(void 0===I){console.warn("THREE.WebGLShadowMap:",O,"has no shadow.");continue}if(!1===I.autoUpdate&&!1===I.needsUpdate)continue;i.copy(I.mapSize);const X=I.getFrameExtents();if(i.multiply(X),s.copy(I.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/X.x),i.x=s.x*X.x,I.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/X.y),i.y=s.y*X.y,I.mapSize.y=s.y)),null===I.map&&!I.isPointLightShadow&&3===this.type){const j={minFilter:lt,magFilter:lt,format:kt};I.map=new gn(i.x,i.y,j),I.map.texture.name=O.name+".shadowMap",I.mapPass=new gn(i.x,i.y,j),I.camera.updateProjectionMatrix()}null===I.map&&(I.map=new gn(i.x,i.y,{minFilter:Ge,magFilter:Ge,format:kt}),I.map.texture.name=O.name+".shadowMap",I.camera.updateProjectionMatrix()),r.setRenderTarget(I.map),r.clear();const K=I.getViewportCount();for(let j=0;j<K;j++){const ae=I.getViewport(j);o.set(s.x*ae.x,s.y*ae.y,s.x*ae.z,s.y*ae.w),k.viewport(o),I.updateMatrices(O,j),n=I.getFrustum(),E(C,L,I.camera,O,this.type)}!I.isPointLightShadow&&3===this.type&&v(I,L),I.needsUpdate=!1}y.needsUpdate=!1,r.setRenderTarget(D,B,G)}}function Ov(r,e,t){const n=t.isWebGL2,a=new function(){let P=!1;const J=new Ne;let ee=null;const fe=new Ne(0,0,0,0);return{setMask:function(Z){ee!==Z&&!P&&(r.colorMask(Z,Z,Z,Z),ee=Z)},setLocked:function(Z){P=Z},setClear:function(Z,ge,ze,rt,Kn){!0===Kn&&(Z*=rt,ge*=rt,ze*=rt),J.set(Z,ge,ze,rt),!1===fe.equals(J)&&(r.clearColor(Z,ge,ze,rt),fe.copy(J))},reset:function(){P=!1,ee=null,fe.set(-1,0,0,0)}}},l=new function(){let P=!1,J=null,ee=null,fe=null;return{setTest:function(Z){Z?pe(2929):_e(2929)},setMask:function(Z){J!==Z&&!P&&(r.depthMask(Z),J=Z)},setFunc:function(Z){if(ee!==Z){if(Z)switch(Z){case 0:r.depthFunc(512);break;case 1:r.depthFunc(519);break;case 2:r.depthFunc(513);break;case 3:r.depthFunc(515);break;case 4:r.depthFunc(514);break;case 5:r.depthFunc(518);break;case 6:r.depthFunc(516);break;case 7:r.depthFunc(517);break;default:r.depthFunc(515)}else r.depthFunc(515);ee=Z}},setLocked:function(Z){P=Z},setClear:function(Z){fe!==Z&&(r.clearDepth(Z),fe=Z)},reset:function(){P=!1,J=null,ee=null,fe=null}}},c=new function(){let P=!1,J=null,ee=null,fe=null,Z=null,ge=null,ze=null,rt=null,Kn=null;return{setTest:function(nt){P||(nt?pe(2960):_e(2960))},setMask:function(nt){J!==nt&&!P&&(r.stencilMask(nt),J=nt)},setFunc:function(nt,un,Vt){(ee!==nt||fe!==un||Z!==Vt)&&(r.stencilFunc(nt,un,Vt),ee=nt,fe=un,Z=Vt)},setOp:function(nt,un,Vt){(ge!==nt||ze!==un||rt!==Vt)&&(r.stencilOp(nt,un,Vt),ge=nt,ze=un,rt=Vt)},setLocked:function(nt){P=nt},setClear:function(nt){Kn!==nt&&(r.clearStencil(nt),Kn=nt)},reset:function(){P=!1,J=null,ee=null,fe=null,Z=null,ge=null,ze=null,rt=null,Kn=null}}};let u={},h=null,d={},f=null,m=!1,x=null,y=null,v=null,p=null,w=null,M=null,E=null,_=!1,C=null,L=null,D=null,B=null,G=null;const k=r.getParameter(35661);let R=!1,F=0;const O=r.getParameter(7938);-1!==O.indexOf("WebGL")?(F=parseFloat(/^WebGL (\d)/.exec(O)[1]),R=F>=1):-1!==O.indexOf("OpenGL ES")&&(F=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),R=F>=2);let I=null,X={};const K=new Ne(0,0,r.canvas.width,r.canvas.height),j=new Ne(0,0,r.canvas.width,r.canvas.height);function ae(P,J,ee){const fe=new Uint8Array(4),Z=r.createTexture();r.bindTexture(P,Z),r.texParameteri(P,10241,9728),r.texParameteri(P,10240,9728);for(let ge=0;ge<ee;ge++)r.texImage2D(J+ge,0,6408,1,1,0,6408,5121,fe);return Z}const oe={};function pe(P){!0!==u[P]&&(r.enable(P),u[P]=!0)}function _e(P){!1!==u[P]&&(r.disable(P),u[P]=!1)}oe[3553]=ae(3553,3553,1),oe[34067]=ae(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),pe(2929),l.setFunc(3),Ce(!1),Y(1),pe(2884),De(0);const be={100:32774,101:32778,102:32779};if(n)be[103]=32775,be[104]=32776;else{const P=e.get("EXT_blend_minmax");null!==P&&(be[103]=P.MIN_EXT,be[104]=P.MAX_EXT)}const me={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function De(P,J,ee,fe,Z,ge,ze,rt){if(0!==P){if(!1===m&&(pe(3042),m=!0),5===P)Z=Z||J,ge=ge||ee,ze=ze||fe,(J!==y||Z!==w)&&(r.blendEquationSeparate(be[J],be[Z]),y=J,w=Z),(ee!==v||fe!==p||ge!==M||ze!==E)&&(r.blendFuncSeparate(me[ee],me[fe],me[ge],me[ze]),v=ee,p=fe,M=ge,E=ze),x=P,_=null;else if(P!==x||rt!==_){if((100!==y||100!==w)&&(r.blendEquation(32774),y=100,w=100),rt)switch(P){case 1:r.blendFuncSeparate(1,771,1,771);break;case 2:r.blendFunc(1,1);break;case 3:r.blendFuncSeparate(0,0,769,771);break;case 4:r.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",P)}else switch(P){case 1:r.blendFuncSeparate(770,771,1,771);break;case 2:r.blendFunc(770,1);break;case 3:r.blendFunc(0,769);break;case 4:r.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",P)}v=null,p=null,M=null,E=null,x=P,_=rt}}else!0===m&&(_e(3042),m=!1)}function Ce(P){C!==P&&(r.frontFace(P?2304:2305),C=P)}function Y(P){0!==P?(pe(2884),P!==L&&r.cullFace(1===P?1029:2===P?1028:1032)):_e(2884),L=P}function te(P,J,ee){P?(pe(32823),(B!==J||G!==ee)&&(r.polygonOffset(J,ee),B=J,G=ee)):_e(32823)}function ie(P){void 0===P&&(P=33984+k-1),I!==P&&(r.activeTexture(P),I=P)}return{buffers:{color:a,depth:l,stencil:c},enable:pe,disable:_e,bindFramebuffer:function(P,J){null===J&&null!==h&&(J=h),d[P]!==J&&(r.bindFramebuffer(P,J),d[P]=J,n&&(36009===P&&(d[36160]=J),36160===P&&(d[36009]=J)))},bindXRFramebuffer:function(P){P!==h&&(r.bindFramebuffer(36160,P),h=P)},useProgram:function(P){return f!==P&&(r.useProgram(P),f=P,!0)},setBlending:De,setMaterial:function(P,J){2===P.side?_e(2884):pe(2884);let ee=1===P.side;J&&(ee=!ee),Ce(ee),1===P.blending&&!1===P.transparent?De(0):De(P.blending,P.blendEquation,P.blendSrc,P.blendDst,P.blendEquationAlpha,P.blendSrcAlpha,P.blendDstAlpha,P.premultipliedAlpha),l.setFunc(P.depthFunc),l.setTest(P.depthTest),l.setMask(P.depthWrite),a.setMask(P.colorWrite);const fe=P.stencilWrite;c.setTest(fe),fe&&(c.setMask(P.stencilWriteMask),c.setFunc(P.stencilFunc,P.stencilRef,P.stencilFuncMask),c.setOp(P.stencilFail,P.stencilZFail,P.stencilZPass)),te(P.polygonOffset,P.polygonOffsetFactor,P.polygonOffsetUnits),!0===P.alphaToCoverage?pe(32926):_e(32926)},setFlipSided:Ce,setCullFace:Y,setLineWidth:function(P){P!==D&&(R&&r.lineWidth(P),D=P)},setPolygonOffset:te,setScissorTest:function(P){P?pe(3089):_e(3089)},activeTexture:ie,bindTexture:function(P,J){null===I&&ie();let ee=X[I];void 0===ee&&(ee={type:void 0,texture:void 0},X[I]=ee),(ee.type!==P||ee.texture!==J)&&(r.bindTexture(P,J||oe[P]),ee.type=P,ee.texture=J)},unbindTexture:function(){const P=X[I];void 0!==P&&void 0!==P.type&&(r.bindTexture(P.type,null),P.type=void 0,P.texture=void 0)},compressedTexImage2D:function(){try{r.compressedTexImage2D.apply(r,arguments)}catch(P){console.error("THREE.WebGLState:",P)}},texImage2D:function(){try{r.texImage2D.apply(r,arguments)}catch(P){console.error("THREE.WebGLState:",P)}},texImage3D:function(){try{r.texImage3D.apply(r,arguments)}catch(P){console.error("THREE.WebGLState:",P)}},scissor:function(P){!1===K.equals(P)&&(r.scissor(P.x,P.y,P.z,P.w),K.copy(P))},viewport:function(P){!1===j.equals(P)&&(r.viewport(P.x,P.y,P.z,P.w),j.copy(P))},reset:function(){r.disable(3042),r.disable(2884),r.disable(2929),r.disable(32823),r.disable(3089),r.disable(2960),r.disable(32926),r.blendEquation(32774),r.blendFunc(1,0),r.blendFuncSeparate(1,0,1,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(513),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(519,0,4294967295),r.stencilOp(7680,7680,7680),r.clearStencil(0),r.cullFace(1029),r.frontFace(2305),r.polygonOffset(0,0),r.activeTexture(33984),r.bindFramebuffer(36160,null),!0===n&&(r.bindFramebuffer(36009,null),r.bindFramebuffer(36008,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},I=null,X={},h=null,d={},f=null,m=!1,x=null,y=null,v=null,p=null,w=null,M=null,E=null,_=!1,C=null,L=null,D=null,B=null,G=null,K.set(0,0,r.canvas.width,r.canvas.height),j.set(0,0,r.canvas.width,r.canvas.height),a.reset(),l.reset(),c.reset()}}}function Bv(r,e,t,n,i,s,o){const a=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,u=i.maxTextureSize,h=i.maxSamples,d=new WeakMap;let f,m=!1;try{m="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(A){}function x(A,T){return m?new OffscreenCanvas(A,T):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(A,T,W,q){let re=1;if((A.width>q||A.height>q)&&(re=q/Math.max(A.width,A.height)),re<1||!0===T){if("undefined"!=typeof HTMLImageElement&&A instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&A instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&A instanceof ImageBitmap){const ue=T?fc:Math.floor,Fe=ue(re*A.width),ve=ue(re*A.height);void 0===f&&(f=x(Fe,ve));const P=W?x(Fe,ve):f;return P.width=Fe,P.height=ve,P.getContext("2d").drawImage(A,0,0,Fe,ve),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+A.width+"x"+A.height+") to ("+Fe+"x"+ve+")."),P}return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+A.width+"x"+A.height+")."),A}return A}function v(A){return oo(A.width)&&oo(A.height)}function w(A,T){return A.generateMipmaps&&T&&A.minFilter!==Ge&&A.minFilter!==lt}function M(A,T,W,q){r.generateMipmap(A),n.get(T).__maxMipLevel=Math.log2(Math.max(W,q))}function E(A,T,W){if(!1===a)return T;if(null!==A){if(void 0!==r[A])return r[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let q=T;return 6403===T&&(5126===W&&(q=33326),5131===W&&(q=33325),5121===W&&(q=33321)),6407===T&&(5126===W&&(q=34837),5131===W&&(q=34843),5121===W&&(q=32849)),6408===T&&(5126===W&&(q=34836),5131===W&&(q=34842),5121===W&&(q=32856)),(33325===q||33326===q||34842===q||34836===q)&&e.get("EXT_color_buffer_float"),q}function _(A){return A===Ge||1004===A||1005===A?9728:9729}function C(A){const T=A.target;T.removeEventListener("dispose",C),function(A){const T=n.get(A);void 0!==T.__webglInit&&(r.deleteTexture(T.__webglTexture),n.remove(A))}(T),T.isVideoTexture&&d.delete(T),o.memory.textures--}function L(A){const T=A.target;T.removeEventListener("dispose",L),function(A){const T=A.texture,W=n.get(A),q=n.get(T);if(A){if(void 0!==q.__webglTexture&&r.deleteTexture(q.__webglTexture),A.depthTexture&&A.depthTexture.dispose(),A.isWebGLCubeRenderTarget)for(let re=0;re<6;re++)r.deleteFramebuffer(W.__webglFramebuffer[re]),W.__webglDepthbuffer&&r.deleteRenderbuffer(W.__webglDepthbuffer[re]);else r.deleteFramebuffer(W.__webglFramebuffer),W.__webglDepthbuffer&&r.deleteRenderbuffer(W.__webglDepthbuffer),W.__webglMultisampledFramebuffer&&r.deleteFramebuffer(W.__webglMultisampledFramebuffer),W.__webglColorRenderbuffer&&r.deleteRenderbuffer(W.__webglColorRenderbuffer),W.__webglDepthRenderbuffer&&r.deleteRenderbuffer(W.__webglDepthRenderbuffer);n.remove(T),n.remove(A)}}(T),o.memory.textures--}let G=0;function F(A,T){const W=n.get(A);if(A.isVideoTexture&&function(A){const T=o.render.frame;d.get(A)!==T&&(d.set(A,T),A.update())}(A),A.version>0&&W.__version!==A.version){const q=A.image;if(void 0===q)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==q.complete)return void pe(W,A,T);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}t.activeTexture(33984+T),t.bindTexture(3553,W.__webglTexture)}function X(A,T){const W=n.get(A);A.version>0&&W.__version!==A.version?function(A,T,W){if(6!==T.image.length)return;oe(A,T),t.activeTexture(33984+W),t.bindTexture(34067,A.__webglTexture),r.pixelStorei(37440,T.flipY),r.pixelStorei(37441,T.premultiplyAlpha),r.pixelStorei(3317,T.unpackAlignment),r.pixelStorei(37443,0);const q=T&&(T.isCompressedTexture||T.image[0].isCompressedTexture),re=T.image[0]&&T.image[0].isDataTexture,ue=[];for(let Z=0;Z<6;Z++)ue[Z]=q||re?re?T.image[Z].image:T.image[Z]:y(T.image[Z],!1,!0,c);const Fe=ue[0],ve=v(Fe)||a,P=s.convert(T.format),J=s.convert(T.type),ee=E(T.internalFormat,P,J);let fe;if(ae(34067,T,ve),q){for(let Z=0;Z<6;Z++){fe=ue[Z].mipmaps;for(let ge=0;ge<fe.length;ge++){const ze=fe[ge];T.format!==kt&&T.format!==Dn?null!==P?t.compressedTexImage2D(34069+Z,ge,ee,ze.width,ze.height,0,ze.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):t.texImage2D(34069+Z,ge,ee,ze.width,ze.height,0,P,J,ze.data)}}A.__maxMipLevel=fe.length-1}else{fe=T.mipmaps;for(let Z=0;Z<6;Z++)if(re){t.texImage2D(34069+Z,0,ee,ue[Z].width,ue[Z].height,0,P,J,ue[Z].data);for(let ge=0;ge<fe.length;ge++){const rt=fe[ge].image[Z].image;t.texImage2D(34069+Z,ge+1,ee,rt.width,rt.height,0,P,J,rt.data)}}else{t.texImage2D(34069+Z,0,ee,P,J,ue[Z]);for(let ge=0;ge<fe.length;ge++)t.texImage2D(34069+Z,ge+1,ee,P,J,fe[ge].image[Z])}A.__maxMipLevel=fe.length}w(T,ve)&&M(34067,T,Fe.width,Fe.height),A.__version=T.version,T.onUpdate&&T.onUpdate(T)}(W,A,T):(t.activeTexture(33984+T),t.bindTexture(34067,W.__webglTexture))}const K={1e3:10497,[Ct]:33071,1002:33648},j={[Ge]:9728,1004:9984,1005:9986,[lt]:9729,1007:9985,1008:9987};function ae(A,T,W){if(W?(r.texParameteri(A,10242,K[T.wrapS]),r.texParameteri(A,10243,K[T.wrapT]),(32879===A||35866===A)&&r.texParameteri(A,32882,K[T.wrapR]),r.texParameteri(A,10240,j[T.magFilter]),r.texParameteri(A,10241,j[T.minFilter])):(r.texParameteri(A,10242,33071),r.texParameteri(A,10243,33071),(32879===A||35866===A)&&r.texParameteri(A,32882,33071),(T.wrapS!==Ct||T.wrapT!==Ct)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(A,10240,_(T.magFilter)),r.texParameteri(A,10241,_(T.minFilter)),T.minFilter!==Ge&&T.minFilter!==lt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===e.has("EXT_texture_filter_anisotropic")){const q=e.get("EXT_texture_filter_anisotropic");if(T.type===mn&&!1===e.has("OES_texture_float_linear")||!1===a&&1016===T.type&&!1===e.has("OES_texture_half_float_linear"))return;(T.anisotropy>1||n.get(T).__currentAnisotropy)&&(r.texParameterf(A,q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,i.getMaxAnisotropy())),n.get(T).__currentAnisotropy=T.anisotropy)}}function oe(A,T){void 0===A.__webglInit&&(A.__webglInit=!0,T.addEventListener("dispose",C),A.__webglTexture=r.createTexture(),o.memory.textures++)}function pe(A,T,W){let q=3553;T.isDataTexture2DArray&&(q=35866),T.isDataTexture3D&&(q=32879),oe(A,T),t.activeTexture(33984+W),t.bindTexture(q,A.__webglTexture),r.pixelStorei(37440,T.flipY),r.pixelStorei(37441,T.premultiplyAlpha),r.pixelStorei(3317,T.unpackAlignment),r.pixelStorei(37443,0);const re=function(A){return!a&&(A.wrapS!==Ct||A.wrapT!==Ct||A.minFilter!==Ge&&A.minFilter!==lt)}(T)&&!1===v(T.image),ue=y(T.image,re,!1,u),Fe=v(ue)||a,ve=s.convert(T.format);let ee,P=s.convert(T.type),J=E(T.internalFormat,ve,P);ae(q,T,Fe);const fe=T.mipmaps;if(T.isDepthTexture)J=6402,a?J=T.type===mn?36012:1014===T.type?33190:T.type===ji?35056:33189:T.type===mn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),T.format===si&&6402===J&&1012!==T.type&&1014!==T.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=1012,P=s.convert(T.type)),T.format===Ji&&6402===J&&(J=34041,T.type!==ji&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=ji,P=s.convert(T.type))),t.texImage2D(3553,0,J,ue.width,ue.height,0,ve,P,null);else if(T.isDataTexture)if(fe.length>0&&Fe){for(let Z=0,ge=fe.length;Z<ge;Z++)ee=fe[Z],t.texImage2D(3553,Z,J,ee.width,ee.height,0,ve,P,ee.data);T.generateMipmaps=!1,A.__maxMipLevel=fe.length-1}else t.texImage2D(3553,0,J,ue.width,ue.height,0,ve,P,ue.data),A.__maxMipLevel=0;else if(T.isCompressedTexture){for(let Z=0,ge=fe.length;Z<ge;Z++)ee=fe[Z],T.format!==kt&&T.format!==Dn?null!==ve?t.compressedTexImage2D(3553,Z,J,ee.width,ee.height,0,ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):t.texImage2D(3553,Z,J,ee.width,ee.height,0,ve,P,ee.data);A.__maxMipLevel=fe.length-1}else if(T.isDataTexture2DArray)t.texImage3D(35866,0,J,ue.width,ue.height,ue.depth,0,ve,P,ue.data),A.__maxMipLevel=0;else if(T.isDataTexture3D)t.texImage3D(32879,0,J,ue.width,ue.height,ue.depth,0,ve,P,ue.data),A.__maxMipLevel=0;else if(fe.length>0&&Fe){for(let Z=0,ge=fe.length;Z<ge;Z++)ee=fe[Z],t.texImage2D(3553,Z,J,ve,P,ee);T.generateMipmaps=!1,A.__maxMipLevel=fe.length-1}else t.texImage2D(3553,0,J,ve,P,ue),A.__maxMipLevel=0;w(T,Fe)&&M(q,T,ue.width,ue.height),A.__version=T.version,T.onUpdate&&T.onUpdate(T)}function V(A,T,W,q){const re=T.texture,ue=s.convert(re.format),Fe=s.convert(re.type),ve=E(re.internalFormat,ue,Fe);32879===q||35866===q?t.texImage3D(q,0,ve,T.width,T.height,T.depth,0,ue,Fe,null):t.texImage2D(q,0,ve,T.width,T.height,0,ue,Fe,null),t.bindFramebuffer(36160,A),r.framebufferTexture2D(36160,W,q,n.get(re).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ve(A,T,W){if(r.bindRenderbuffer(36161,A),T.depthBuffer&&!T.stencilBuffer){let q=33189;if(W){const re=T.depthTexture;re&&re.isDepthTexture&&(re.type===mn?q=36012:1014===re.type&&(q=33190));const ue=Ce(T);r.renderbufferStorageMultisample(36161,ue,q,T.width,T.height)}else r.renderbufferStorage(36161,q,T.width,T.height);r.framebufferRenderbuffer(36160,36096,36161,A)}else if(T.depthBuffer&&T.stencilBuffer){if(W){const q=Ce(T);r.renderbufferStorageMultisample(36161,q,35056,T.width,T.height)}else r.renderbufferStorage(36161,34041,T.width,T.height);r.framebufferRenderbuffer(36160,33306,36161,A)}else{const q=T.texture,re=s.convert(q.format),ue=s.convert(q.type),Fe=E(q.internalFormat,re,ue);if(W){const ve=Ce(T);r.renderbufferStorageMultisample(36161,ve,Fe,T.width,T.height)}else r.renderbufferStorage(36161,Fe,T.width,T.height)}r.bindRenderbuffer(36161,null)}function Ce(A){return a&&A.isWebGLMultisampleRenderTarget?Math.min(h,A.samples):0}let Q=!1,te=!1;this.allocateTextureUnit=function(){const A=G;return A>=l&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+l),G+=1,A},this.resetTextureUnits=function(){G=0},this.setTexture2D=F,this.setTexture2DArray=function(A,T){const W=n.get(A);A.version>0&&W.__version!==A.version?pe(W,A,T):(t.activeTexture(33984+T),t.bindTexture(35866,W.__webglTexture))},this.setTexture3D=function(A,T){const W=n.get(A);A.version>0&&W.__version!==A.version?pe(W,A,T):(t.activeTexture(33984+T),t.bindTexture(32879,W.__webglTexture))},this.setTextureCube=X,this.setupRenderTarget=function(A){const T=A.texture,W=n.get(A),q=n.get(T);A.addEventListener("dispose",L),q.__webglTexture=r.createTexture(),q.__version=T.version,o.memory.textures++;const re=!0===A.isWebGLCubeRenderTarget,ue=!0===A.isWebGLMultisampleRenderTarget,Fe=T.isDataTexture3D||T.isDataTexture2DArray,ve=v(A)||a;if(a&&T.format===Dn&&(T.type===mn||1016===T.type)&&(T.format=kt,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),re){W.__webglFramebuffer=[];for(let P=0;P<6;P++)W.__webglFramebuffer[P]=r.createFramebuffer()}else if(W.__webglFramebuffer=r.createFramebuffer(),ue)if(a){W.__webglMultisampledFramebuffer=r.createFramebuffer(),W.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(36161,W.__webglColorRenderbuffer);const P=s.convert(T.format),J=s.convert(T.type),ee=E(T.internalFormat,P,J),fe=Ce(A);r.renderbufferStorageMultisample(36161,fe,ee,A.width,A.height),t.bindFramebuffer(36160,W.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(36160,36064,36161,W.__webglColorRenderbuffer),r.bindRenderbuffer(36161,null),A.depthBuffer&&(W.__webglDepthRenderbuffer=r.createRenderbuffer(),Ve(W.__webglDepthRenderbuffer,A,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(re){t.bindTexture(34067,q.__webglTexture),ae(34067,T,ve);for(let P=0;P<6;P++)V(W.__webglFramebuffer[P],A,36064,34069+P);w(T,ve)&&M(34067,T,A.width,A.height),t.bindTexture(34067,null)}else{let P=3553;Fe&&(a?P=T.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),t.bindTexture(P,q.__webglTexture),ae(P,T,ve),V(W.__webglFramebuffer,A,36064,P),w(T,ve)&&M(3553,T,A.width,A.height),t.bindTexture(3553,null)}A.depthBuffer&&function(A){const T=n.get(A),W=!0===A.isWebGLCubeRenderTarget;if(A.depthTexture){if(W)throw new Error("target.depthTexture not supported in Cube render targets");!function(A,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,A),!T.depthTexture||!T.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),F(T.depthTexture,0);const q=n.get(T.depthTexture).__webglTexture;if(T.depthTexture.format===si)r.framebufferTexture2D(36160,36096,3553,q,0);else{if(T.depthTexture.format!==Ji)throw new Error("Unknown depthTexture format");r.framebufferTexture2D(36160,33306,3553,q,0)}}(T.__webglFramebuffer,A)}else if(W){T.__webglDepthbuffer=[];for(let q=0;q<6;q++)t.bindFramebuffer(36160,T.__webglFramebuffer[q]),T.__webglDepthbuffer[q]=r.createRenderbuffer(),Ve(T.__webglDepthbuffer[q],A,!1)}else t.bindFramebuffer(36160,T.__webglFramebuffer),T.__webglDepthbuffer=r.createRenderbuffer(),Ve(T.__webglDepthbuffer,A,!1);t.bindFramebuffer(36160,null)}(A)},this.updateRenderTargetMipmap=function(A){const T=A.texture;if(w(T,v(A)||a)){const q=A.isWebGLCubeRenderTarget?34067:3553,re=n.get(T).__webglTexture;t.bindTexture(q,re),M(q,T,A.width,A.height),t.bindTexture(q,null)}},this.updateMultisampleRenderTarget=function(A){if(A.isWebGLMultisampleRenderTarget)if(a){const T=A.width,W=A.height;let q=16384;A.depthBuffer&&(q|=256),A.stencilBuffer&&(q|=1024);const re=n.get(A);t.bindFramebuffer(36008,re.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,re.__webglFramebuffer),r.blitFramebuffer(0,0,T,W,0,0,T,W,q,9728),t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,re.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(A,T){A&&A.isWebGLRenderTarget&&(!1===Q&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),A=A.texture),F(A,T)},this.safeSetTextureCube=function(A,T){A&&A.isWebGLCubeRenderTarget&&(!1===te&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),te=!0),A=A.texture),X(A,T)}}function Nv(r,e,t){const n=t.isWebGL2;return{convert:function(s){let o;if(1009===s)return 5121;if(1017===s)return 32819;if(1018===s)return 32820;if(1019===s)return 33635;if(1010===s)return 5120;if(1011===s)return 5122;if(1012===s)return 5123;if(1013===s)return 5124;if(1014===s)return 5125;if(s===mn)return 5126;if(1016===s)return n?5131:(o=e.get("OES_texture_half_float"),null!==o?o.HALF_FLOAT_OES:null);if(1021===s)return 6406;if(s===Dn)return 6407;if(s===kt)return 6408;if(1024===s)return 6409;if(1025===s)return 6410;if(s===si)return 6402;if(s===Ji)return 34041;if(1028===s)return 6403;if(1029===s)return 36244;if(1030===s)return 33319;if(1031===s)return 33320;if(1032===s)return 36248;if(1033===s)return 36249;if(33776===s||33777===s||33778===s||33779===s){if(o=e.get("WEBGL_compressed_texture_s3tc"),null===o)return null;if(33776===s)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===s)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===s)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===s)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===s||35841===s||35842===s||35843===s){if(o=e.get("WEBGL_compressed_texture_pvrtc"),null===o)return null;if(35840===s)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===s)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===s)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===s)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===s)return o=e.get("WEBGL_compressed_texture_etc1"),null!==o?o.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===s||37496===s)&&(o=e.get("WEBGL_compressed_texture_etc"),null!==o)){if(37492===s)return o.COMPRESSED_RGB8_ETC2;if(37496===s)return o.COMPRESSED_RGBA8_ETC2_EAC}return 37808===s||37809===s||37810===s||37811===s||37812===s||37813===s||37814===s||37815===s||37816===s||37817===s||37818===s||37819===s||37820===s||37821===s||37840===s||37841===s||37842===s||37843===s||37844===s||37845===s||37846===s||37847===s||37848===s||37849===s||37850===s||37851===s||37852===s||37853===s?(o=e.get("WEBGL_compressed_texture_astc"),null!==o?s:null):36492===s?(o=e.get("EXT_texture_compression_bptc"),null!==o?s:null):s===ji?n?34042:(o=e.get("WEBGL_depth_texture"),null!==o?o.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}ko.prototype.isMeshDistanceMaterial=!0;class Kc extends ft{constructor(e=[]){super(),this.cameras=e}}Kc.prototype.isArrayCamera=!0;class Ei extends Pe{constructor(){super(),this.type="Group"}}Ei.prototype.isGroup=!0;const kv={type:"move"};class zo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Ei,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Ei,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new b,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new b),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Ei,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new b,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new b),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==a&&(i=t.getPose(e.targetRaySpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(kv))),c&&e.hand){o=!0;for(const x of e.hand.values()){const y=t.getJointPose(x,n);if(void 0===c.joints[x.jointName]){const p=new Ei;p.matrixAutoUpdate=!1,p.visible=!1,c.joints[x.jointName]=p,c.add(p)}const v=c.joints[x.jointName];null!==y&&(v.matrix.fromArray(y.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=y.radius),v.visible=null!==y}const d=c.joints["index-finger-tip"].position.distanceTo(c.joints["thumb-tip"].position),f=.02,m=.005;c.inputState.pinching&&d>f+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==l&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),null!==s&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));return null!==a&&(a.visible=null!==i),null!==l&&(l.visible=null!==s),null!==c&&(c.visible=null!==o),this}}class zv extends Fn{constructor(e,t){super();const n=this,i=e.state;let s=null,o=1,a=null,l="local-floor",c=null;const u=[],h=new Map,d=new ft;d.layers.enable(1),d.viewport=new Ne;const f=new ft;f.layers.enable(2),f.viewport=new Ne;const m=[d,f],x=new Kc;x.layers.enable(1),x.layers.enable(2);let y=null,v=null;function p(k){const R=h.get(k.inputSource);R&&R.dispatchEvent({type:k.type,data:k.inputSource})}function w(){h.forEach(function(k,R){k.disconnect(R)}),h.clear(),y=null,v=null,i.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),G.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function M(k){const R=s.inputSources;for(let F=0;F<u.length;F++)h.set(R[F],u[F]);for(let F=0;F<k.removed.length;F++){const O=k.removed[F],I=h.get(O);I&&(I.dispatchEvent({type:"disconnected",data:O}),h.delete(O))}for(let F=0;F<k.added.length;F++){const O=k.added[F],I=h.get(O);I&&I.dispatchEvent({type:"connected",data:O})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let R=u[k];return void 0===R&&(R=new zo,u[k]=R),R.getTargetRaySpace()},this.getControllerGrip=function(k){let R=u[k];return void 0===R&&(R=new zo,u[k]=R),R.getGripSpace()},this.getHand=function(k){let R=u[k];return void 0===R&&(R=new zo,u[k]=R),R.getHandSpace()},this.setFramebufferScaleFactor=function(k){o=k,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){l=k,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getSession=function(){return s},this.setSession=function(){var r,k=(r=function*(R){if(s=R,null!==s){s.addEventListener("select",p),s.addEventListener("selectstart",p),s.addEventListener("selectend",p),s.addEventListener("squeeze",p),s.addEventListener("squeezestart",p),s.addEventListener("squeezeend",p),s.addEventListener("end",w),s.addEventListener("inputsourceschange",M);const F=t.getContextAttributes();!0!==F.xrCompatible&&(yield t.makeXRCompatible());const I=new XRWebGLLayer(s,t,{antialias:F.antialias,alpha:F.alpha,depth:F.depth,stencil:F.stencil,framebufferScaleFactor:o});s.updateRenderState({baseLayer:I}),a=yield s.requestReferenceSpace(l),G.setContext(s),G.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},function(){var e=this,t=arguments;return new Promise(function(n,i){var s=r.apply(e,t);function o(l){ka(s,n,i,o,a,"next",l)}function a(l){ka(s,n,i,o,a,"throw",l)}o(void 0)})});return function(R){return k.apply(this,arguments)}}();const E=new b,_=new b;function L(k,R){null===R?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(R.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.getCamera=function(k){x.near=f.near=d.near=k.near,x.far=f.far=d.far=k.far,(y!==x.near||v!==x.far)&&(s.updateRenderState({depthNear:x.near,depthFar:x.far}),y=x.near,v=x.far);const R=k.parent,F=x.cameras;L(x,R);for(let I=0;I<F.length;I++)L(F[I],R);k.matrixWorld.copy(x.matrixWorld),k.matrix.copy(x.matrix),k.matrix.decompose(k.position,k.quaternion,k.scale);const O=k.children;for(let I=0,X=O.length;I<X;I++)O[I].updateMatrixWorld(!0);return 2===F.length?function(k,R,F){E.setFromMatrixPosition(R.matrixWorld),_.setFromMatrixPosition(F.matrixWorld);const O=E.distanceTo(_),I=R.projectionMatrix.elements,X=F.projectionMatrix.elements,K=I[14]/(I[10]-1),j=I[14]/(I[10]+1),ae=(I[9]+1)/I[5],oe=(I[9]-1)/I[5],pe=(I[8]-1)/I[0],_e=(X[8]+1)/X[0],V=K*pe,Ve=K*_e,Re=O/(-pe+_e),be=Re*-pe;R.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(be),k.translateZ(Re),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();const me=K+Re,De=j+Re;k.projectionMatrix.makePerspective(V-be,Ve+(O-be),ae*j/De*me,oe*j/De*me,me,De)}(x,d,f):x.projectionMatrix.copy(d.projectionMatrix),x};let D=null;const G=new Cc;G.setAnimationLoop(function(k,R){if(c=R.getViewerPose(a),null!==c){const O=c.views,I=s.renderState.baseLayer;i.bindXRFramebuffer(I.framebuffer);let X=!1;O.length!==x.cameras.length&&(x.cameras.length=0,X=!0);for(let K=0;K<O.length;K++){const j=O[K],ae=I.getViewport(j),oe=m[K];oe.matrix.fromArray(j.transform.matrix),oe.projectionMatrix.fromArray(j.projectionMatrix),oe.viewport.set(ae.x,ae.y,ae.width,ae.height),0===K&&x.matrix.copy(oe.matrix),!0===X&&x.cameras.push(oe)}}const F=s.inputSources;for(let O=0;O<u.length;O++)u[O].update(F[O],R,a);D&&D(k,R)}),this.setAnimationLoop=function(k){D=k},this.dispose=function(){}}}function Uv(r){function n(v,p){v.opacity.value=p.opacity,p.color&&v.diffuse.value.copy(p.color),p.emissive&&v.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(v.map.value=p.map),p.alphaMap&&(v.alphaMap.value=p.alphaMap),p.specularMap&&(v.specularMap.value=p.specularMap);const w=r.get(p).envMap;if(w){v.envMap.value=w,v.flipEnvMap.value=w.isCubeTexture&&w._needsFlipEnvMap?-1:1,v.reflectivity.value=p.reflectivity,v.refractionRatio.value=p.refractionRatio;const _=r.get(w).__maxMipLevel;void 0!==_&&(v.maxMipLevel.value=_)}let M,E;p.lightMap&&(v.lightMap.value=p.lightMap,v.lightMapIntensity.value=p.lightMapIntensity),p.aoMap&&(v.aoMap.value=p.aoMap,v.aoMapIntensity.value=p.aoMapIntensity),p.map?M=p.map:p.specularMap?M=p.specularMap:p.displacementMap?M=p.displacementMap:p.normalMap?M=p.normalMap:p.bumpMap?M=p.bumpMap:p.roughnessMap?M=p.roughnessMap:p.metalnessMap?M=p.metalnessMap:p.alphaMap?M=p.alphaMap:p.emissiveMap?M=p.emissiveMap:p.clearcoatMap?M=p.clearcoatMap:p.clearcoatNormalMap?M=p.clearcoatNormalMap:p.clearcoatRoughnessMap&&(M=p.clearcoatRoughnessMap),void 0!==M&&(M.isWebGLRenderTarget&&(M=M.texture),!0===M.matrixAutoUpdate&&M.updateMatrix(),v.uvTransform.value.copy(M.matrix)),p.aoMap?E=p.aoMap:p.lightMap&&(E=p.lightMap),void 0!==E&&(E.isWebGLRenderTarget&&(E=E.texture),!0===E.matrixAutoUpdate&&E.updateMatrix(),v.uv2Transform.value.copy(E.matrix))}function h(v,p){v.roughness.value=p.roughness,v.metalness.value=p.metalness,p.roughnessMap&&(v.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(v.metalnessMap.value=p.metalnessMap),p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,1===p.side&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),1===p.side&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias),r.get(p).envMap&&(v.envMapIntensity.value=p.envMapIntensity)}return{refreshFogUniforms:function(v,p){v.fogColor.value.copy(p.color),p.isFog?(v.fogNear.value=p.near,v.fogFar.value=p.far):p.isFogExp2&&(v.fogDensity.value=p.density)},refreshMaterialUniforms:function(v,p,w,M){p.isMeshBasicMaterial?n(v,p):p.isMeshLambertMaterial?(n(v,p),function(v,p){p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap)}(v,p)):p.isMeshToonMaterial?(n(v,p),function(v,p){p.gradientMap&&(v.gradientMap.value=p.gradientMap),p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,1===p.side&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),1===p.side&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}(v,p)):p.isMeshPhongMaterial?(n(v,p),function(v,p){v.specular.value.copy(p.specular),v.shininess.value=Math.max(p.shininess,1e-4),p.emissiveMap&&(v.emissiveMap.value=p.emissiveMap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,1===p.side&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),1===p.side&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}(v,p)):p.isMeshStandardMaterial?(n(v,p),p.isMeshPhysicalMaterial?function(v,p){h(v,p),v.reflectivity.value=p.reflectivity,v.clearcoat.value=p.clearcoat,v.clearcoatRoughness.value=p.clearcoatRoughness,p.sheen&&v.sheen.value.copy(p.sheen),p.clearcoatMap&&(v.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),v.clearcoatNormalMap.value=p.clearcoatNormalMap,1===p.side&&v.clearcoatNormalScale.value.negate()),v.transmission.value=p.transmission,p.transmissionMap&&(v.transmissionMap.value=p.transmissionMap)}(v,p):h(v,p)):p.isMeshMatcapMaterial?(n(v,p),function(v,p){p.matcap&&(v.matcap.value=p.matcap),p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,1===p.side&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),1===p.side&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}(v,p)):p.isMeshDepthMaterial?(n(v,p),function(v,p){p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}(v,p)):p.isMeshDistanceMaterial?(n(v,p),function(v,p){p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias),v.referencePosition.value.copy(p.referencePosition),v.nearDistance.value=p.nearDistance,v.farDistance.value=p.farDistance}(v,p)):p.isMeshNormalMaterial?(n(v,p),function(v,p){p.bumpMap&&(v.bumpMap.value=p.bumpMap,v.bumpScale.value=p.bumpScale,1===p.side&&(v.bumpScale.value*=-1)),p.normalMap&&(v.normalMap.value=p.normalMap,v.normalScale.value.copy(p.normalScale),1===p.side&&v.normalScale.value.negate()),p.displacementMap&&(v.displacementMap.value=p.displacementMap,v.displacementScale.value=p.displacementScale,v.displacementBias.value=p.displacementBias)}(v,p)):p.isLineBasicMaterial?(function(v,p){v.diffuse.value.copy(p.color),v.opacity.value=p.opacity}(v,p),p.isLineDashedMaterial&&function(v,p){v.dashSize.value=p.dashSize,v.totalSize.value=p.dashSize+p.gapSize,v.scale.value=p.scale}(v,p)):p.isPointsMaterial?function(v,p,w,M){let E;v.diffuse.value.copy(p.color),v.opacity.value=p.opacity,v.size.value=p.size*w,v.scale.value=.5*M,p.map&&(v.map.value=p.map),p.alphaMap&&(v.alphaMap.value=p.alphaMap),p.map?E=p.map:p.alphaMap&&(E=p.alphaMap),void 0!==E&&(!0===E.matrixAutoUpdate&&E.updateMatrix(),v.uvTransform.value.copy(E.matrix))}(v,p,w,M):p.isSpriteMaterial?function(v,p){let w;v.diffuse.value.copy(p.color),v.opacity.value=p.opacity,v.rotation.value=p.rotation,p.map&&(v.map.value=p.map),p.alphaMap&&(v.alphaMap.value=p.alphaMap),p.map?w=p.map:p.alphaMap&&(w=p.alphaMap),void 0!==w&&(!0===w.matrixAutoUpdate&&w.updateMatrix(),v.uvTransform.value.copy(w.matrix))}(v,p):p.isShadowMaterial?(v.color.value.copy(p.color),v.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}}}function He(r){const e=void 0!==(r=r||{}).canvas?r.canvas:function(){const r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return r.style.display="block",r}(),t=void 0!==r.context?r.context:null,n=void 0!==r.alpha&&r.alpha,i=void 0===r.depth||r.depth,s=void 0===r.stencil||r.stencil,o=void 0!==r.antialias&&r.antialias,a=void 0===r.premultipliedAlpha||r.premultipliedAlpha,l=void 0!==r.preserveDrawingBuffer&&r.preserveDrawingBuffer,c=void 0!==r.powerPreference?r.powerPreference:"default",u=void 0!==r.failIfMajorPerformanceCaveat&&r.failIfMajorPerformanceCaveat;let h=null,d=null;const f=[],m=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Lt,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;const x=this;let y=!1,v=0,p=0,w=null,M=-1,E=null;const _=new Ne,C=new Ne;let L=null,D=e.width,B=e.height,G=1,k=null,R=null;const F=new Ne(0,0,D,B),O=new Ne(0,0,D,B);let I=!1;const X=new ls;let K=!1,j=!1;const ae=new le,oe=new b,pe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function _e(){return null===w?G:1}let Re,be,me,De,Ee,Ce,Y,Q,te,he,ie,A,T,W,q,re,ue,Fe,ve,P,J,ee,V=t;function Ve(S,U){for(let N=0;N<S.length;N++){const ne=e.getContext(S[N],U);if(null!==ne)return ne}return null}try{const S={alpha:n,depth:i,stencil:s,antialias:o,premultipliedAlpha:a,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if(e.addEventListener("webglcontextlost",ge,!1),e.addEventListener("webglcontextrestored",ze,!1),null===V){const U=["webgl2","webgl","experimental-webgl"];if(!0===x.isWebGL1Renderer&&U.shift(),V=Ve(U,S),null===V)throw Ve(U)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===V.getShaderPrecisionFormat&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(S){throw console.error("THREE.WebGLRenderer: "+S.message),S}function fe(){Re=new lg(V),be=new og(V,Re,r),Re.init(be),J=new Nv(V,Re,be),me=new Ov(V,Re,be),De=new dg(V),Ee=new Mv,Ce=new Bv(V,Re,me,Ee,be,J,De),Y=new cg(x),Q=new Of(V,be),ee=new rg(V,Re,Q,be),te=new ug(V,Q,De,ee),he=new gg(V,te,Q,De),Fe=new mg(V),q=new ag(Ee),ie=new wv(x,Y,Re,be,ee,q),A=new Uv(Ee),T=new Ev(Ee),W=new Iv(Re,be),ue=new ig(x,Y,me,he,a),re=new $c(x,he,be),ve=new sg(V,Re,De,be),P=new hg(V,Re,De,be),De.programs=ie.programs,x.capabilities=be,x.extensions=Re,x.properties=Ee,x.renderLists=T,x.shadowMap=re,x.state=me,x.info=De}fe();const Z=new zv(x,V);function ge(S){S.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function ze(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const S=De.autoReset,U=re.enabled,N=re.autoUpdate,H=re.needsUpdate,ne=re.type;fe(),De.autoReset=S,re.enabled=U,re.autoUpdate=N,re.needsUpdate=H,re.type=ne}function rt(S){const U=S.target;U.removeEventListener("dispose",rt),function(S){(function(S){const U=Ee.get(S).programs;void 0!==U&&U.forEach(function(N){ie.releaseProgram(N)})})(S),Ee.remove(S)}(U)}this.xr=Z,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const S=Re.get("WEBGL_lose_context");S&&S.loseContext()},this.forceContextRestore=function(){const S=Re.get("WEBGL_lose_context");S&&S.restoreContext()},this.getPixelRatio=function(){return G},this.setPixelRatio=function(S){void 0!==S&&(G=S,this.setSize(D,B,!1))},this.getSize=function(S){return void 0===S&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),S=new z),S.set(D,B)},this.setSize=function(S,U,N){Z.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(D=S,B=U,e.width=Math.floor(S*G),e.height=Math.floor(U*G),!1!==N&&(e.style.width=S+"px",e.style.height=U+"px"),this.setViewport(0,0,S,U))},this.getDrawingBufferSize=function(S){return void 0===S&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),S=new z),S.set(D*G,B*G).floor()},this.setDrawingBufferSize=function(S,U,N){D=S,B=U,G=N,e.width=Math.floor(S*N),e.height=Math.floor(U*N),this.setViewport(0,0,S,U)},this.getCurrentViewport=function(S){return void 0===S&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),S=new Ne),S.copy(_)},this.getViewport=function(S){return S.copy(F)},this.setViewport=function(S,U,N,H){S.isVector4?F.set(S.x,S.y,S.z,S.w):F.set(S,U,N,H),me.viewport(_.copy(F).multiplyScalar(G).floor())},this.getScissor=function(S){return S.copy(O)},this.setScissor=function(S,U,N,H){S.isVector4?O.set(S.x,S.y,S.z,S.w):O.set(S,U,N,H),me.scissor(C.copy(O).multiplyScalar(G).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(S){me.setScissorTest(I=S)},this.setOpaqueSort=function(S){k=S},this.setTransparentSort=function(S){R=S},this.getClearColor=function(S){return void 0===S&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),S=new se),S.copy(ue.getClearColor())},this.setClearColor=function(){ue.setClearColor.apply(ue,arguments)},this.getClearAlpha=function(){return ue.getClearAlpha()},this.setClearAlpha=function(){ue.setClearAlpha.apply(ue,arguments)},this.clear=function(S,U,N){let H=0;(void 0===S||S)&&(H|=16384),(void 0===U||U)&&(H|=256),(void 0===N||N)&&(H|=1024),V.clear(H)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ge,!1),e.removeEventListener("webglcontextrestored",ze,!1),T.dispose(),W.dispose(),Ee.dispose(),Y.dispose(),he.dispose(),ee.dispose(),Z.dispose(),Z.removeEventListener("sessionstart",ih),Z.removeEventListener("sessionend",rh),ei.stop()},this.renderBufferImmediate=function(S,U){ee.initAttributes();const N=Ee.get(S);S.hasPositions&&!N.position&&(N.position=V.createBuffer()),S.hasNormals&&!N.normal&&(N.normal=V.createBuffer()),S.hasUvs&&!N.uv&&(N.uv=V.createBuffer()),S.hasColors&&!N.color&&(N.color=V.createBuffer());const H=U.getAttributes();S.hasPositions&&(V.bindBuffer(34962,N.position),V.bufferData(34962,S.positionArray,35048),ee.enableAttribute(H.position),V.vertexAttribPointer(H.position,3,5126,!1,0,0)),S.hasNormals&&(V.bindBuffer(34962,N.normal),V.bufferData(34962,S.normalArray,35048),ee.enableAttribute(H.normal),V.vertexAttribPointer(H.normal,3,5126,!1,0,0)),S.hasUvs&&(V.bindBuffer(34962,N.uv),V.bufferData(34962,S.uvArray,35048),ee.enableAttribute(H.uv),V.vertexAttribPointer(H.uv,2,5126,!1,0,0)),S.hasColors&&(V.bindBuffer(34962,N.color),V.bufferData(34962,S.colorArray,35048),ee.enableAttribute(H.color),V.vertexAttribPointer(H.color,3,5126,!1,0,0)),ee.disableUnusedAttributes(),V.drawArrays(4,0,S.count),S.count=0},this.renderBufferDirect=function(S,U,N,H,ne,Ie){null===U&&(U=pe);const xe=ne.isMesh&&ne.matrixWorld.determinant()<0,Me=lh(S,U,H,ne);me.setMaterial(H,xe);let We=N.index;const we=N.attributes.position;if(null===We){if(void 0===we||0===we.count)return}else if(0===We.count)return;let Oe=1;!0===H.wireframe&&(We=te.getWireframeAttribute(N),Oe=2),(H.morphTargets||H.morphNormals)&&Fe.update(ne,N,H,Me),ee.setup(ne,H,Me,N,We);let ye,Ue=ve;null!==We&&(ye=Q.get(We),Ue=P,Ue.setIndex(ye));const en=null!==We?We.count:we.count,Et=N.drawRange.start*Oe,ti=N.drawRange.count*Oe,ct=null!==Ie?Ie.start*Oe:0,ni=null!==Ie?Ie.count*Oe:1/0,st=Math.max(Et,ct),Da=Math.min(en,Et+ti,ct+ni)-1,Pt=Math.max(0,Da-st+1);if(0!==Pt){if(ne.isMesh)!0===H.wireframe?(me.setLineWidth(H.wireframeLinewidth*_e()),Ue.setMode(1)):Ue.setMode(4);else if(ne.isLine){let hn=H.linewidth;void 0===hn&&(hn=1),me.setLineWidth(hn*_e()),Ue.setMode(ne.isLineSegments?1:ne.isLineLoop?2:3)}else ne.isPoints?Ue.setMode(0):ne.isSprite&&Ue.setMode(4);if(ne.isInstancedMesh)Ue.renderInstances(st,Pt,ne.count);else if(N.isInstancedBufferGeometry){const hn=Math.min(N.instanceCount,N._maxInstanceCount);Ue.renderInstances(st,Pt,hn)}else Ue.render(st,Pt)}},this.compile=function(S,U){d=W.get(S),d.init(),S.traverseVisible(function(N){N.isLight&&N.layers.test(U.layers)&&(d.pushLight(N),N.castShadow&&d.pushShadow(N))}),d.setupLights(),S.traverse(function(N){const H=N.material;if(H)if(Array.isArray(H))for(let ne=0;ne<H.length;ne++)Ia(H[ne],S,N);else Ia(H,S,N)})};let Vt=null;function ih(){ei.stop()}function rh(){ei.start()}const ei=new Cc;function sh(S,U,N,H){if(!1===S.visible)return;if(S.layers.test(U.layers))if(S.isGroup)N=S.renderOrder;else if(S.isLOD)!0===S.autoUpdate&&S.update(U);else if(S.isLight)d.pushLight(S),S.castShadow&&d.pushShadow(S);else if(S.isSprite){if(!S.frustumCulled||X.intersectsSprite(S)){H&&oe.setFromMatrixPosition(S.matrixWorld).applyMatrix4(ae);const xe=he.update(S),Me=S.material;Me.visible&&h.push(S,xe,Me,N,oe.z,null)}}else if(S.isImmediateRenderObject)H&&oe.setFromMatrixPosition(S.matrixWorld).applyMatrix4(ae),h.push(S,null,S.material,N,oe.z,null);else if((S.isMesh||S.isLine||S.isPoints)&&(S.isSkinnedMesh&&S.skeleton.frame!==De.render.frame&&(S.skeleton.update(),S.skeleton.frame=De.render.frame),!S.frustumCulled||X.intersectsObject(S))){H&&oe.setFromMatrixPosition(S.matrixWorld).applyMatrix4(ae);const xe=he.update(S),Me=S.material;if(Array.isArray(Me)){const We=xe.groups;for(let we=0,Oe=We.length;we<Oe;we++){const ye=We[we],Ue=Me[ye.materialIndex];Ue&&Ue.visible&&h.push(S,xe,Ue,N,oe.z,ye)}}else Me.visible&&h.push(S,xe,Me,N,oe.z,null)}const Ie=S.children;for(let xe=0,Me=Ie.length;xe<Me;xe++)sh(Ie[xe],U,N,H)}function oh(S,U,N){const H=!0===U.isScene?U.overrideMaterial:null;for(let ne=0,Ie=S.length;ne<Ie;ne++){const xe=S[ne],Me=xe.object,We=xe.geometry,we=null===H?xe.material:H,Oe=xe.group;if(N.isArrayCamera){const ye=N.cameras;for(let Ue=0,en=ye.length;Ue<en;Ue++){const Et=ye[Ue];Me.layers.test(Et.layers)&&(me.viewport(_.copy(Et.viewport)),d.setupLightsView(Et),ah(Me,U,Et,We,we,Oe))}}else ah(Me,U,N,We,we,Oe)}}function ah(S,U,N,H,ne,Ie){if(S.onBeforeRender(x,U,N,H,ne,Ie),S.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,S.matrixWorld),S.normalMatrix.getNormalMatrix(S.modelViewMatrix),S.isImmediateRenderObject){const xe=lh(N,U,ne,S);me.setMaterial(ne),ee.reset(),function(S,U){S.render(function(N){x.renderBufferImmediate(N,U)})}(S,xe)}else x.renderBufferDirect(N,U,H,ne,S,Ie);S.onAfterRender(x,U,N,H,ne,Ie)}function Ia(S,U,N){!0!==U.isScene&&(U=pe);const H=Ee.get(S),ne=d.state.lights,xe=ne.state.version,Me=ie.getParameters(S,ne.state,d.state.shadowsArray,U,N),We=ie.getProgramCacheKey(Me);let we=H.programs;H.environment=S.isMeshStandardMaterial?U.environment:null,H.fog=U.fog,H.envMap=Y.get(S.envMap||H.environment),void 0===we&&(S.addEventListener("dispose",rt),we=new Map,H.programs=we);let Oe=we.get(We);if(void 0!==Oe){if(H.currentProgram===Oe&&H.lightsStateVersion===xe)return ch(S,Me),Oe}else Me.uniforms=ie.getUniforms(S),S.onBuild(Me,x),S.onBeforeCompile(Me,x),Oe=ie.acquireProgram(Me,We),we.set(We,Oe),H.uniforms=Me.uniforms;const ye=H.uniforms;(!S.isShaderMaterial&&!S.isRawShaderMaterial||!0===S.clipping)&&(ye.clippingPlanes=q.uniform),ch(S,Me),H.needsLights=function(S){return S.isMeshLambertMaterial||S.isMeshToonMaterial||S.isMeshPhongMaterial||S.isMeshStandardMaterial||S.isShadowMaterial||S.isShaderMaterial&&!0===S.lights}(S),H.lightsStateVersion=xe,H.needsLights&&(ye.ambientLightColor.value=ne.state.ambient,ye.lightProbe.value=ne.state.probe,ye.directionalLights.value=ne.state.directional,ye.directionalLightShadows.value=ne.state.directionalShadow,ye.spotLights.value=ne.state.spot,ye.spotLightShadows.value=ne.state.spotShadow,ye.rectAreaLights.value=ne.state.rectArea,ye.ltc_1.value=ne.state.rectAreaLTC1,ye.ltc_2.value=ne.state.rectAreaLTC2,ye.pointLights.value=ne.state.point,ye.pointLightShadows.value=ne.state.pointShadow,ye.hemisphereLights.value=ne.state.hemi,ye.directionalShadowMap.value=ne.state.directionalShadowMap,ye.directionalShadowMatrix.value=ne.state.directionalShadowMatrix,ye.spotShadowMap.value=ne.state.spotShadowMap,ye.spotShadowMatrix.value=ne.state.spotShadowMatrix,ye.pointShadowMap.value=ne.state.pointShadowMap,ye.pointShadowMatrix.value=ne.state.pointShadowMatrix);const Ue=Oe.getUniforms(),en=Tn.seqWithValue(Ue.seq,ye);return H.currentProgram=Oe,H.uniformsList=en,Oe}function ch(S,U){const N=Ee.get(S);N.outputEncoding=U.outputEncoding,N.instancing=U.instancing,N.numClippingPlanes=U.numClippingPlanes,N.numIntersection=U.numClipIntersection,N.vertexAlphas=U.vertexAlphas}function lh(S,U,N,H){!0!==U.isScene&&(U=pe),Ce.resetTextureUnits();const ne=U.fog,xe=null===w?x.outputEncoding:w.texture.encoding,Me=Y.get(N.envMap||(N.isMeshStandardMaterial?U.environment:null)),We=!0===N.vertexColors&&H.geometry&&H.geometry.attributes.color&&4===H.geometry.attributes.color.itemSize,we=Ee.get(N),Oe=d.state.lights;!0!==K||!0!==j&&S===E||q.setState(N,S,S===E&&N.id===M);let ye=!1;N.version===we.__version?(we.needsLights&&we.lightsStateVersion!==Oe.state.version||we.outputEncoding!==xe||H.isInstancedMesh&&!1===we.instancing||!H.isInstancedMesh&&!0===we.instancing||we.envMap!==Me||N.fog&&we.fog!==ne||void 0!==we.numClippingPlanes&&(we.numClippingPlanes!==q.numPlanes||we.numIntersection!==q.numIntersection)||we.vertexAlphas!==We)&&(ye=!0):(ye=!0,we.__version=N.version);let Ue=we.currentProgram;!0===ye&&(Ue=Ia(N,U,H));let en=!1,Et=!1,ti=!1;const ct=Ue.getUniforms(),ni=we.uniforms;if(me.useProgram(Ue.program)&&(en=!0,Et=!0,ti=!0),N.id!==M&&(M=N.id,Et=!0),en||E!==S){if(ct.setValue(V,"projectionMatrix",S.projectionMatrix),be.logarithmicDepthBuffer&&ct.setValue(V,"logDepthBufFC",2/(Math.log(S.far+1)/Math.LN2)),E!==S&&(E=S,Et=!0,ti=!0),N.isShaderMaterial||N.isMeshPhongMaterial||N.isMeshToonMaterial||N.isMeshStandardMaterial||N.envMap){const st=ct.map.cameraPosition;void 0!==st&&st.setValue(V,oe.setFromMatrixPosition(S.matrixWorld))}(N.isMeshPhongMaterial||N.isMeshToonMaterial||N.isMeshLambertMaterial||N.isMeshBasicMaterial||N.isMeshStandardMaterial||N.isShaderMaterial)&&ct.setValue(V,"isOrthographic",!0===S.isOrthographicCamera),(N.isMeshPhongMaterial||N.isMeshToonMaterial||N.isMeshLambertMaterial||N.isMeshBasicMaterial||N.isMeshStandardMaterial||N.isShaderMaterial||N.isShadowMaterial||N.skinning)&&ct.setValue(V,"viewMatrix",S.matrixWorldInverse)}if(N.skinning){ct.setOptional(V,H,"bindMatrix"),ct.setOptional(V,H,"bindMatrixInverse");const st=H.skeleton;if(st){const Da=st.bones;if(be.floatVertexTextures){if(null===st.boneTexture){let Pt=Math.sqrt(4*Da.length);Pt=dc(Pt),Pt=Math.max(Pt,4);const hn=new Float32Array(Pt*Pt*4);hn.set(st.boneMatrices);const By=new cr(hn,Pt,Pt,kt,mn);st.boneMatrices=hn,st.boneTexture=By,st.boneTextureSize=Pt}ct.setValue(V,"boneTexture",st.boneTexture,Ce),ct.setValue(V,"boneTextureSize",st.boneTextureSize)}else ct.setOptional(V,st,"boneMatrices")}}return(Et||we.receiveShadow!==H.receiveShadow)&&(we.receiveShadow=H.receiveShadow,ct.setValue(V,"receiveShadow",H.receiveShadow)),Et&&(ct.setValue(V,"toneMappingExposure",x.toneMappingExposure),we.needsLights&&function(S,U){S.ambientLightColor.needsUpdate=U,S.lightProbe.needsUpdate=U,S.directionalLights.needsUpdate=U,S.directionalLightShadows.needsUpdate=U,S.pointLights.needsUpdate=U,S.pointLightShadows.needsUpdate=U,S.spotLights.needsUpdate=U,S.spotLightShadows.needsUpdate=U,S.rectAreaLights.needsUpdate=U,S.hemisphereLights.needsUpdate=U}(ni,ti),ne&&N.fog&&A.refreshFogUniforms(ni,ne),A.refreshMaterialUniforms(ni,N,G,B),Tn.upload(V,we.uniformsList,ni,Ce)),N.isShaderMaterial&&!0===N.uniformsNeedUpdate&&(Tn.upload(V,we.uniformsList,ni,Ce),N.uniformsNeedUpdate=!1),N.isSpriteMaterial&&ct.setValue(V,"center",H.center),ct.setValue(V,"modelViewMatrix",H.modelViewMatrix),ct.setValue(V,"normalMatrix",H.normalMatrix),ct.setValue(V,"modelMatrix",H.matrixWorld),Ue}ei.setAnimationLoop(function(S){Vt&&Vt(S)}),"undefined"!=typeof window&&ei.setContext(window),this.setAnimationLoop=function(S){Vt=S,Z.setAnimationLoop(S),null===S?ei.stop():ei.start()},Z.addEventListener("sessionstart",ih),Z.addEventListener("sessionend",rh),this.render=function(S,U){let N,H;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),N=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),H=arguments[3]),void 0!==U&&!0!==U.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===y)return;!0===S.autoUpdate&&S.updateMatrixWorld(),null===U.parent&&U.updateMatrixWorld(),!0===Z.enabled&&!0===Z.isPresenting&&(U=Z.getCamera(U)),!0===S.isScene&&S.onBeforeRender(x,S,U,N||w),d=W.get(S,m.length),d.init(),m.push(d),ae.multiplyMatrices(U.projectionMatrix,U.matrixWorldInverse),X.setFromProjectionMatrix(ae),j=this.localClippingEnabled,K=q.init(this.clippingPlanes,j,U),h=T.get(S,f.length),h.init(),f.push(h),sh(S,U,0,x.sortObjects),h.finish(),!0===x.sortObjects&&h.sort(k,R),!0===K&&q.beginShadows();const ne=d.state.shadowsArray;re.render(ne,S,U),d.setupLights(),d.setupLightsView(U),!0===K&&q.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==N&&this.setRenderTarget(N),ue.render(h,S,U,H);const Ie=h.opaque,xe=h.transparent;Ie.length>0&&oh(Ie,S,U),xe.length>0&&oh(xe,S,U),null!==w&&(Ce.updateRenderTargetMipmap(w),Ce.updateMultisampleRenderTarget(w)),!0===S.isScene&&S.onAfterRender(x,S,U),me.buffers.depth.setTest(!0),me.buffers.depth.setMask(!0),me.buffers.color.setMask(!0),me.setPolygonOffset(!1),ee.resetDefaultState(),M=-1,E=null,m.pop(),d=m.length>0?m[m.length-1]:null,f.pop(),h=f.length>0?f[f.length-1]:null},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return p},this.getRenderTarget=function(){return w},this.setRenderTarget=function(S,U=0,N=0){w=S,v=U,p=N,S&&void 0===Ee.get(S).__webglFramebuffer&&Ce.setupRenderTarget(S);let H=null,ne=!1,Ie=!1;if(S){const xe=S.texture;(xe.isDataTexture3D||xe.isDataTexture2DArray)&&(Ie=!0);const Me=Ee.get(S).__webglFramebuffer;S.isWebGLCubeRenderTarget?(H=Me[U],ne=!0):H=S.isWebGLMultisampleRenderTarget?Ee.get(S).__webglMultisampledFramebuffer:Me,_.copy(S.viewport),C.copy(S.scissor),L=S.scissorTest}else _.copy(F).multiplyScalar(G).floor(),C.copy(O).multiplyScalar(G).floor(),L=I;if(me.bindFramebuffer(36160,H),me.viewport(_),me.scissor(C),me.setScissorTest(L),ne){const xe=Ee.get(S.texture);V.framebufferTexture2D(36160,36064,34069+U,xe.__webglTexture,N)}else if(Ie){const xe=Ee.get(S.texture);V.framebufferTextureLayer(36160,36064,xe.__webglTexture,N||0,U||0)}},this.readRenderTargetPixels=function(S,U,N,H,ne,Ie,xe){if(!S||!S.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Me=Ee.get(S).__webglFramebuffer;if(S.isWebGLCubeRenderTarget&&void 0!==xe&&(Me=Me[xe]),Me){me.bindFramebuffer(36160,Me);try{const We=S.texture,we=We.format,Oe=We.type;if(we!==kt&&J.convert(we)!==V.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const ye=1016===Oe&&(Re.has("EXT_color_buffer_half_float")||be.isWebGL2&&Re.has("EXT_color_buffer_float"));if(!(1009===Oe||J.convert(Oe)===V.getParameter(35738)||Oe===mn&&(be.isWebGL2||Re.has("OES_texture_float")||Re.has("WEBGL_color_buffer_float"))||ye))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===V.checkFramebufferStatus(36160)?U>=0&&U<=S.width-H&&N>=0&&N<=S.height-ne&&V.readPixels(U,N,H,ne,J.convert(we),J.convert(Oe),Ie):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const We=null!==w?Ee.get(w).__webglFramebuffer:null;me.bindFramebuffer(36160,We)}}},this.copyFramebufferToTexture=function(S,U,N=0){const H=Math.pow(2,-N),ne=Math.floor(U.image.width*H),Ie=Math.floor(U.image.height*H),xe=J.convert(U.format);Ce.setTexture2D(U,0),V.copyTexImage2D(3553,N,xe,S.x,S.y,ne,Ie,0),me.unbindTexture()},this.copyTextureToTexture=function(S,U,N,H=0){const ne=U.image.width,Ie=U.image.height,xe=J.convert(N.format),Me=J.convert(N.type);Ce.setTexture2D(N,0),V.pixelStorei(37440,N.flipY),V.pixelStorei(37441,N.premultiplyAlpha),V.pixelStorei(3317,N.unpackAlignment),U.isDataTexture?V.texSubImage2D(3553,H,S.x,S.y,ne,Ie,xe,Me,U.image.data):U.isCompressedTexture?V.compressedTexSubImage2D(3553,H,S.x,S.y,U.mipmaps[0].width,U.mipmaps[0].height,xe,U.mipmaps[0].data):V.texSubImage2D(3553,H,S.x,S.y,xe,Me,U.image),0===H&&N.generateMipmaps&&V.generateMipmap(3553),me.unbindTexture()},this.copyTextureToTexture3D=function(S,U,N,H,ne=0){if(x.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const{width:Ie,height:xe,data:Me}=N.image,We=J.convert(H.format),we=J.convert(H.type);let Oe;if(H.isDataTexture3D)Ce.setTexture3D(H,0),Oe=32879;else{if(!H.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Ce.setTexture2DArray(H,0),Oe=35866}V.pixelStorei(37440,H.flipY),V.pixelStorei(37441,H.premultiplyAlpha),V.pixelStorei(3317,H.unpackAlignment);const ye=V.getParameter(3314),Ue=V.getParameter(32878),en=V.getParameter(3316),Et=V.getParameter(3315),ti=V.getParameter(32877);V.pixelStorei(3314,Ie),V.pixelStorei(32878,xe),V.pixelStorei(3316,S.min.x),V.pixelStorei(3315,S.min.y),V.pixelStorei(32877,S.min.z),V.texSubImage3D(Oe,ne,U.x,U.y,U.z,S.max.x-S.min.x+1,S.max.y-S.min.y+1,S.max.z-S.min.z+1,We,we,Me),V.pixelStorei(3314,ye),V.pixelStorei(32878,Ue),V.pixelStorei(3316,en),V.pixelStorei(3315,Et),V.pixelStorei(32877,ti),0===ne&&H.generateMipmaps&&V.generateMipmap(Oe),me.unbindTexture()},this.initTexture=function(S){Ce.setTexture2D(S,0),me.unbindTexture()},this.resetState=function(){v=0,p=0,w=null,me.reset(),ee.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(class extends He{}).prototype.isWebGL1Renderer=!0;class us{constructor(e,t=25e-5){this.name="",this.color=new se(e),this.density=t}clone(){return new us(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}us.prototype.isFogExp2=!0;class hs{constructor(e,t=1,n=1e3){this.name="",this.color=new se(e),this.near=t,this.far=n}clone(){return new hs(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}hs.prototype.isFog=!0;class ds extends Pe{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}ds.prototype.isScene=!0;class En{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=Qi,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Rt(),this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Rt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new En(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Rt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}En.prototype.isInterleavedBuffer=!0;const et=new b;class Hn{constructor(e,t,n,i){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)et.x=this.getX(t),et.y=this.getY(t),et.z=this.getZ(t),et.applyMatrix4(e),this.setXYZ(t,et.x,et.y,et.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)et.x=this.getX(t),et.y=this.getY(t),et.z=this.getZ(t),et.applyNormalMatrix(e),this.setXYZ(t,et.x,et.y,et.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)et.x=this.getX(t),et.y=this.getY(t),et.z=this.getZ(t),et.transformDirection(e),this.setXYZ(t,et.x,et.y,et.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return this.data.array[(e=e*this.data.stride+this.offset)+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Be(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Hn(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}Hn.prototype.isInterleavedBufferAttribute=!0;class Uo extends at{constructor(e){super(),this.type="SpriteMaterial",this.color=new se(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}let Ai;Uo.prototype.isSpriteMaterial=!0;const hr=new b,Ci=new b,Li=new b,Pi=new z,dr=new z,el=new le,fs=new b,fr=new b,ps=new b,tl=new z,Go=new z,nl=new z;function ms(r,e,t,n,i,s){Pi.subVectors(r,t).addScalar(.5).multiply(n),void 0!==i?(dr.x=s*Pi.x-i*Pi.y,dr.y=i*Pi.x+s*Pi.y):dr.copy(Pi),r.copy(e),r.x+=dr.x,r.y+=dr.y,r.applyMatrix4(el)}(class extends Pe{constructor(e){if(super(),this.type="Sprite",void 0===Ai){Ai=new de;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new En(t,5);Ai.setIndex([0,1,2,0,2,3]),Ai.setAttribute("position",new Hn(n,3,0,!1)),Ai.setAttribute("uv",new Hn(n,2,3,!1))}this.geometry=Ai,this.material=void 0!==e?e:new Uo,this.center=new z(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ci.setFromMatrixScale(this.matrixWorld),el.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Li.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Ci.multiplyScalar(-Li.z);const n=this.material.rotation;let i,s;0!==n&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;ms(fs.set(-.5,-.5,0),Li,o,Ci,i,s),ms(fr.set(.5,-.5,0),Li,o,Ci,i,s),ms(ps.set(.5,.5,0),Li,o,Ci,i,s),tl.set(0,0),Go.set(1,0),nl.set(1,1);let a=e.ray.intersectTriangle(fs,fr,ps,!1,hr);if(null===a&&(ms(fr.set(-.5,.5,0),Li,o,Ci,i,s),Go.set(0,1),a=e.ray.intersectTriangle(fs,ps,fr,!1,hr),null===a))return;const l=e.ray.origin.distanceTo(hr);l<e.near||l>e.far||t.push({distance:l,point:hr.clone(),uv:it.getUV(hr,fs,fr,ps,tl,Go,nl,new z),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}).prototype.isSprite=!0;const rl=new b,sl=new Ne,ol=new Ne,Wv=new b,al=new le;class Vo extends Xe{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new le,this.bindMatrixInverse=new le}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Ne,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;sl.fromBufferAttribute(i.attributes.skinIndex,e),ol.fromBufferAttribute(i.attributes.skinWeight,e),rl.fromBufferAttribute(i.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=ol.getComponent(s);if(0!==o){const a=sl.getComponent(s);al.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(Wv.copy(rl).applyMatrix4(al),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}Vo.prototype.isSkinnedMesh=!0;(class extends Pe{constructor(){super(),this.type="Bone"}}).prototype.isBone=!0;const ll=new le,ul=new le,vs=[],pr=new Xe;(class extends Xe{constructor(e,t,n){super(e,t),this.instanceMatrix=new Be(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(pr.geometry=this.geometry,pr.material=this.material,void 0!==pr.material)for(let s=0;s<i;s++){this.getMatrixAt(s,ll),ul.multiplyMatrices(n,ll),pr.matrixWorld=ul,pr.raycast(e,vs);for(let o=0,a=vs.length;o<a;o++){const l=vs[o];l.instanceId=s,l.object=this,t.push(l)}vs.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Be(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}).prototype.isInstancedMesh=!0;class pt extends at{constructor(e){super(),this.type="LineBasicMaterial",this.color=new se(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}pt.prototype.isLineBasicMaterial=!0;const dl=new b,fl=new b,pl=new le,Zo=new zn,xs=new kn;class Vn extends Pe{constructor(e=new de,t=new pt){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)dl.fromBufferAttribute(t,i-1),fl.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=dl.distanceTo(fl);e.setAttribute("lineDistance",new ce(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),xs.copy(n.boundingSphere),xs.applyMatrix4(i),xs.radius+=s,!1===e.ray.intersectsSphere(xs))return;pl.copy(i).invert(),Zo.copy(e.ray).applyMatrix4(pl);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new b,u=new b,h=new b,d=new b,f=this.isLineSegments?2:1;if(n.isBufferGeometry){const m=n.index,y=n.attributes.position;if(null!==m)for(let w=Math.max(0,o.start),M=Math.min(m.count,o.start+o.count)-1;w<M;w+=f){const E=m.getX(w),_=m.getX(w+1);if(c.fromBufferAttribute(y,E),u.fromBufferAttribute(y,_),Zo.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(d);L<e.near||L>e.far||t.push({distance:L,point:h.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}else for(let w=Math.max(0,o.start),M=Math.min(y.count,o.start+o.count)-1;w<M;w+=f){if(c.fromBufferAttribute(y,w),u.fromBufferAttribute(y,w+1),Zo.distanceSqToSegment(c,u,d,h)>l)continue;d.applyMatrix4(this.matrixWorld);const _=e.ray.origin.distanceTo(d);_<e.near||_>e.far||t.push({distance:_,point:h.clone().applyMatrix4(this.matrixWorld),index:w,face:null,faceIndex:null,object:this})}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Vn.prototype.isLine=!0;const ml=new b,gl=new b;class an extends Vn{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)ml.fromBufferAttribute(t,i),gl.fromBufferAttribute(t,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+ml.distanceTo(gl);e.setAttribute("lineDistance",new ce(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}an.prototype.isLineSegments=!0;(class extends Vn{constructor(e,t){super(e,t),this.type="LineLoop"}}).prototype.isLineLoop=!0;class Ri extends at{constructor(e){super(),this.type="PointsMaterial",this.color=new se(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}Ri.prototype.isPointsMaterial=!0;const xl=new le,Xo=new zn,ys=new kn,_s=new b;function yl(r,e,t,n,i,s,o){const a=Xo.distanceSqToPoint(r);if(a<t){const l=new b;Xo.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,object:o})}}(class extends Pe{constructor(e=new de,t=new Ri){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),ys.copy(n.boundingSphere),ys.applyMatrix4(i),ys.radius+=s,!1===e.ray.intersectsSphere(ys))return;xl.copy(i).invert(),Xo.copy(e.ray).applyMatrix4(xl);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a;if(n.isBufferGeometry){const c=n.index,h=n.attributes.position;if(null!==c)for(let m=Math.max(0,o.start),x=Math.min(c.count,o.start+o.count);m<x;m++){const y=c.getX(m);_s.fromBufferAttribute(h,y),yl(_s,y,l,i,e,t,this)}else for(let m=Math.max(0,o.start),x=Math.min(h.count,o.start+o.count);m<x;m++)_s.fromBufferAttribute(h,m),yl(_s,m,l,i,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;void 0!==t&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}).prototype.isPoints=!0,class extends ht{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.format=void 0!==a?a:Dn,this.minFilter=void 0!==o?o:lt,this.magFilter=void 0!==s?s:lt,this.generateMipmaps=!1;const u=this;"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(function h(){u.needsUpdate=!0,e.requestVideoFrameCallback(h)})}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e==0&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}.prototype.isVideoTexture=!0;(class extends ht{constructor(e,t,n,i,s,o,a,l,c,u,h,d){super(null,o,a,l,c,u,i,s,h,d),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}).prototype.isCompressedTexture=!0,class extends ht{constructor(e,t,n,i,s,o,a,l,c){super(e,t,n,i,s,o,a,l,c),this.needsUpdate=!0}}.prototype.isCanvasTexture=!0,class extends ht{constructor(e,t,n,i,s,o,a,l,c,u){if((u=void 0!==u?u:si)!==si&&u!==Ji)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&u===si&&(n=1012),void 0===n&&u===Ji&&(n=ji),super(null,i,s,o,a,l,u,n,c),this.image={width:e,height:t},this.magFilter=void 0!==a?a:Ge,this.minFilter=void 0!==l?l:Ge,this.flipY=!1,this.generateMipmaps=!1}}.prototype.isDepthTexture=!0;class mr extends de{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],d=[],f=[];let m=0;const x=[],y=n/2;let v=0;function w(M){const E=m,_=new z,C=new b;let L=0;const D=!0===M?e:t,B=!0===M?1:-1;for(let k=1;k<=i;k++)h.push(0,y*B,0),d.push(0,B,0),f.push(.5,.5),m++;const G=m;for(let k=0;k<=i;k++){const F=k/i*l+a,O=Math.cos(F),I=Math.sin(F);C.x=D*I,C.y=y*B,C.z=D*O,h.push(C.x,C.y,C.z),d.push(0,B,0),_.x=.5*O+.5,_.y=.5*I*B+.5,f.push(_.x,_.y),m++}for(let k=0;k<i;k++){const R=E+k,F=G+k;!0===M?u.push(F,F+1,R):u.push(F+1,F,R),L+=3}c.addGroup(v,L,!0===M?1:2),v+=L}(function(){const M=new b,E=new b;let _=0;const C=(t-e)/n;for(let L=0;L<=s;L++){const D=[],B=L/s,G=B*(t-e)+e;for(let k=0;k<=i;k++){const R=k/i,F=R*l+a,O=Math.sin(F),I=Math.cos(F);E.x=G*O,E.y=-B*n+y,E.z=G*I,h.push(E.x,E.y,E.z),M.set(O,C,I).normalize(),d.push(M.x,M.y,M.z),f.push(R,1-B),D.push(m++)}x.push(D)}for(let L=0;L<i;L++)for(let D=0;D<s;D++){const G=x[D+1][L],k=x[D+1][L+1],R=x[D][L+1];u.push(x[D][L],G,R),u.push(G,k,R),_+=6}c.addGroup(v,_,0),v+=_})(),!1===o&&(e>0&&w(!0),t>0&&w(!1)),this.setIndex(u),this.setAttribute("position",new ce(h,3)),this.setAttribute("normal",new ce(d,3)),this.setAttribute("uv",new ce(f,2))}}const ws=new b,Ms=new b,Yo=new b,Ss=new it;class jo extends de{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0===e.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const i=Math.pow(10,4),s=Math.cos(On*t),o=e.getIndex(),a=e.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),d={},f=[];for(let m=0;m<l;m+=3){o?(c[0]=o.getX(m),c[1]=o.getX(m+1),c[2]=o.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:x,b:y,c:v}=Ss;if(x.fromBufferAttribute(a,c[0]),y.fromBufferAttribute(a,c[1]),v.fromBufferAttribute(a,c[2]),Ss.getNormal(Yo),h[0]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,h[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,h[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let p=0;p<3;p++){const w=(p+1)%3,M=h[p],E=h[w],_=Ss[u[p]],C=Ss[u[w]],L=`${M}_${E}`,D=`${E}_${M}`;D in d&&d[D]?(Yo.dot(d[D].normal)<=s&&(f.push(_.x,_.y,_.z),f.push(C.x,C.y,C.z)),d[D]=null):L in d||(d[L]={index0:c[p],index1:c[w],normal:Yo.clone()})}}for(const m in d)if(d[m]){const{index0:x,index1:y}=d[m];ws.fromBufferAttribute(a,x),Ms.fromBufferAttribute(a,y),f.push(ws.x,ws.y,ws.z),f.push(Ms.x,Ms.y,Ms.z)}this.setAttribute("position",new ce(f,3))}}function Sl(r,e,t,n,i){let s,o;if(i===function(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Al(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Al(s,r[s],r[s+1],o);return o&&Ts(o,o.next)&&(xr(o),o=o.next),o}function An(r,e){if(!r)return r;e||(e=r);let n,t=r;do{if(n=!1,t.steiner||!Ts(t,t.next)&&0!==Qe(t.prev,t,t.next))t=t.next;else{if(xr(t),t=e=t.prev,t===t.next)break;n=!0}}while(n||t!==e);return e}function gr(r,e,t,n,i,s,o){if(!r)return;!o&&s&&function(r,e,t,n){let i=r;do{null===i.z&&(i.z=Jo(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,function(r){let e,t,n,i,s,o,a,l,c=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<c&&(a++,n=n.nextZ,n);e++);for(l=c;a>0||l>0&&n;)0!==a&&(0===l||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,c*=2}while(o>1)}(i)}(r,n,i,s);let l,c,a=r;for(;r.prev!==r.next;)if(l=r.prev,c=r.next,s?Qv(r,n,i,s):Jv(r))e.push(l.i/t),e.push(r.i/t),e.push(c.i/t),xr(r),r=c.next,a=c.next;else if((r=c)===a){o?1===o?gr(r=$v(An(r),e,t),e,t,n,i,s,2):2===o&&Kv(r,e,t,n,i,s):gr(An(r),e,t,n,i,s,1);break}}function Jv(r){const e=r.prev,t=r,n=r.next;if(Qe(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(Di(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&Qe(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function Qv(r,e,t,n){const i=r.prev,s=r,o=r.next;if(Qe(i,s,o)>=0)return!1;const c=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,h=Jo(i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,e,t,n),d=Jo(c,u,e,t,n);let f=r.prevZ,m=r.nextZ;for(;f&&f.z>=h&&m&&m.z<=d;){if(f!==r.prev&&f!==r.next&&Di(i.x,i.y,s.x,s.y,o.x,o.y,f.x,f.y)&&Qe(f.prev,f,f.next)>=0||(f=f.prevZ,m!==r.prev&&m!==r.next&&Di(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Qe(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;f&&f.z>=h;){if(f!==r.prev&&f!==r.next&&Di(i.x,i.y,s.x,s.y,o.x,o.y,f.x,f.y)&&Qe(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;m&&m.z<=d;){if(m!==r.prev&&m!==r.next&&Di(i.x,i.y,s.x,s.y,o.x,o.y,m.x,m.y)&&Qe(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function $v(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Ts(i,s)&&Tl(i,n,n.next,s)&&vr(i,s)&&vr(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),xr(n),xr(n.next),n=r=s),n=n.next}while(n!==r);return An(n)}function Kv(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&c0(o,a)){let l=El(o,a);return o=An(o,o.next),l=An(l,l.next),gr(o,e,t,n,i,s),void gr(l,e,t,n,i,s)}a=a.next}o=o.next}while(o!==r)}function t0(r,e){return r.x-e.x}function n0(r,e){if(e=function(r,e){let t=e;const n=r.x,i=r.y;let o,s=-1/0;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=n&&d>s){if(s=d,d===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,l=o.x,c=o.y;let h,u=1/0;t=o;do{n>=t.x&&t.x>=l&&n!==t.x&&Di(i<c?n:s,i,l,c,i<c?s:n,i,t.x,t.y)&&(h=Math.abs(i-t.y)/(n-t.x),vr(t,r)&&(h<u||h===u&&(t.x>o.x||t.x===o.x&&r0(o,t)))&&(o=t,u=h)),t=t.next}while(t!==a);return o}(r,e)){const t=El(e,r);An(e,e.next),An(t,t.next)}}function r0(r,e){return Qe(r.prev,r,e.prev)<0&&Qe(e.next,r,r.next)<0}function Jo(r,e,t,n,i){return(r=1431655765&((r=858993459&((r=252645135&((r=16711935&((r=32767*(r-t)*i)|r<<8))|r<<4))|r<<2))|r<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function a0(r){let e=r,t=r;do{(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next}while(e!==r);return t}function Di(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function c0(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!function(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Tl(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}(r,e)&&(vr(r,e)&&vr(e,r)&&function(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do{t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next}while(t!==r);return n}(r,e)&&(Qe(r.prev,r,e.prev)||Qe(r,e.prev,e))||Ts(r,e)&&Qe(r.prev,r,r.next)>0&&Qe(e.prev,e,e.next)>0)}function Qe(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Ts(r,e){return r.x===e.x&&r.y===e.y}function Tl(r,e,t,n){const i=As(Qe(r,e,t)),s=As(Qe(r,e,n)),o=As(Qe(t,n,r)),a=As(Qe(t,n,e));return!!(i!==s&&o!==a||0===i&&Es(r,t,e)||0===s&&Es(r,n,e)||0===o&&Es(t,r,n)||0===a&&Es(t,e,n))}function Es(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function As(r){return r>0?1:r<0?-1:0}function vr(r,e){return Qe(r.prev,r,r.next)<0?Qe(r,e,r.next)>=0&&Qe(r,r.prev,e)>=0:Qe(r,e,r.prev)<0||Qe(r,r.next,e)<0}function El(r,e){const t=new Qo(r.i,r.x,r.y),n=new Qo(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Al(r,e,t,n){const i=new Qo(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function xr(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Qo(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class cn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return.5*n}static isClockWise(e){return cn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Cl(e),Ll(n,e);let o=e.length;t.forEach(Cl);for(let l=0;l<t.length;l++)i.push(o),o+=t[l].length,Ll(n,t[l]);const a=function(r,e,t){t=t||2;const n=e&&e.length,i=n?e[0]*t:r.length;let s=Sl(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c,u,h,d,f;if(n&&(s=function(r,e,t,n){const i=[];let s,o,a,l,c;for(s=0,o=e.length;s<o;s++)a=e[s]*n,l=s<o-1?e[s+1]*n:r.length,c=Sl(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(a0(c));for(i.sort(t0),s=0;s<i.length;s++)n0(i[s],t),t=An(t,t.next);return t}(r,e,s,t)),r.length>80*t){a=c=r[0],l=u=r[1];for(let m=t;m<i;m+=t)h=r[m],d=r[m+1],h<a&&(a=h),d<l&&(l=d),h>c&&(c=h),d>u&&(u=d);f=Math.max(c-a,u-l),f=0!==f?1/f:0}return gr(s,o,t,a,l,f),o}(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Cl(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Ll(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Wn extends de{constructor(e,t){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,l=e.length;a<l;a++)o(e[a]);function o(a){const l=[],c=void 0!==t.curveSegments?t.curveSegments:12,u=void 0!==t.steps?t.steps:1;let h=void 0!==t.depth?t.depth:100,d=void 0===t.bevelEnabled||t.bevelEnabled,f=void 0!==t.bevelThickness?t.bevelThickness:6,m=void 0!==t.bevelSize?t.bevelSize:f-2,x=void 0!==t.bevelOffset?t.bevelOffset:0,y=void 0!==t.bevelSegments?t.bevelSegments:3;const v=t.extrudePath,p=void 0!==t.UVGenerator?t.UVGenerator:d0;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=t.amount);let w,E,_,C,L,M=!1;v&&(w=v.getSpacedPoints(u),M=!0,d=!1,E=v.computeFrenetFrames(u,!1),_=new b,C=new b,L=new b),d||(y=0,f=0,m=0,x=0);const D=a.extractPoints(c);let B=D.shape;const G=D.holes;if(!cn.isClockWise(B)){B=B.reverse();for(let Y=0,Q=G.length;Y<Q;Y++){const te=G[Y];cn.isClockWise(te)&&(G[Y]=te.reverse())}}const R=cn.triangulateShape(B,G),F=B;for(let Y=0,Q=G.length;Y<Q;Y++)B=B.concat(G[Y]);function O(Y,Q,te){return Q||console.error("THREE.ExtrudeGeometry: vec does not exist"),Q.clone().multiplyScalar(te).add(Y)}const I=B.length,X=R.length;function K(Y,Q,te){let he,ie,A;const T=Y.x-Q.x,W=Y.y-Q.y,q=te.x-Y.x,re=te.y-Y.y,ue=T*T+W*W;if(Math.abs(T*re-W*q)>Number.EPSILON){const ve=Math.sqrt(ue),P=Math.sqrt(q*q+re*re),J=Q.x-W/ve,ee=Q.y+T/ve,ge=((te.x-re/P-J)*re-(te.y+q/P-ee)*q)/(T*re-W*q);he=J+T*ge-Y.x,ie=ee+W*ge-Y.y;const ze=he*he+ie*ie;if(ze<=2)return new z(he,ie);A=Math.sqrt(ze/2)}else{let ve=!1;T>Number.EPSILON?q>Number.EPSILON&&(ve=!0):T<-Number.EPSILON?q<-Number.EPSILON&&(ve=!0):Math.sign(W)===Math.sign(re)&&(ve=!0),ve?(he=-W,ie=T,A=Math.sqrt(ue)):(he=T,ie=W,A=Math.sqrt(ue/2))}return new z(he/A,ie/A)}const j=[];for(let Y=0,Q=F.length,te=Q-1,he=Y+1;Y<Q;Y++,te++,he++)te===Q&&(te=0),he===Q&&(he=0),j[Y]=K(F[Y],F[te],F[he]);const ae=[];let oe,pe=j.concat();for(let Y=0,Q=G.length;Y<Q;Y++){const te=G[Y];oe=[];for(let he=0,ie=te.length,A=ie-1,T=he+1;he<ie;he++,A++,T++)A===ie&&(A=0),T===ie&&(T=0),oe[he]=K(te[he],te[A],te[T]);ae.push(oe),pe=pe.concat(oe)}for(let Y=0;Y<y;Y++){const Q=Y/y,te=f*Math.cos(Q*Math.PI/2),he=m*Math.sin(Q*Math.PI/2)+x;for(let ie=0,A=F.length;ie<A;ie++){const T=O(F[ie],j[ie],he);be(T.x,T.y,-te)}for(let ie=0,A=G.length;ie<A;ie++){const T=G[ie];oe=ae[ie];for(let W=0,q=T.length;W<q;W++){const re=O(T[W],oe[W],he);be(re.x,re.y,-te)}}}const _e=m+x;for(let Y=0;Y<I;Y++){const Q=d?O(B[Y],pe[Y],_e):B[Y];M?(C.copy(E.normals[0]).multiplyScalar(Q.x),_.copy(E.binormals[0]).multiplyScalar(Q.y),L.copy(w[0]).add(C).add(_),be(L.x,L.y,L.z)):be(Q.x,Q.y,0)}for(let Y=1;Y<=u;Y++)for(let Q=0;Q<I;Q++){const te=d?O(B[Q],pe[Q],_e):B[Q];M?(C.copy(E.normals[Y]).multiplyScalar(te.x),_.copy(E.binormals[Y]).multiplyScalar(te.y),L.copy(w[Y]).add(C).add(_),be(L.x,L.y,L.z)):be(te.x,te.y,h/u*Y)}for(let Y=y-1;Y>=0;Y--){const Q=Y/y,te=f*Math.cos(Q*Math.PI/2),he=m*Math.sin(Q*Math.PI/2)+x;for(let ie=0,A=F.length;ie<A;ie++){const T=O(F[ie],j[ie],he);be(T.x,T.y,h+te)}for(let ie=0,A=G.length;ie<A;ie++){const T=G[ie];oe=ae[ie];for(let W=0,q=T.length;W<q;W++){const re=O(T[W],oe[W],he);M?be(re.x,re.y+w[u-1].y,w[u-1].x+te):be(re.x,re.y,h+te)}}}function Re(Y,Q){let te=Y.length;for(;--te>=0;){const he=te;let ie=te-1;ie<0&&(ie=Y.length-1);for(let A=0,T=u+2*y;A<T;A++){const W=I*A,q=I*(A+1);De(Q+he+W,Q+ie+W,Q+ie+q,Q+he+q)}}}function be(Y,Q,te){l.push(Y),l.push(Q),l.push(te)}function me(Y,Q,te){Ee(Y),Ee(Q),Ee(te);const he=i.length/3,ie=p.generateTopUV(n,i,he-3,he-2,he-1);Ce(ie[0]),Ce(ie[1]),Ce(ie[2])}function De(Y,Q,te,he){Ee(Y),Ee(Q),Ee(he),Ee(Q),Ee(te),Ee(he);const ie=i.length/3,A=p.generateSideWallUV(n,i,ie-6,ie-3,ie-2,ie-1);Ce(A[0]),Ce(A[1]),Ce(A[3]),Ce(A[1]),Ce(A[2]),Ce(A[3])}function Ee(Y){i.push(l[3*Y+0]),i.push(l[3*Y+1]),i.push(l[3*Y+2])}function Ce(Y){s.push(Y.x),s.push(Y.y)}(function(){const Y=i.length/3;if(d){let Q=0,te=I*Q;for(let he=0;he<X;he++){const ie=R[he];me(ie[2]+te,ie[1]+te,ie[0]+te)}Q=u+2*y,te=I*Q;for(let he=0;he<X;he++){const ie=R[he];me(ie[0]+te,ie[1]+te,ie[2]+te)}}else{for(let Q=0;Q<X;Q++){const te=R[Q];me(te[2],te[1],te[0])}for(let Q=0;Q<X;Q++){const te=R[Q];me(te[0]+I*u,te[1]+I*u,te[2]+I*u)}}n.addGroup(Y,i.length/3-Y,0)})(),function(){const Y=i.length/3;let Q=0;Re(F,Q),Q+=F.length;for(let te=0,he=G.length;te<he;te++){const ie=G[te];Re(ie,Q),Q+=ie.length}n.addGroup(Y,i.length/3-Y,1)}()}this.setAttribute("position",new ce(i,3)),this.setAttribute("uv",new ce(s,2)),this.computeVertexNormals()}toJSON(){const e=de.prototype.toJSON.call(this);return function(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++)t.shapes.push(r[n].uuid);else t.shapes.push(r.uuid);return void 0!==e.extrudePath&&(t.options.extrudePath=e.extrudePath.toJSON()),t}(this.parameters.shapes,this.parameters.options,e)}}const d0={generateTopUV:function(r,e,t,n,i){const a=e[3*n],l=e[3*n+1],c=e[3*i],u=e[3*i+1];return[new z(e[3*t],e[3*t+1]),new z(a,l),new z(c,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[3*t],a=e[3*t+1],l=e[3*t+2],c=e[3*n],u=e[3*n+1],h=e[3*n+2],d=e[3*i],f=e[3*i+1],m=e[3*i+2],x=e[3*s],y=e[3*s+1],v=e[3*s+2];return Math.abs(a-u)<.01?[new z(o,1-l),new z(c,1-h),new z(d,1-m),new z(x,1-v)]:[new z(a,1-l),new z(u,1-h),new z(f,1-m),new z(y,1-v)]}};class Ko extends de{constructor(e,t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,l=0;if(!1===Array.isArray(e))c(e);else for(let u=0;u<e.length;u++)c(e[u]),this.addGroup(a,l,u),a+=l,l=0;function c(u){const h=i.length/3,d=u.extractPoints(t);let f=d.shape;const m=d.holes;!1===cn.isClockWise(f)&&(f=f.reverse());for(let y=0,v=m.length;y<v;y++){const p=m[y];!0===cn.isClockWise(p)&&(m[y]=p.reverse())}const x=cn.triangulateShape(f,m);for(let y=0,v=m.length;y<v;y++)f=f.concat(m[y]);for(let y=0,v=f.length;y<v;y++){const p=f[y];i.push(p.x,p.y,0),s.push(0,0,1),o.push(p.x,p.y)}for(let y=0,v=x.length;y<v;y++){const p=x[y];n.push(p[0]+h,p[1]+h,p[2]+h),l+=3}}this.setIndex(n),this.setAttribute("position",new ce(i,3)),this.setAttribute("normal",new ce(s,3)),this.setAttribute("uv",new ce(o,2))}toJSON(){const e=de.prototype.toJSON.call(this);return function(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++)e.shapes.push(r[t].uuid);else e.shapes.push(r.uuid);return e}(this.parameters.shapes,e)}}(class extends at{constructor(e){super(),this.type="ShadowMaterial",this.color=new se(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}).prototype.isShadowMaterial=!0;(class extends Sn{constructor(e){super(e),this.type="RawShaderMaterial"}}).prototype.isRawShaderMaterial=!0;class ta extends at{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new se(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}ta.prototype.isMeshStandardMaterial=!0;(class extends ta{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new z(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=yt(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,this.sheen=e.sheen?(this.sheen||new se).copy(e.sheen):null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this}}).prototype.isMeshPhysicalMaterial=!0;class na extends at{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new se(16777215),this.specular=new se(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}na.prototype.isMeshPhongMaterial=!0;(class extends at{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new se(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}).prototype.isMeshToonMaterial=!0;(class extends at{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}).prototype.isMeshNormalMaterial=!0;(class extends at{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new se(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new se(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}).prototype.isMeshLambertMaterial=!0;(class extends at{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new se(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new z(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}).prototype.isMeshMatcapMaterial=!0;(class extends pt{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}).prototype.isLineDashedMaterial=!0;const je={arraySlice:function(r,e,t){return je.isTypedArray(r)?new r.constructor(r.subarray(e,void 0!==t?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:"number"==typeof e.BYTES_PER_ELEMENT?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(function(i,s){return r[i]-r[s]}),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let l=0;l!==e;++l)i[o++]=r[a+l]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;void 0!==s&&void 0===s[n];)s=r[i++];if(void 0===s)return;let o=s[n];if(void 0!==o)if(Array.isArray(o))do{o=s[n],void 0!==o&&(e.push(s.time),t.push.apply(t,o)),s=r[i++]}while(void 0!==s);else if(void 0!==o.toArray)do{o=s[n],void 0!==o&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++]}while(void 0!==s);else do{o=s[n],void 0!==o&&(e.push(s.time),t.push(o)),s=r[i++]}while(void 0!==s)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],d=[];for(let f=0;f<c.times.length;++f){const m=c.times[f]*i;if(!(m<t||m>=n)){h.push(c.times[f]);for(let x=0;x<u;++x)d.push(c.values[f*u+x])}}0!==h.length&&(c.times=je.convertArray(h,c.times.constructor),c.values=je.convertArray(d,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],l=a.ValueTypeName;if("bool"===l||"string"===l)continue;const c=r.tracks.find(function(v){return v.name===a.name&&v.ValueTypeName===l});if(void 0===c)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const m=a.times.length-1;let x;if(s<=a.times[0])x=je.arraySlice(a.values,u,h-u);else if(s>=a.times[m]){const v=m*h+u;x=je.arraySlice(a.values,v,v+h-u)}else{const v=a.createInterpolant(),p=u,w=h-u;v.evaluate(s),x=je.arraySlice(v.resultBuffer,p,w)}"quaternion"===l&&(new _t).fromArray(x).normalize().conjugate().toArray(x);const y=c.times.length;for(let v=0;v<y;++v){const p=v*f+d;if("quaternion"===l)_t.multiplyQuaternionsFlat(c.values,p,x,0,c.values,p);else{const w=f-2*d;for(let M=0;M<w;++M)c.values[p+M]-=x[M]}}}return r.blendMode=2501,r}};class Cn{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(e>=s)break e;{const a=t[1];e<a&&(n=2,s=a);for(let l=n-2;;){if(void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===l)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0}}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],void 0===s)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(void 0===i)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Cn.prototype.beforeStart_=Cn.prototype.copySampleValue_,Cn.prototype.afterEnd_=Cn.prototype.copySampleValue_;class g0 extends Cn{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:oi,endingEnd:oi}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],l=i[o];if(void 0===a)switch(this.getSettings_().endingStart){case ai:s=e,a=2*t-n;break;case 2402:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(void 0===l)switch(this.getSettings_().endingEnd){case ai:o=e,l=2*n-t;break;case 2402:o=1,l=n+i[1]-i[0];break;default:o=e-1,l=t}const c=.5*(n-t),u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,m=(n-t)/(i-t),x=m*m,y=x*m,v=-d*y+2*d*x-d*m,p=(1+d)*y+(-1.5-2*d)*x+(-.5+d)*m+1,w=(-1-f)*y+(1.5+f)*x+.5*m,M=f*y-f*x;for(let E=0;E!==a;++E)s[E]=v*o[u+E]+p*o[c+E]+w*o[l+E]+M*o[h+E];return s}}class Xl extends Cn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(n-t)/(i-t),h=1-u;for(let d=0;d!==a;++d)s[d]=o[c+d]*h+o[l+d]*u;return s}}class v0 extends Cn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class jt{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=je.convertArray(t,this.TimeBufferType),this.values=je.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:je.convertArray(e.times,Array),values:je.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new v0(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Xl(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new g0(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;-1!==o&&n[o]>t;)--o;if(++o,0!==s||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=je.arraySlice(n,s,o),this.values=je.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;0===s&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if("number"==typeof l&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(null!==o&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(void 0!==i&&je.isTypedArray(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=je.arraySlice(this.times),t=je.arraySlice(this.values),n=this.getValueSize(),i=2302===this.getInterpolation(),s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a];if(c!==e[a+1]&&(1!==a||c!==e[0]))if(i)l=!0;else{const h=a*n,d=h-n,f=h+n;for(let m=0;m!==n;++m){const x=t[h+m];if(x!==t[d+m]||x!==t[f+m]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*n,d=o*n;for(let f=0;f!==n;++f)t[d+f]=t[h+f]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=je.arraySlice(e,0,o),this.values=je.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=je.arraySlice(this.times,0),t=je.arraySlice(this.values,0),i=new(0,this.constructor)(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}jt.prototype.TimeBufferType=Float32Array,jt.prototype.ValueBufferType=Float32Array,jt.prototype.DefaultInterpolation=2301;class Fi extends jt{}Fi.prototype.ValueTypeName="bool",Fi.prototype.ValueBufferType=Array,Fi.prototype.DefaultInterpolation=2300,Fi.prototype.InterpolantFactoryMethodLinear=void 0,Fi.prototype.InterpolantFactoryMethodSmooth=void 0;class Yl extends jt{}Yl.prototype.ValueTypeName="color";class Cs extends jt{}Cs.prototype.ValueTypeName="number";class x0 extends Cn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-t)/(i-t);let c=e*a;for(let u=c+a;c!==u;c+=4)_t.slerpFlat(s,0,o,c-a,o,c,l);return s}}class _r extends jt{InterpolantFactoryMethodLinear(e){return new x0(this.times,this.values,this.getValueSize(),e)}}_r.prototype.ValueTypeName="quaternion",_r.prototype.DefaultInterpolation=2301,_r.prototype.InterpolantFactoryMethodSmooth=void 0;class Oi extends jt{}Oi.prototype.ValueTypeName="string",Oi.prototype.ValueBufferType=Array,Oi.prototype.DefaultInterpolation=2300,Oi.prototype.InterpolantFactoryMethodLinear=void 0,Oi.prototype.InterpolantFactoryMethodSmooth=void 0;class Ls extends jt{}Ls.prototype.ValueTypeName="vector";class Ps{constructor(e,t=-1,n,i=2500){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Rt(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(_0(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(jt.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=je.getKeyframeOrder(l);l=je.sortedArray(l,1,u),c=je.sortedArray(c,1,u),!i&&0===l[0]&&(l.push(s),c.push(c[0])),o.push(new Cs(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let d=i[h];d||(i[h]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,d,f,m,x){if(0!==f.length){const y=[],v=[];je.flattenJSON(f,y,v,m),0!==y.length&&x.push(new h(d,y,v))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const d=c[h].keys;if(d&&0!==d.length)if(d[0].morphTargets){const f={};let m;for(m=0;m<d.length;m++)if(d[m].morphTargets)for(let x=0;x<d[m].morphTargets.length;x++)f[d[m].morphTargets[x]]=-1;for(const x in f){const y=[],v=[];for(let p=0;p!==d[m].morphTargets.length;++p){const w=d[m];y.push(w.time),v.push(w.morphTarget===x?1:0)}i.push(new Cs(".morphTargetInfluence["+x+"]",y,v))}l=f.length*(o||1)}else{const f=".bones["+t[h].name+"]";n(Ls,f+".position",d,"pos",i),n(_r,f+".quaternion",d,"rot",i),n(Ls,f+".scale",d,"scl",i)}}return 0===i.length?null:new this(s,l,i,a)}resetDuration(){let t=0;for(let n=0,i=this.tracks.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function _0(r){if(void 0===r.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Cs;case"vector":case"vector2":case"vector3":case"vector4":return Ls;case"color":return Yl;case"quaternion":return _r;case"bool":case"boolean":return Fi;case"string":return Oi}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}(r.type);if(void 0===r.times){const t=[],n=[];je.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return void 0!==e.parse?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Bi={enabled:!1,files:{},add:function(r,e){!1!==this.enabled&&(this.files[r]=e)},get:function(r){if(!1!==this.enabled)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};const b0=new class{constructor(e,t,n){const i=this;let l,s=!1,o=0,a=0;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,!1===s&&void 0!==i.onStart&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,void 0!==i.onProgress&&i.onProgress(u,o,a),o===a&&(s=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(u){void 0!==i.onError&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return-1!==h&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const f=c[h],m=c[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return m}return null}}};class Ln{constructor(e){this.manager=void 0!==e?e:b0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Ht={};class ln extends Ln{constructor(e){super(e)}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Bi.get(e);if(void 0!==o)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;if(void 0!==Ht[e])return void Ht[e].push({onLoad:t,onProgress:n,onError:i});const l=e.match(/^data:(.*?)(;base64)?,(.*)$/);let c;if(l){const u=l[1],h=!!l[2];let d=l[3];d=decodeURIComponent(d),h&&(d=atob(d));try{let f;const m=(this.responseType||"").toLowerCase();switch(m){case"arraybuffer":case"blob":const x=new Uint8Array(d.length);for(let v=0;v<d.length;v++)x[v]=d.charCodeAt(v);f="blob"===m?new Blob([x.buffer],{type:u}):x.buffer;break;case"document":f=(new DOMParser).parseFromString(d,u);break;case"json":f=JSON.parse(d);break;default:f=d}setTimeout(function(){t&&t(f),s.manager.itemEnd(e)},0)}catch(f){setTimeout(function(){i&&i(f),s.manager.itemError(e),s.manager.itemEnd(e)},0)}}else{Ht[e]=[],Ht[e].push({onLoad:t,onProgress:n,onError:i}),c=new XMLHttpRequest,c.open("GET",e,!0),c.addEventListener("load",function(u){const h=this.response,d=Ht[e];if(delete Ht[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Bi.add(e,h);for(let f=0,m=d.length;f<m;f++){const x=d[f];x.onLoad&&x.onLoad(h)}s.manager.itemEnd(e)}else{for(let f=0,m=d.length;f<m;f++){const x=d[f];x.onError&&x.onError(u)}s.manager.itemError(e),s.manager.itemEnd(e)}},!1),c.addEventListener("progress",function(u){const h=Ht[e];for(let d=0,f=h.length;d<f;d++){const m=h[d];m.onProgress&&m.onProgress(u)}},!1),c.addEventListener("error",function(u){const h=Ht[e];delete Ht[e];for(let d=0,f=h.length;d<f;d++){const m=h[d];m.onError&&m.onError(u)}s.manager.itemError(e),s.manager.itemEnd(e)},!1),c.addEventListener("abort",function(u){const h=Ht[e];delete Ht[e];for(let d=0,f=h.length;d<f;d++){const m=h[d];m.onError&&m.onError(u)}s.manager.itemError(e),s.manager.itemEnd(e)},!1),void 0!==this.responseType&&(c.responseType=this.responseType),void 0!==this.withCredentials&&(c.withCredentials=this.withCredentials),c.overrideMimeType&&c.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const u in this.requestHeader)c.setRequestHeader(u,this.requestHeader[u]);c.send(null)}return s.manager.itemStart(e),c}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class ia extends Ln{constructor(e){super(e)}load(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Bi.get(e);if(void 0!==o)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function l(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1),Bi.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(u){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1),i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class w0 extends Ln{constructor(e){super(e)}load(e,t,n,i){const s=new ar,o=new ia(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(e[c],function(u){s.images[c]=u,a++,6===a&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let c=0;c<e.length;++c)l(c);return s}}class br extends Ln{constructor(e){super(e)}load(e,t,n,i){const s=new ht,o=new ia(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a;const l=e.search(/\.jpe?g($|\?)/i)>0||0===e.search(/^data\:image\/jpeg/);s.format=l?Dn:kt,s.needsUpdate=!0,void 0!==t&&t(s)},n,i),s}}class Ot{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;o=t||e*n[s-1];let c,a=0,l=s-1;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else{if(!(c>0)){l=i;break}l=i-1}if(i=l,n[i]===o)return i/(s-1);const u=n[i];return(i+(o-u)/(n[i+1]-u))/(s-1)}getTangent(e,t){const n=1e-4;let i=e-n,s=e+n;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=t||(o.isVector2?new z:new b);return l.copy(a).sub(o).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new b,i=[],s=[],o=[],a=new b,l=new le;for(let f=0;f<=e;f++)i[f]=this.getTangentAt(f/e,new b),i[f].normalize();s[0]=new b,o[0]=new b;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let f=1;f<=e;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const m=Math.acos(yt(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,m))}o[f].crossVectors(i[f],s[f])}if(!0===t){let f=Math.acos(yt(s[0].dot(s[e]),-1,1));f/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(f=-f);for(let m=1;m<=e;m++)s[m].applyMatrix4(l.makeRotationAxis(i[m],f*m)),o[m].crossVectors(i[m],s[m])}return{tangents:i,normals:s,binormals:o}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Rs extends Ot{constructor(e=0,t=0,n=1,i=1,s=0,o=2*Math.PI,a=!1,l=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(e,t){const n=t||new z,i=2*Math.PI;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(s=o?0:i),!0===this.aClockwise&&!o&&(s===i?s=-i:s-=i);const a=this.aStartAngle+e*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(0!==this.aRotation){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Rs.prototype.isEllipseCurve=!0;class Jl extends Rs{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.type="ArcCurve"}}function ra(){let r=0,e=0,t=0,n=0;function i(s,o,a,l){r=s,e=a,t=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let d=(o-s)/c-(a-s)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(s){const o=s*s;return r+e*s+t*o+n*(o*s)}}}Jl.prototype.isArcCurve=!0;const Is=new b,sa=new ra,oa=new ra,aa=new ra;class Ql extends Ot{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new b){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let c,u,a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:0===l&&a===s-1&&(a=s-2,l=1),this.closed||a>0?c=i[(a-1)%s]:(Is.subVectors(i[0],i[1]).add(i[0]),c=Is);const h=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(Is.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=Is),"centripetal"===this.curveType||"chordal"===this.curveType){const f="chordal"===this.curveType?.5:.25;let m=Math.pow(c.distanceToSquared(h),f),x=Math.pow(h.distanceToSquared(d),f),y=Math.pow(d.distanceToSquared(u),f);x<1e-4&&(x=1),m<1e-4&&(m=x),y<1e-4&&(y=x),sa.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,m,x,y),oa.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,m,x,y),aa.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,m,x,y)}else"catmullrom"===this.curveType&&(sa.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),oa.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),aa.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(sa.calc(l),oa.calc(l),aa.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++)this.points.push(e.points[t].clone());return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++)e.points.push(this.points[t].toArray());return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push((new b).fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function $l(r,e,t,n,i){const s=.5*(n-e),o=.5*(i-t),a=r*r;return(2*t-2*n+s+o)*(r*a)+(-3*t+3*n-2*s-o)*a+s*r+t}function wr(r,e,t,n){return function(r,e){const t=1-r;return t*t*e}(r,e)+function(r,e){return 2*(1-r)*r*e}(r,t)+function(r,e){return r*r*e}(r,n)}function Mr(r,e,t,n,i){return function(r,e){const t=1-r;return t*t*t*e}(r,e)+function(r,e){const t=1-r;return 3*t*t*r*e}(r,t)+function(r,e){return 3*(1-r)*r*r*e}(r,n)+function(r,e){return r*r*r*e}(r,i)}Ql.prototype.isCatmullRomCurve3=!0;class ca extends Ot{constructor(e=new z,t=new z,n=new z,i=new z){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new z){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Mr(e,i.x,s.x,o.x,a.x),Mr(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ca.prototype.isCubicBezierCurve=!0;class Kl extends Ot{constructor(e=new b,t=new b,n=new b,i=new b){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new b){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Mr(e,i.x,s.x,o.x,a.x),Mr(e,i.y,s.y,o.y,a.y),Mr(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Kl.prototype.isCubicBezierCurve3=!0;class Ds extends Ot{constructor(e=new z,t=new z){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new z){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new z;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Ds.prototype.isLineCurve=!0;class la extends Ot{constructor(e=new z,t=new z,n=new z){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new z){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(wr(e,i.x,s.x,o.x),wr(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}la.prototype.isQuadraticBezierCurve=!0;class eu extends Ot{constructor(e=new b,t=new b,n=new b){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new b){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(wr(e,i.x,s.x,o.x),wr(e,i.y,s.y,o.y),wr(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}eu.prototype.isQuadraticBezierCurve3=!0;class ua extends Ot{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new z){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,l=i[0===o?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set($l(a,l.x,c.x,u.x,h.x),$l(a,l.y,c.y,u.y,h.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++)this.points.push(e.points[t].clone());return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++)e.points.push(this.points[t].toArray());return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push((new z).fromArray(i))}return this}}ua.prototype.isSplineCurve=!0;var ha=Object.freeze({__proto__:null,ArcCurve:Jl,CatmullRomCurve3:Ql,CubicBezierCurve:ca,CubicBezierCurve3:Kl,EllipseCurve:Rs,LineCurve:Ds,LineCurve3:class extends Ot{constructor(e=new b,t=new b){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new b){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}},QuadraticBezierCurve:la,QuadraticBezierCurve3:eu,SplineCurve:ua});class I0 extends Ot{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Ds(t,e))}getPoint(e){const t=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=t){const s=n[i]-t,o=this.curves[i],a=o.getLength();return o.getPointAt(0===a?0:1-s/a)}i++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],l=o.getPoints(o&&o.isEllipseCurve?2*e:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?e*o.points.length:e);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++)this.curves.push(e.curves[t].clone());return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++)e.curves.push(this.curves[t].toJSON());return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push((new ha[i.type]).fromJSON(i))}return this}}class Fs extends I0{constructor(e){super(),this.type="Path",this.currentPoint=new z,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Ds(this.currentPoint.clone(),new z(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new la(this.currentPoint.clone(),new z(e,t),new z(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new ca(this.currentPoint.clone(),new z(e,t),new z(n,i),new z(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ua(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){return this.absarc(e+this.currentPoint.x,t+this.currentPoint.y,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,l){return this.absellipse(e+this.currentPoint.x,t+this.currentPoint.y,n,i,s,o,a,l),this}absellipse(e,t,n,i,s,o,a,l){const c=new Rs(e,t,n,i,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class qn extends Fs{constructor(e){super(e),this.uuid=Rt(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++)this.holes.push(e.holes[t].clone());return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++)e.holes.push(this.holes[t].toJSON());return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push((new Fs).fromJSON(i))}return this}}class Jt extends Pe{constructor(e,t=1){super(),this.type="Light",this.color=new se(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}Jt.prototype.isLight=!0;(class extends Jt{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Pe.DefaultUp),this.updateMatrix(),this.groundColor=new se(t)}copy(e){return Jt.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}).prototype.isHemisphereLight=!0;const nu=new le,iu=new b,ru=new b;class da{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new z(512,512),this.map=null,this.mapPass=null,this.matrix=new le,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ls,this._frameExtents=new z(1,1),this._viewportCount=1,this._viewports=[new Ne(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;iu.setFromMatrixPosition(e.matrixWorld),t.position.copy(iu),ru.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ru),t.updateMatrixWorld(),nu.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(nu),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class su extends da{constructor(){super(new ft(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=2*Ki*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}su.prototype.isSpotLightShadow=!0;(class extends Jt{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Pe.DefaultUp),this.updateMatrix(),this.target=new Pe,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new su}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}).prototype.isSpotLight=!0;const au=new le,Sr=new b,fa=new b;class cu extends da{constructor(){super(new ft(90,1,.5,500)),this._frameExtents=new z(4,2),this._viewportCount=6,this._viewports=[new Ne(2,1,1,1),new Ne(0,1,1,1),new Ne(3,1,1,1),new Ne(1,1,1,1),new Ne(3,0,1,1),new Ne(1,0,1,1)],this._cubeDirections=[new b(1,0,0),new b(-1,0,0),new b(0,0,1),new b(0,0,-1),new b(0,1,0),new b(0,-1,0)],this._cubeUps=[new b(0,1,0),new b(0,1,0),new b(0,1,0),new b(0,1,0),new b(0,0,1),new b(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Sr.setFromMatrixPosition(e.matrixWorld),n.position.copy(Sr),fa.copy(n.position),fa.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(fa),n.updateMatrixWorld(),i.makeTranslation(-Sr.x,-Sr.y,-Sr.z),au.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(au)}}cu.prototype.isPointLightShadow=!0;(class extends Jt{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new cu}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}).prototype.isPointLight=!0;class Os extends as{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,l=i-t;if(null!==this.view&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Os.prototype.isOrthographicCamera=!0;class uu extends da{constructor(){super(new Os(-5,5,5,-5,.5,500))}}uu.prototype.isDirectionalLightShadow=!0;class pa extends Jt{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Pe.DefaultUp),this.updateMatrix(),this.target=new Pe,this.shadow=new uu}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}pa.prototype.isDirectionalLight=!0;(class extends Jt{constructor(e,t){super(e,t),this.type="AmbientLight"}}).prototype.isAmbientLight=!0;(class extends Jt{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}).prototype.isRectAreaLight=!0;class fu{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new b)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],n*i*1.092548),t.addScaledVector(o[5],i*s*1.092548),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],n*s*1.092548),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],1.023328*i),t.addScaledVector(o[2],1.023328*s),t.addScaledVector(o[3],1.023328*n),t.addScaledVector(o[4],.858086*n*i),t.addScaledVector(o[5],.858086*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],.858086*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}fu.prototype.isSphericalHarmonics3=!0;class Bs extends Jt{constructor(e=new fu,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Bs.prototype.isLightProbe=!0;(class extends de{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}).prototype.isInstancedBufferGeometry=!0;(class extends Be{constructor(e,t,n,i){"number"==typeof n&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}).prototype.isInstancedBufferAttribute=!0,class extends Ln{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Bi.get(e);if(void 0!==o)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials="anonymous"===this.crossOrigin?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){Bi.add(e,l),t&&t(l),s.manager.itemEnd(e)}).catch(function(l){i&&i(l),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}.prototype.isImageBitmapLoader=!0;let Ns;const _u_getContext=function(){return void 0===Ns&&(Ns=new(window.AudioContext||window.webkitAudioContext)),Ns};class bu extends Ln{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new ln(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const l=a.slice(0);_u_getContext().decodeAudioData(l,function(u){t(u)})}catch(l){i?i(l):console.error(l),s.manager.itemError(e)}},n,i)}}(class extends Bs{constructor(e,t,n=1){super(void 0,n);const i=(new se).set(e),s=(new se).set(t),o=new b(i.r,i.g,i.b),a=new b(s.r,s.g,s.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(l),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)}}).prototype.isHemisphereLightProbe=!0,class extends Bs{constructor(e,t=1){super(void 0,t);const n=(new se).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}.prototype.isAmbientLightProbe=!0;class H0{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Su(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Su();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Su(){return("undefined"==typeof performance?Date:performance).now()}const Zn=new b,Tu=new _t,V0=new b,Xn=new b;class W0 extends Pe{constructor(){super(),this.type="AudioListener",this.context=_u_getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new H0}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Zn,Tu,V0),Xn.set(0,0,-1).applyQuaternion(Tu),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Zn.x,i),t.positionY.linearRampToValueAtTime(Zn.y,i),t.positionZ.linearRampToValueAtTime(Zn.z,i),t.forwardX.linearRampToValueAtTime(Xn.x,i),t.forwardY.linearRampToValueAtTime(Xn.y,i),t.forwardZ.linearRampToValueAtTime(Xn.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Zn.x,Zn.y,Zn.z),t.setOrientation(Xn.x,Xn.y,Xn.z,n.x,n.y,n.z)}}class ma extends Pe{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}class X0{constructor(e,t,n){let i,s,o;switch(this.binding=e,this.valueSize=n,t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(0===o){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else o+=t,this._mixBufferRegion(n,s,0,t/o,i);this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1&&this._mixBufferRegion(n,i,t*this._origIndex,1-s,t),o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}}saveOriginalState(){const t=this.buffer,n=this.valueSize,i=n*this._origIndex;this.binding.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){this.binding.setValue(this.buffer,3*this.valueSize)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){_t.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;_t.multiplyQuaternionsFlat(e,o,e,t,e,n),_t.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=t+a;e[l]=e[l]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const ga="\\[\\]\\.:\\/",Y0=new RegExp("["+ga+"]","g"),va="[^"+ga+"]",j0="[^"+ga.replace("\\.","")+"]",J0=/((?:WC+[\/:])*)/.source.replace("WC",va),Q0=/(WCOD+)?/.source.replace("WCOD",j0),$0=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",va),K0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",va),ex=new RegExp("^"+J0+Q0+$0+K0+"$"),tx=["material","materials","bones"];class nx{constructor(e,t,n){const i=n||Ye.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const i=this._bindings[this._targetGroup.nCachedObjects_];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}let Ye=(()=>{class r{constructor(t,n,i){this.path=n,this.parsedPath=i||r.parseTrackName(n),this.node=r.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,n,i){return t&&t.isAnimationObjectGroup?new r.Composite(t,n,i):new r(t,n,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(Y0,"")}static parseTrackName(t){const n=ex.exec(t);if(!n)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},s=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==s&&-1!==s){const o=i.nodeName.substring(s+1);-1!==tx.indexOf(o)&&(i.nodeName=i.nodeName.substring(0,s),i.objectName=o)}if(null===i.propertyName||0===i.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,n){if(!n||""===n||"."===n||-1===n||n===t.name||n===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(n);if(void 0!==i)return i}if(t.children){const i=function(o){for(let a=0;a<o.length;a++){const l=o[a];if(l.name===n||l.uuid===n)return l;const c=i(l.children);if(c)return c}return null},s=i(t.children);if(s)return s}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,n){t[n]=this.node[this.propertyName]}_getValue_array(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)t[n++]=i[s]}_getValue_arrayElement(t,n){t[n]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,n){this.resolvedProperty.toArray(t,n)}_setValue_direct(t,n){this.targetObject[this.propertyName]=t[n]}_setValue_direct_setNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)i[s]=t[n++]}_setValue_array_setNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)i[s]=t[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,n){const i=this.resolvedProperty;for(let s=0,o=i.length;s!==o;++s)i[s]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,n){this.resolvedProperty[this.propertyIndex]=t[n]}_setValue_arrayElement_setNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,n){this.resolvedProperty.fromArray(t,n)}_setValue_fromArray_setNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,n){this.bind(),this.getValue(t,n)}_setValue_unbound(t,n){this.bind(),this.setValue(t,n)}bind(){let t=this.node;const n=this.parsedPath,i=n.objectName,s=n.propertyName;let o=n.propertyIndex;if(t||(t=r.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(i){let u=n.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let h=0;h<t.length;h++)if(t[h].name===u){u=h;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==u){if(void 0===t[u])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[u]}}const a=t[s];if(void 0===a)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n.nodeName+"."+s+" but it wasn't found.",t);let l=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?l=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(l=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(void 0!==o){if("morphTargetInfluences"===s){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[o]&&(o=t.morphTargetDictionary[o])}c=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=o}else void 0!==a.fromArray&&void 0!==a.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(c=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=s;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}return r.Composite=nx,r})();Ye.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ye.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ye.prototype.GetterByBindingType=[Ye.prototype._getValue_direct,Ye.prototype._getValue_array,Ye.prototype._getValue_arrayElement,Ye.prototype._getValue_toArray],Ye.prototype.SetterByBindingTypeAndVersioning=[[Ye.prototype._setValue_direct,Ye.prototype._setValue_direct_setNeedsUpdate,Ye.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ye.prototype._setValue_array,Ye.prototype._setValue_array_setNeedsUpdate,Ye.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ye.prototype._setValue_arrayElement,Ye.prototype._setValue_arrayElement_setNeedsUpdate,Ye.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ye.prototype._setValue_fromArray,Ye.prototype._setValue_fromArray_setNeedsUpdate,Ye.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class rx{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),l={endingStart:oi,endingEnd:oi};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,a=i/s;e.warp(1,s/i,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;null===a&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=e/o,c[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled)return void this._updateWeight(e);const s=this._startTime;if(null!==s){const l=(e-s)*n;if(l<0||0===n)return;this._startTime=null,t=n*l}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case 2501:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case 2500:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(null!==n){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=2202===n;if(0===e)return-1===s?i:o&&1==(1&s)?t-i:i;if(2200===n){-1===s&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===s&&(e>=0?(s=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===l){const c=e<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&1==(1&s))return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=ai,i.endingEnd=ai):(i.endingStart=e?this.zeroSlopeAtStart?ai:oi:2402,i.endingEnd=t?this.zeroSlopeAtEnd?ai:oi:2402)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;null===o&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=t,a[1]=s+e,l[1]=n,this}}(class extends Fn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];void 0===u&&(u={},c[l]=u);for(let h=0;h!==s;++h){const d=i[h],f=d.name;let m=u[f];if(void 0!==m)o[h]=m;else{if(m=o[h],void 0!==m){null===m._cacheIndex&&(++m.referenceCount,this._addInactiveBinding(m,l,f));continue}m=new X0(Ye.create(n,f,t&&t._propertyBindings[h].binding.parsedPath),d.ValueTypeName,d.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,l,f),o[h]=m}a[h].resultBuffer=m.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];0==--s.useCount&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(void 0===o)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=e._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),e._byClipCacheIndex=null,delete a.actionByRoot[(e._localRoot||this._root).uuid],0===l.length&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];0==--s.referenceCount&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];void 0===o&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete a[s],0===Object.keys(a).length&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new Xl(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o="string"==typeof e?Ps.findByName(i,e):e;const a=null!==o?o.uuid:e,l=this._actionsByClip[a];let c=null;if(void 0===n&&(n=null!==o?o.blendMode:2500),void 0!==l){const h=l.actionByRoot[s];if(void 0!==h&&h.blendMode===n)return h;c=l.knownActions[0],null===o&&(o=c._clip)}if(null===o)return null;const u=new rx(this,o,t,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s="string"==typeof e?Ps.findByName(n,e):e,a=this._actionsByClip[s?s.uuid:e];return void 0!==a&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions;for(let n=this._nActiveActions-1;n>=0;--n)e[n].stop();return this}update(e){const t=this._actions,n=this._nActiveActions,i=this.time+=e*=this.timeScale,s=Math.sign(e),o=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(void 0!==s){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const l=n[o].actionByRoot[t];void 0!==l&&(this._deactivateAction(l),this._removeInactiveAction(l))}const s=this._bindingsByRootAndName[t];if(void 0!==s)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}).prototype._controlInterpolantsResultBuffer=new Float32Array(1);class xa{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new xa(void 0===this.value.clone?this.value:this.value.clone())}}(class extends En{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}).prototype.isInstancedInterleavedBuffer=!0;const Cu=new z;class Tr{constructor(e=new z(1/0,1/0),t=new z(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Cu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new z),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new z),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new z),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new z),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Cu.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Tr.prototype.isBox2=!0,class extends Pe{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}.prototype.isImmediateRenderObject=!0;const Pn=new b,zs=new le,_a=new le;function Ru(r){const e=[];r&&r.isBone&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Ru(r.children[t]));return e}const Nu=new Float32Array(1);new Int32Array(Nu.buffer),Math.pow(2,8);const ku=[.125,.215,.35,.446,.526,.582],zu=5+ku.length,Jn=new bt({side:1,depthWrite:!1,depthTest:!1});new Xe(new Un,Jn);function xx(){const r=[],e=[],t=[];let n=8;for(let i=0;i<zu;i++){const s=Math.pow(2,n);e.push(s);let o=1/s;i>4?o=ku[i-8+4-1]:0==i&&(o=0),t.push(o);const a=1/(s-1),l=-a/2,c=1+a/2,u=[l,l,c,l,c,c,l,l,c,c,l,c],h=6,d=6,f=3,m=2,x=1,y=new Float32Array(f*d*h),v=new Float32Array(m*d*h),p=new Float32Array(x*d*h);for(let M=0;M<h;M++){const E=M%3*2/3-1,_=M>2?0:-1;y.set([E,_,0,E+2/3,_,0,E+2/3,_+1,0,E,_,0,E+2/3,_+1,0,E,_+1,0],f*d*M),v.set(u,m*d*M),p.set([M,M,M,M,M,M],x*d*M)}const w=new de;w.setAttribute("position",new Be(y,f)),w.setAttribute("uv",new Be(v,m)),w.setAttribute("faceIndex",new Be(p,x)),r.push(w),n>4&&n--}return{_lodPlanes:r,_sizeLods:e,_sigmas:t}}Math.sqrt(5),Ot.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(Ot.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r},Fs.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)},class extends an{constructor(e=10,t=10,n=4473924,i=8947848){n=new se(n),i=new se(i);const s=t/2,o=e/t,a=e/2,l=[],c=[];for(let d=0,f=0,m=-a;d<=t;d++,m+=o){l.push(-a,0,m,a,0,m),l.push(m,0,-a,m,0,a);const x=d===s?n:i;x.toArray(c,f),f+=3,x.toArray(c,f),f+=3,x.toArray(c,f),f+=3,x.toArray(c,f),f+=3}const u=new de;u.setAttribute("position",new ce(l,3)),u.setAttribute("color",new ce(c,3)),super(u,new pt({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends an{constructor(e){const t=Ru(e),n=new de,i=[],s=[],o=new se(0,0,1),a=new se(0,1,0);for(let c=0;c<t.length;c++){const u=t[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new ce(i,3)),n.setAttribute("color",new ce(s,3)),super(n,new pt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");_a.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(zs.multiplyMatrices(_a,a.matrixWorld),Pn.setFromMatrixPosition(zs),i.setXYZ(o,Pn.x,Pn.y,Pn.z),zs.multiplyMatrices(_a,a.parent.matrixWorld),Pn.setFromMatrixPosition(zs),i.setXYZ(o+1,Pn.x,Pn.y,Pn.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Ln.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),class{static decodeText(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(n){return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}.extractUrlBase(r)},Ln.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Tr.prototype.center=function(r){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(r)},Tr.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Tr.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)},Tr.prototype.size=function(r){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(r)},It.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)},It.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},It.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)},It.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)},It.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)},kn.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ls.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)},ut.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)},ut.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)},ut.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},ut.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)},ut.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},ut.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()},le.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)},le.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)},le.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new b).setFromMatrixColumn(this,3)},le.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)},le.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},le.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},le.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},le.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},le.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)},le.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},le.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},le.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},le.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},le.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},le.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},le.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)},le.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},le.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)},le.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()},Zt.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)},_t.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)},_t.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},zn.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)},zn.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)},zn.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)},it.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},it.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)},it.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)},it.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)},it.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)},it.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),it.getBarycoord(r,e,t,n,i)},it.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),it.getNormal(r,e,t,n)},qn.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)},qn.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Wn(this,r)},qn.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ko(this,r)},z.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)},z.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)},z.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},b.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},b.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},b.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)},b.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)},b.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)},b.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)},b.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)},b.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)},b.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ne.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)},Ne.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Pe.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)},Pe.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Pe.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)},Pe.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Pe.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)},Object.defineProperties(Pe.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Xe.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Xe.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Vo.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},ft.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(r)},Object.defineProperties(Jt.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}}),Object.defineProperties(Be.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===$i},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage($i)}}}),Be.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===r?$i:Qi),this},Be.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Be.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},de.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)},de.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===r?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new Be(arguments[1],arguments[2])))},de.prototype.addDrawCall=function(r,e,t){void 0!==t&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)},de.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},de.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},de.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)},de.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)},Object.defineProperties(de.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),En.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===r?$i:Qi),this},En.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Wn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Wn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Wn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ds.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},xa.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(at.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new se}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===r}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}}}),Object.defineProperties(Sn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}}),He.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)},He.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)},He.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},He.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},He.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},He.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},He.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},He.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},He.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},He.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},He.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},He.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},He.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},He.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},He.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)},He.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},He.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},He.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},He.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},He.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},He.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},He.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},He.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},He.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},He.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(He.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===r?3001:Lt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties($c.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(gn.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}}),ma.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new bu).load(r,function(n){e.setBuffer(n)}),this},Do.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)},Do.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)},ui.crossOrigin=void 0,ui.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new br;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s},ui.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new w0;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s},ui.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ui.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"128"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="128");var Ui=At(1776),Ea=At(2052),$n=(()=>{return(r=$n||($n={}))[r.stay=0]="stay",r[r.comeback=1]="comeback",r[r.path=2]="path",$n;var r})(),mt=(()=>{return(r=mt||(mt={}))[r.malus=0]="malus",r[r.super_malus=1]="super_malus",r[r.bonus=2]="bonus",r[r.super_bonus=3]="super_bonus",r[r.invert=4]="invert",r[r.slow=5]="slow",r[r.speed=6]="speed",mt;var r})(),_x=tr.degToRad;let Ar=(()=>{class r{constructor(t){this.requestService=t,this.circuits=[],this.currentCircuit=null}setCircuitList(t){this.circuits=t,this.loadCircuitData(t[0].link).subscribe(n=>{this.currentCircuit=n})}loadCircuitData(t){return this.requestService.doGet(t).pipe((0,fn.U)(n=>(n.body.items.forEach(i=>{i.move.type=$n[i.move.type],i.type=mt[i.type.toLowerCase()],i.pos.y=-i.pos.y,i.move&&(i.move.i=0,i.move.sense=!1,i.move.path&&i.move.path.forEach(s=>{s.y=-s.y}),i.move.goY&&(i.move.goY=-i.move.goY))}),n.body)))}getGroundValue(t,n){return this.currentCircuit&&this.currentCircuit.mapGrounds.length&&t&&n?this.currentCircuit.mapGrounds[Math.round(t)][Math.round(n)]:0}loadBuildings(){return new Ui.y(t=>{this.currentCircuit.buildings.forEach(n=>{const i=new Un(n.sizeX,n.sizeY,n.height),s=new na({color:n.color,polygonOffset:!0,polygonOffsetFactor:1,polygonOffsetUnits:1});s.transparent=n.opacity<1,s.opacity=n.opacity,n.obj=new Xe(i,s);const o=new jo(i),a=new pt({color:n.color,linewidth:4}),l=new an(o,a);n.obj.add(l),n.obj.position.x=n.x,n.obj.position.y=-n.y}),t.next(this.currentCircuit.buildings),t.complete()})}loadSprites(){const t=Object.keys(this.currentCircuit.sprites);return(0,Ea.D)(t.map(n=>{const i=this.currentCircuit.sprites[n],s=new br;return new Ui.y(o=>{s.load(i.texfile,a=>{if(a){a.magFilter=Ge,a.minFilter=Ge;const l=new bt({map:a,side:2});l.transparent=!0;const c=new Gn(i.width,i.height,1,1),u=c.getAttribute("uv");u.setXY(0,0,1),u.setXY(2,0,0),u.setXY(3,1,0),u.setXY(1,1,1);const h=new Xe(c,l);h.position.x=0,h.position.y=0,h.position.z=0,h.rotation.x=Math.PI/2,i.obj=h,i.positions.forEach(d=>{d.obj=i.obj.clone(),d.obj.position.set(d.x,-d.y,i.height/2),d.ry&&(d.obj.rotation.y=d.ry)}),o.next(i),o.complete()}})})}))}loadItems(){return(0,Ea.D)(this.currentCircuit.items.map(t=>new Ui.y(n=>{(new br).load(t.img,s=>{const o=new Pe;if(s){s.magFilter=Ge,s.minFilter=Ge;const h=new bt({map:s,side:2});h.transparent=!0;const d=new Gn(5,5,1,1),f=d.getAttribute("uv");f.setXY(0,0,1),f.setXY(2,0,0),f.setXY(3,1,0),f.setXY(1,1,1);const m=new Xe(d,h);m.position.x=0,m.position.y=0,m.position.z=0,o.add(m)}let a=13313128;switch(t.type){case mt.malus:a=16711680;break;case mt.bonus:a=13313128;break;case mt.super_bonus:a=15259460;break;case mt.invert:case mt.slow:case mt.speed:a=4473924}const l=new Un(5,5,5),c=new bt({color:a});c.transparent=!0,c.opacity=.4;const u=new Xe(l,c);o.add(u),o.position.x=t.pos.x,o.position.y=t.pos.y,o.position.z=3,o.rotation.x=Math.PI/2,t.obj=o,t.available=!0,t.move&&(t.move.i=0,t.move.sense=!1),t.tempPos=Object.assign({},t.pos),n.next(o),n.complete()})})))}loadCircuit(){return new Ui.y(t=>{const n=new Image;n.addEventListener("load",()=>{let i=document.createElement("canvas"),s=i.getContext("2d");i.width=n.width,i.height=n.height,s.drawImage(n,0,0);let o=s.getImageData(0,0,i.width,i.height).data;this.currentCircuit.mapGrounds=[];for(let l=0;l<n.width;l++){this.currentCircuit.mapGrounds[l]=[];for(let c=0;c<n.height;c++)this.currentCircuit.mapGrounds[l][c]=o[c*(4*n.width)+4*l]/255}i=null,s=null,o=null,this.currentCircuit.width=n.width,this.currentCircuit.height=n.height;const a=new br;a.load(this.currentCircuit.map,l=>{l.magFilter=Ge,l.minFilter=Ge;const c=new bt({map:l}),u=new Gn(this.currentCircuit.width,this.currentCircuit.height,1,1),h=u.getAttribute("uv");h.setXY(0,0,1),h.setXY(2,0,0),h.setXY(3,1,0),h.setXY(1,1,1);const d=new Xe(u,c);d.position.x=this.currentCircuit.width/2,d.position.y=-this.currentCircuit.height/2,this.currentCircuit.three={tex:l,material:c,geometry:u,mesh:d},this.requestService.getBlob(this.currentCircuit.background).subscribe(f=>{this.currentCircuit.backgroundBlobUrl=window.URL.createObjectURL(f);const m=new Image;m.addEventListener("load",()=>{this.currentCircuit.backgroundImage=m,a.load(this.currentCircuit.background,x=>{x.magFilter=Ge,x.minFilter=Ge;const y=new bt({map:x,side:2}),v=[y,new bt({color:new se(this.currentCircuit.backgroundTop),side:2}),new bt({color:new se(this.currentCircuit.backgroundBottom),side:2})],p=1.5*Math.max(this.currentCircuit.width,this.currentCircuit.height),w=new mr(p,p,2*p,100),M=new Xe(w,v);M.rotation.x=_x(90),M.position.x=this.currentCircuit.height/2,M.position.y=-this.currentCircuit.width/2,M.position.z=p/-6,this.currentCircuit.background3d={tex:x,material:y,geometry:w,mesh:M},t.next(this.currentCircuit),t.complete()})}),m.src=this.currentCircuit.backgroundBlobUrl})},()=>{},()=>{t.error("")})}),n.addEventListener("error",()=>{t.error("")}),n.src=this.currentCircuit.normales})}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(Na))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();class Aa{constructor(e){this.speed=e.speed,this.acceleration=e.acceleration,this.weight=e.weight,this.handling=e.handling,this.traction=e.traction,this.luck=e.luck,this.width=e.width}static fromJson(e){return new Aa(e)}}class Ca{constructor(e){this.id=e.id,this.name=e.name,this.sprite=e.sprite,this.mainColor=e.mainColor,this.mainBackground=e.mainBackground,this.stats=e.stats}static fromJson(e){return new Ca(Object.assign(Object.assign({},e),{sprite:{url:e.sprite,mat:null},stats:Aa.fromJson(e.stats)}))}}var bx=At(5094),ke=(()=>{return(r=ke||(ke={}))[r.front=0]="front",r[r.left=1]="left",r[r.right=2]="right",ke;var r})(),Se=(()=>{return(r=Se||(Se={}))[r.no_move=0]="no_move",r[r.go_forward=1]="go_forward",r[r.go_backward=2]="go_backward",r[r.turn_left=3]="turn_left",r[r.turn_right=4]="turn_right",r[r.no_turn=5]="no_turn",r[r.jump=6]="jump",r[r.object=7]="object",Se;var r})(),gt=(()=>{return(r=gt||(gt={}))[r.normal=0]="normal",r[r.drifting=1]="drifting",r[r.jumping=2]="jumping",gt;var r})(),Bt=(()=>{return(r=Bt||(Bt={}))[r.none=0]="none",r[r.blue=1]="blue",r[r.red=2]="red",Bt;var r})();const Je={SEE_LEFT:new z(1,0),TURN_LEFT:new z(1,0),SEE_RIGHT:new z(3,0),TURN_RIGHT:new z(3,0),GO_FORWARD:new z(2,0),DRIFT_LEFT_SMOKE:new z(0,1),DRIFT_LEFT_SMOKE2:new z(1,1),DRIFT_LEFT_SMOKE3:new z(2,1),DRIFT_LEFT_BLUE:new z(0,2),DRIFT_LEFT_BLUE2:new z(1,2),DRIFT_LEFT_BLUE3:new z(2,2),DRIFT_LEFT_RED:new z(0,3),DRIFT_LEFT_RED2:new z(1,3),DRIFT_LEFT_RED3:new z(2,3),DRIFT_RIGHT_SMOKE:new z(3,1),DRIFT_RIGHT_SMOKE2:new z(4,1),DRIFT_RIGHT_SMOKE3:new z(5,1),DRIFT_RIGHT_BLUE:new z(3,2),DRIFT_RIGHT_BLUE2:new z(4,2),DRIFT_RIGHT_BLUE3:new z(5,2),DRIFT_RIGHT_RED:new z(3,3),DRIFT_RIGHT_RED2:new z(4,3),DRIFT_RIGHT_RED3:new z(5,3)};class Ox{constructor(e){this.driver=e.driver,this.x=e.x||0,this.y=e.y||0,this.z=e.z,this.rotation=e.rotation,this.angle=e.angle||0,this.driftDirection=e.driftDirection,this.accelerationLevel=e.accelerationLevel||0,this.speed=e.speed||0,this.ground=e.ground||0,this.groundBeforeJump=e.groundBeforeJump||0,this.zBeforeJump=e.zBeforeJump||0,this.fps=e.fps,this.status=e.status,this.driftingTime=e.driftingTime,this.canJump=e.canJump,this.rotateDirection=e.rotateDirection,this.bonus=e.bonus,this.bonusTimeout=e.bonusTimeout,this.design=e.design,this.points=e.points,this.turn=e.turn,this.totalTime=e.totalTime,this.difficulty=e.difficulty,this.nbCheckpoint=e.nbCheckpoint,this.checkpoint=e.checkpoint,this.receivedItems=e.receivedItems,this.totalItems=e.totalItems}}let Cr=(()=>{class r{constructor(){this.driversSubject=new bx.X([]),this.driversState=this.driversSubject.asObservable(),this.drivers=[],this.currentDriver=null}loadDrivers(t){this.drivers=t.map(n=>Ca.fromJson(n)),this.currentDriver=this.drivers[0],this.driversSubject.next(this.drivers)}selectDriver(t){this.currentDriver=t}getCarMaxSpeed(t){return 40*(4+.3*t.driver.stats.speed)*(t.ground||1)}getCarMaxBackSpeed(t){return 12*(4+.3*t.driver.stats.speed)*(t.ground||1)}getCarCurrentAccelerationLevel(t,n){let i=n.accelerationLevel;t===Se.go_forward?i=n.accelerationLevel>=0?n.accelerationLevel+1:n.accelerationLevel+3:t===Se.go_backward?i=n.accelerationLevel<0?n.accelerationLevel-1:n.accelerationLevel-3:t===Se.no_move&&n.accelerationLevel&&(i=n.accelerationLevel>=0?n.accelerationLevel-1:n.accelerationLevel+1);const s=n.driver.stats;return s.acceleration*i<=this.getCarMaxSpeed(n)&&s.acceleration*i>=-this.getCarMaxBackSpeed(n)?i:n.accelerationLevel>0?n.accelerationLevel-1:n.accelerationLevel+1}getCarCurrentSpeed(t){return t.bonus>1&&0!==t.ground?t.driver.stats.acceleration*t.accelerationLevel*t.bonus:t.driver.stats.acceleration*t.accelerationLevel*t.bonus*t.ground}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})(),Bx=(()=>{class r{constructor(t,n,i){this.requestService=t,this.circuitService=n,this.driverService=i}initData(){this.requestService.doGet("assets/json/gamedata.json").pipe((0,fn.U)(t=>{this.driverService.loadDrivers(t.body.drivers),this.circuitService.setCircuitList(t.body.circuits)})).subscribe()}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(Na),g.LFG(Ar),g.LFG(Cr))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();function Nx(r,e){1&r&&g._UZ(0,"img",4)}function kx(r,e){1&r&&g._UZ(0,"img",5)}function zx(r,e){1&r&&(g.TgZ(0,"div",6),g._UZ(1,"app-kart-shell"),g.qZA())}let Xu=(()=>{class r{constructor(t,n,i){this.platformId=t,this.initService=n,this.coreService=i,this.deviceFullscreenEnabled=!1,this.canFullscreen=!1,this.forcedFullscreen=!1,this.isBrowser=(0,Ze.NF)(this.platformId)}ngOnInit(){this.isBrowser&&(this.canFullscreen=document.documentElement.requestFullscreen||document.documentElement.webkitRequestFullScreen||document.documentElement.mozRequestFullScreen||document.documentElement.msRequestFullscreen,this.forcedFullscreen=this.coreService.forcedFullscreen,this.initService.initData(),this.coreService.forcedFullscreenState.subscribe(t=>{this.forcedFullscreen=t}))}toggleFullscreen(){if(this.deviceFullscreenEnabled&&this.isBrowser)(document.exitFullscreen||document.webkitCancelFullScreen||document.mozCancelFullScreen||document.msExitFullscreen).call(document),this.deviceFullscreenEnabled=!1;else{const t=document.documentElement;(t.requestFullscreen||t.webkitRequestFullScreen||t.mozRequestFullScreen||t.msRequestFullscreen).call(t),this.deviceFullscreenEnabled=!0}}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(g.Lbi),g.Y36(Bx),g.Y36(Pr))},r.\u0275cmp=g.Xpm({type:r,selectors:[["tak-superkart"]],decls:4,vars:3,consts:[[1,"btn-fullscreen",3,"click"],["src","assets/img/ui/icon-fullscreen.svg",4,"ngIf"],["src","assets/img/ui/icon-fullscreen-exit.svg",4,"ngIf"],["class","app-content",4,"ngIf"],["src","assets/img/ui/icon-fullscreen.svg"],["src","assets/img/ui/icon-fullscreen-exit.svg"],[1,"app-content"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g.NdJ("click",function(){return n.toggleFullscreen()}),g.YNc(1,Nx,1,0,"img",1),g.YNc(2,kx,1,0,"img",2),g.qZA(),g.YNc(3,zx,2,0,"div",3)),2&t&&(g.xp6(1),g.Q6J("ngIf",!n.deviceFullscreenEnabled),g.xp6(1),g.Q6J("ngIf",n.deviceFullscreenEnabled),g.xp6(1),g.Q6J("ngIf",n.isBrowser))},directives:[Ze.O5,Oa],styles:["[_nghost-%COMP%]{display:block;position:relative;width:100%;height:100%;background-image:url(wallpaper.f9ed6bfe7bb654e862c2.png);overflow:hidden;display:flex;justify-content:center}[_nghost-%COMP%]   .btn-fullscreen[_ngcontent-%COMP%]{position:absolute;z-index:20;right:10px;top:10px;width:40px;height:40px;display:flex;justify-content:center;align-items:center;background:#222}[_nghost-%COMP%]   .btn-fullscreen[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:22px}[_nghost-%COMP%]   .app-content[_ngcontent-%COMP%]{width:100%;height:100%;max-width:1100px;background:rgba(255,255,255,.05);display:flex;flex-direction:column}[_nghost-%COMP%]   .app-content.fullscreen[_ngcontent-%COMP%]{max-width:none}[_nghost-%COMP%]   .app-content[_ngcontent-%COMP%]   .app-route-content[_ngcontent-%COMP%]{flex:1;overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch}"]}),r})();var Lr=At(3679);let La=(()=>{class r{static forRoot(){return{ngModule:r,providers:[Pr]}}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=g.oAB({type:r}),r.\u0275inj=g.cJS({imports:[[]]}),r})(),Yu=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=g.oAB({type:r}),r.\u0275inj=g.cJS({imports:[[Ze.ez,La]]}),r})(),Ux=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=g.oAB({type:r}),r.\u0275inj=g.cJS({imports:[[Ze.ez,Lr.u5,La,Yu,Wt.Bz]]}),r})(),Gx=(()=>{class r{constructor(){}ngOnInit(){}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-welcome"]],decls:40,vars:0,consts:[[1,"welcome-description"],[1,"welcome-keys"],[1,"welcome-key"],[1,"key"],[1,"value"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g.TgZ(1,"p"),g._uU(2," vous allez d\xe9sormais \xeatre mis a l'\xe9preuve, pour postuler \xe0 nos offres vous devez tout d'abord terminer une course avec le maximum de points possibles. Serez-vous \xe0 la hauteur? "),g.qZA(),g.TgZ(3,"p"),g._uU(4," Vous trouverez sur le chemin de nombreux objets, certains vous donnent des points et des bonus. D'autres vous en font perdre et vous ralentisse. "),g.qZA(),g.TgZ(5,"p"),g._uU(6," Vous \xeates prets ? \xa0Peut-\xeatre pas encore, alors pour vous aider, voici les touches pour jouer : "),g.qZA(),g.TgZ(7,"p"),g._uU(8," Sur mobile, la moiti\xe9 gauche de l'\xe9cran agit comme un joystick, et la moiti\xe9 droite concerne le bouton d\xe9raper. "),g.qZA(),g.qZA(),g.TgZ(9,"div",1),g.TgZ(10,"div",2),g.TgZ(11,"div",3),g.TgZ(12,"span"),g._uU(13,"\u2191"),g.qZA(),g.qZA(),g.TgZ(14,"span",4),g._uU(15,"acc\xe9l\xe9rer/avancer"),g.qZA(),g.qZA(),g.TgZ(16,"div",2),g.TgZ(17,"div",3),g.TgZ(18,"span"),g._uU(19,"\u2193"),g.qZA(),g.qZA(),g.TgZ(20,"span",4),g._uU(21,"d\xe9c\xe9l\xe9rer/reculer"),g.qZA(),g.qZA(),g.TgZ(22,"div",2),g.TgZ(23,"div",3),g.TgZ(24,"span"),g._uU(25,"\u2190"),g.qZA(),g.qZA(),g.TgZ(26,"span",4),g._uU(27,"tourner a gauche"),g.qZA(),g.qZA(),g.TgZ(28,"div",2),g.TgZ(29,"div",3),g.TgZ(30,"span"),g._uU(31,"\u2192"),g.qZA(),g.qZA(),g.TgZ(32,"span",4),g._uU(33,"tourner a droite"),g.qZA(),g.qZA(),g.TgZ(34,"div",2),g.TgZ(35,"div",3),g.TgZ(36,"span"),g._uU(37,"D"),g.qZA(),g.qZA(),g.TgZ(38,"span",4),g._uU(39,"d\xe9raper"),g.qZA(),g.qZA(),g.qZA())},styles:['[_nghost-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;padding:10px}[_nghost-%COMP%]   .welcome-description[_ngcontent-%COMP%]{color:#fff;width:800px;max-width:100%;font-size:24px}@media (max-width: 600px){[_nghost-%COMP%]   .welcome-description[_ngcontent-%COMP%]{font-size:20px}}[_nghost-%COMP%]   .welcome-keys[_ngcontent-%COMP%]{color:#fff;width:800px;max-width:100%;font-size:24px;display:flex;flex-direction:column;align-items:center;justify-content:center;background-color:#ffffff0d}@media (max-width: 600px){[_nghost-%COMP%]   .welcome-keys[_ngcontent-%COMP%]{font-size:20px}}[_nghost-%COMP%]   .welcome-keys[_ngcontent-%COMP%]   .welcome-key[_ngcontent-%COMP%]{display:flex;align-items:center;height:46px;width:250px;max-width:100%}[_nghost-%COMP%]   .welcome-keys[_ngcontent-%COMP%]   .welcome-key[_ngcontent-%COMP%]   .key[_ngcontent-%COMP%]{width:30px;height:30px;display:flex;margin-right:15px;border-radius:5px;font-family:"Roboto",sans-serif;background:#f7faf3;color:#cb2468;box-shadow:0 6px #ffffff80;font-size:18px;justify-content:center;align-items:center;font-weight:bold;text-transform:uppercase}[_nghost-%COMP%]   .welcome-keys[_ngcontent-%COMP%]   .welcome-key[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{flex:1;text-align:right}']}),r})(),Hx=(()=>{class r{constructor(){}ngOnInit(){}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-about"]],decls:14,vars:0,consts:[[1,"about-content"],["href","http://conard.jason.free.fr/Perso","target","_blank"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g.TgZ(1,"p"),g._uU(2," Exp\xe9rience d\xe9velopp\xe9e avec amour par "),g.TgZ(3,"a",1),g._uU(4,"Jason Conard"),g.qZA(),g._uU(5,". "),g.qZA(),g.TgZ(6,"p"),g._uU(7," Voici les diff\xe9rentes technologies utilis\xe9es pour le d\xe9veloppement du jeu, repris pour Takima : "),g._UZ(8,"br"),g._uU(9," - HTML 5 / SCSS / Angular / TypeScript / RxJS "),g._UZ(10,"br"),g._uU(11," - ThreeJS "),g.qZA(),g.TgZ(12,"p"),g._uU(13," Amusez-vous bien ! "),g.qZA(),g.qZA())},styles:["[_nghost-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;padding:10px}[_nghost-%COMP%]   .about-content[_ngcontent-%COMP%]{color:#fff;width:600px;max-width:100%;font-size:24px}@media (max-width: 600px){[_nghost-%COMP%]   .about-content[_ngcontent-%COMP%]{font-size:20px}}[_nghost-%COMP%]   .about-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#cb2468}[_nghost-%COMP%]   .about-content[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:visited{color:#cb2468}"]}),r})();var ju=At(6937),$e=At(7238),Le=(()=>{return(r=Le||(Le={}))[r.drift=0]="drift",r[r.engine=1]="engine",r[r.bonus=2]="bonus",r[r.superbonus=3]="superbonus",r[r.stageMusic=4]="stageMusic",r[r.stageFailed=5]="stageFailed",r[r.stageSuccess=6]="stageSuccess",Le;var r})(),Kt=(()=>{return(r=Kt||(Kt={}))[r.keyboard=0]="keyboard",r[r.keyboard_inverted=1]="keyboard_inverted",r[r.touchscreen=2]="touchscreen",r[r.cardboard=3]="cardboard",Kt;var r})(),Te=(()=>{return(r=Te||(Te={}))[r.arrow_up=0]="arrow_up",r[r.arrow_down=1]="arrow_down",r[r.arrow_left=2]="arrow_left",r[r.arrow_right=3]="arrow_right",r[r.jump=4]="jump",r[r.obj=5]="obj",Te;var r})(),Ku=tr.degToRad;let Gi=(()=>{class r{constructor(){this.stickSubject=new dn.x,this.stickState=this.stickSubject.asObservable(),this.jumpPushedSubject=new dn.x,this.jumpPushedState=this.jumpPushedSubject.asObservable(),this.keydownSubject=new dn.x,this.keydownState=this.keydownSubject.asObservable(),this.inverted=!1,this.invertedTimeout=-1,this.stickRadius=60,this.stick=null,this.isTouchDevice="ontouchstart"in document.documentElement,this.GO_FORWARD_ACC=3,this.GO_BACKWARD_ACC=6,this.GO_FORWARD_CB=1,this.GO_BACKWARD_CB=4,this.directionTouches=null,this.driftTouches=null,this.mode=Kt.keyboard,this.orientation=180,this.accelerometer=null,this.down={},document.addEventListener("keydown",t=>{var n,i;this.keydownSubject.next(t.code);const s=this.getKeyFromKeyboardEvent(t);null!==s&&(this.down[s]=!0),this.orientation=null!==(i=null===(n=null==screen?void 0:screen.orientation)||void 0===n?void 0:n.angle)&&void 0!==i?i:170}),document.addEventListener("keyup",t=>{const n=this.getKeyFromKeyboardEvent(t);null!==n&&(this.down[n]=!1)})}getKeyFromKeyboardEvent(t){switch(t.code){case"ArrowUp":return Te.arrow_up;case"ArrowDown":return Te.arrow_down;case"ArrowLeft":return Te.arrow_left;case"ArrowRight":return Te.arrow_right;case"KeyD":return Te.jump}return null}invertBindings(t){this.inverted||(this.inverted=!0,this.invertedTimeout=setTimeout(()=>{this.inverted=!1},t))}updateStick(t){this.stick=t,this.stickSubject.next(t)}updateJump(t){this.jumpPushedSubject.next(t)}bindTouching(t){t.addEventListener("touchstart",n=>{const i=n.touches[n.touches.length-1],s=t.getBoundingClientRect().width;i.clientX>s/2?this.driftTouches||(this.driftTouches=i,this.down[Te.jump]=!0,this.updateJump(!0)):(this.updateStick({begin:{x:i.clientX,y:i.clientY},current:{x:i.clientX,y:i.clientY},radius:this.stickRadius}),this.directionTouches||(this.directionTouches=i))},!1),t.addEventListener("touchend",n=>{this.updateStick(null);const i=n.changedTouches[0];this.driftTouches&&i.identifier===this.driftTouches.identifier&&(this.driftTouches=null,this.down[Te.jump]=!1,this.updateJump(!1)),this.directionTouches&&i.identifier===this.directionTouches.identifier&&(this.directionTouches=null,this.down[Te.arrow_left]=!1,this.down[Te.arrow_right]=!1,this.down[Te.arrow_up]=!1,this.down[Te.arrow_down]=!1)},!1),t.addEventListener("touchmove",n=>{1!==n.scale&&n.preventDefault();const i=n.changedTouches[0];if(this.directionTouches&&i.identifier===this.directionTouches.identifier){const s=i.clientX-this.directionTouches.clientX,o=i.clientY-this.directionTouches.clientY,a=180*Math.asin(o/Math.sqrt(s*s+o*o))/Math.PI;let l=a;if(l=s>0?180-a:(360+a)%360,this.stick)if(Math.sqrt(Math.pow(this.stick.begin.x-i.clientX,2)+Math.pow(this.stick.begin.y-i.clientY,2))>this.stick.radius-10){const u=Math.cos(Ku(l))*(10-this.stick.radius),h=Math.sin(Ku(l))*(this.stick.radius-10);this.updateStick(Object.assign(Object.assign({},this.stick),{current:{x:u+this.stick.begin.x,y:h+this.stick.begin.y}}))}else this.updateStick(Object.assign(Object.assign({},this.stick),{current:{x:i.clientX,y:i.clientY}}));this.down[Te.arrow_left]=!1,this.down[Te.arrow_right]=!1,this.down[Te.arrow_up]=!1,this.down[Te.arrow_down]=!1,l>=0&&l<67.5&&(this.down[Te.arrow_left]=!0,this.down[Te.arrow_down]=!0),l>=67.5&&l<112.5&&(this.down[Te.arrow_down]=!0),l>=112.5&&l<180&&(this.down[Te.arrow_down]=!0,this.down[Te.arrow_right]=!0),l>=180&&l<247.5&&(this.down[Te.arrow_right]=!0,this.down[Te.arrow_up]=!0),l>=247.5&&l<292.5&&(this.down[Te.arrow_up]=!0),l>=292.5&&l<360&&(this.down[Te.arrow_up]=!0,this.down[Te.arrow_left]=!0)}},{passive:!1})}setBind(t,n){this.down[t]=n}setMode(t){this.mode=t}getAction(){let t={},n=null;return this.mode===Kt.keyboard?(this.down[this.inverted?Te.arrow_down:Te.arrow_up]?t[Se.go_forward]=!0:this.down[this.inverted?Te.arrow_up:Te.arrow_down]?t[Se.go_backward]=!0:t[Se.no_move]=!0,this.down[this.inverted?Te.arrow_right:Te.arrow_left]?t[Se.turn_left]=!0:this.down[this.inverted?Te.arrow_left:Te.arrow_right]?t[Se.turn_right]=!0:t[Se.no_turn]=!0,this.down[Te.jump]&&(t[Se.jump]=!0)):this.mode===Kt.keyboard_inverted||(this.mode===Kt.touchscreen?(this.accelerometer&&(this.accelerometer.z<this.GO_FORWARD_ACC?t[Se.go_backward]=!0:this.accelerometer.z>this.GO_BACKWARD_ACC?t[Se.go_forward]=!0:t[Se.no_move]=!0,n=this.getCurrentRotation(),n&&n.turn===ke.left?t[Se.turn_left]=!0:n&&n.turn===ke.right?t[Se.turn_right]=!0:t[Se.no_turn]=!0),this.down[Te.jump]&&(t[Se.jump]=!0),this.down[Te.obj]&&(t[Se.object]=!0)):this.mode===Kt.cardboard&&(this.accelerometer&&(this.accelerometer.z<this.GO_FORWARD_CB?t[Se.go_backward]=!0:this.accelerometer.z>this.GO_BACKWARD_CB?t[Se.go_forward]=!0:t[Se.no_move]=!0,n=this.getCurrentRotation(),n&&n.turn===ke.left?t[Se.turn_left]=!0:n&&n.turn===ke.right?t[Se.turn_right]=!0:t[Se.no_turn]=!0),this.down[Te.jump]&&(t[Se.jump]=!0),this.down[Te.obj]&&(t[Se.object]=!0))),t}getCurrentRotation(){if(this.orientation=screen.orientation?screen.orientation.angle:180,!this.accelerometer)return null;if(90===this.orientation){if(this.accelerometer.y<-1)return{turn:ke.left,ratio:Math.abs(this.accelerometer.y+1)};if(this.accelerometer.y>1)return{turn:ke.right,ratio:Math.abs(this.accelerometer.y-1)}}if(270===this.orientation){if(this.accelerometer.y>1)return{turn:ke.left,ratio:Math.abs(this.accelerometer.y-1)};if(this.accelerometer.y<-1)return{turn:ke.right,ratio:Math.abs(this.accelerometer.y+1)}}if(180===this.orientation){if(this.accelerometer.x<-1)return{turn:ke.left,ratio:Math.abs(this.accelerometer.x+1)};if(this.accelerometer.x>1)return{turn:ke.right,ratio:Math.abs(this.accelerometer.x-1)}}if(0===this.orientation){if(this.accelerometer.x>1)return{turn:ke.left,ratio:Math.abs(this.accelerometer.x-1)};if(this.accelerometer.x<-1)return{turn:ke.right,ratio:Math.abs(this.accelerometer.x+1)}}return null}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})(),eh=(()=>{class r{constructor(t){this.platformID=t,this.sounds=[],this.sounds[Le.bonus]={url:"assets/wav/smb2-coin.wav",volume:4,loop:!1},this.sounds[Le.superbonus]={url:"assets/wav/smb2-coin-special.wav",volume:6,loop:!1},this.sounds[Le.stageMusic]={url:"assets/mp3/yakuza-like-a-dragon-time-attack-race.mp3",volume:.7,loop:!0},this.sounds[Le.stageFailed]={url:"assets/mp3/yakuza-like-a-dragon-exam-failed.mp3",volume:1.2,loop:!1},this.sounds[Le.stageSuccess]={url:"assets/mp3/yakuza-like-a-dragon-exam-passed.mp3",volume:1.2,loop:!1},this.sounds[Le.drift]={url:"assets/wav/drift.wav",volume:.3,loop:!0},this.sounds[Le.engine]={url:"assets/wav/engine.wav",volume:.1,loop:!0},this.initSounds()}initSounds(){(0,Ze.NF)(this.platformID)&&(this.audioListener=new W0,this.audioLoader=new bu,this.initSound(Le.bonus),this.initSound(Le.superbonus),this.initSound(Le.stageMusic),this.initSound(Le.stageFailed),this.initSound(Le.stageSuccess),this.initSound(Le.drift),this.initSound(Le.engine))}initSound(t){const n=this.sounds[t];!n||this.audioLoader.load(n.url,i=>{const s=new ma(this.audioListener);s.setBuffer(i),s.setLoop(n.loop),s.setVolume(n.volume);const o=new ma(this.audioListener);o.setBuffer(i),o.setLoop(n.loop),o.setVolume(n.volume),n.audio=s,n.audioBackup=o,n.ready=!0})}playSound(t){const n=this.sounds[t];n&&n.ready&&!n.started&&(n.loop?(n.started=!0,n.audio.play()):n.audio.isPlaying?n.audioBackup.play():n.audio.play())}stopSound(t){const n=this.sounds[t];n&&n.ready&&(n.started=!1,n.audio.isPlaying&&n.audio.stop())}updatePitch(t,n){const i=this.sounds[t];i&&i.ready&&i.audio.setDetune(n)}updateVolume(t,n){const i=this.sounds[t];i.ready&&i.audio.setVolume(n)}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(g.Lbi))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})(),qx=(()=>{class r{constructor(t,n,i,s){this.circuitService=t,this.controlsService=n,this.audioService=i,this.driverService=s}getGround(t,n){return this.circuitService.getGroundValue(t,n)}move(t,n){t.ground=this.getGround(t.x,t.y),t.accelerationLevel=this.driverService.getCarCurrentAccelerationLevel(n,t),this.moveComputing(t)}moveComputing(t){const n=t.groundBeforeJump||t.ground;t.speed=this.driverService.getCarCurrentSpeed(t)/t.difficulty,t.angle=tr.degToRad(t.rotation);const i=t.x+Math.sin(t.angle)*t.speed,s=t.y+Math.cos(t.angle)*t.speed;this.getGround(i,s)>.05?(this.manageCheckpoints(t,i,s),this.manageItems(t),t.x=i,t.y=s):t.accelerationLevel=-Math.round(t.accelerationLevel*n)}manageCheckpoints(t,n,i){if(this.isThroughCheckpoint(new z(t.x,t.y),new z(n,i),new z(t.checkpoint.a.x,t.checkpoint.a.y),new z(t.checkpoint.b.x,t.checkpoint.b.y))){const o=this.circuitService.currentCircuit.checkpoints;t.nbCheckpoint=t.nbCheckpoint+1,t.checkpoint=o[t.nbCheckpoint%o.length],t.turn=Math.floor(t.nbCheckpoint/o.length),console.log("Checkpoints passed : "+t.nbCheckpoint+"/"+o.length)}}manageItems(t){this.circuitService.currentCircuit.items.forEach(i=>{Math.abs(i.tempPos.x-t.x)<6&&Math.abs(-i.tempPos.y-t.y)<6&&this.getItem(t,i)})}getItem(t,n){if(n.available){const i={img:n.img,libelle:n.libelle||"Unknown name",effectClass:"",effect:""};switch(n.type){case mt.super_malus:t.points=0,i.effectClass="supermalus",i.effect="pts = 0";break;case mt.malus:t.points-=n.value,i.effectClass="malus",i.effect="-"+n.value+"pt"+(n.value>1?"s":"");break;case mt.bonus:t.points+=n.value,i.effectClass="bonus",i.effect="+"+n.value+"pt"+(n.value>1?"s":"");break;case mt.super_bonus:t.points+=n.value,i.effectClass="superbonus",i.effect="+"+n.value+"pt"+(n.value>1?"s":"");break;case mt.invert:this.controlsService.invertBindings(n.duration),i.effectClass="supermalus",i.effect="inversion!!";break;case mt.slow:this.setBonus(t,n.value,n.duration),i.effectClass="supermalus",i.effect="lenteur!!";break;case mt.speed:this.setBonus(t,n.value,n.duration),i.effectClass="superbonus",i.effect="boost!!"}this.audioService.playSound(n.type===mt.super_bonus?Le.superbonus:Le.bonus),t.receivedItems.unshift(i),t.totalItems.push(i),setTimeout(()=>{t.receivedItems.splice(t.receivedItems.indexOf(i),1)},1500)}n.timeout&&n.available?(n.available=!1,setTimeout(()=>{n.available=!0},n.timeout)):n.available=!1}isThroughCheckpoint(t,n,i,s){const o=t.x<n.x?t:n,a=t.x<n.x?n:t,l=i.x<s.x?i:s,c=i.x<s.x?s:i,u=(c.y-l.y)*(a.x-o.x)-(c.x-l.x)*(a.y-o.y);if(!u)return!1;const h=((c.x-l.x)*(o.y-l.y)-(c.y-l.y)*(o.x-l.x))/u,d=((a.x-o.x)*(o.y-l.y)-(a.y-o.y)*(o.x-l.x))/u;return h>0&&h<1&&d>0&&d<1}rotate(t,n){let i=0;t.rotateDirection=n,n===ke.front?t.status===gt.drifting&&(i=this.getRotationPerFrame(t),t.driftDirection===ke.left&&(i=-i)):(i=this.getRotationPerFrame(t),t.status===gt.jumping&&t.driftDirection===ke.front&&(t.driftDirection=n),t.status===gt.drifting&&(t.driftDirection===ke.front&&(t.driftDirection=n),i*=t.driftDirection===n?.8+t.driver.stats.traction/6:-(.2+t.driver.stats.traction/18))),n===ke.left&&(i=-i),t.rotation=(t.rotation-i+360)%360}getRotationPerFrame(t){return(t.speed?.5-Math.abs(t.speed)/12:0)*(1+t.driver.stats.handling/3)}cancelDrift(t){t.status===gt.drifting&&(t.status=gt.normal,t.driftDirection=ke.front,t.driftingTime=-1)}jump(t){let n=0;if(t.canJump&&t.status!==gt.drifting&&t.status!==gt.jumping){t.zBeforeJump=t.design.obj.position.z,n=t.design.obj.position.z,t.canJump=!1,t.status=gt.jumping,t.groundBeforeJump=t.ground;const i=setInterval(()=>{n=Math.round(100*(n+.2))/100,t.design.obj.position.z=n},10);setTimeout(()=>{clearInterval(i)},140),setTimeout(()=>{const s=setInterval(()=>{n=Math.round(100*(n-.2))/100,t.design.obj.position.z=n},10);setTimeout(()=>{clearInterval(s)},140)},150),setTimeout(()=>{t.design.obj.position.z=t.zBeforeJump,t.groundBeforeJump=null,t.speed>.5&&t.rotateDirection!==ke.front?(t.driftDirection=t.rotateDirection,t.status=gt.drifting,t.driftingTime=(new Date).getTime()):t.status=gt.normal},301),setTimeout(()=>{t.canJump=!0},550)}}getDriftingFire(t,n){if(t.status===gt.drifting){const i=n-t.driftingTime;if(i>2400)return Bt.red;if(i>1200)return Bt.blue}return Bt.none}driftTurbo(t){if(t.driftingTime>0){const n=this.getDriftingFire(t,(new Date).getTime());this.setBonus(t,1+.4*n,750)}this.cancelDrift(t)}setBonus(t,n,i){t.bonusTimeout>=0&&clearTimeout(t.bonusTimeout),t.bonus=n,t.bonusTimeout=setTimeout(()=>{t.bonus=1},i)}getGeometryFromRacer(t,n){const s=.1,o=n.x*s,a=1-n.y*s,c=(new z(o,a),new z(o,a-s),new z(o+s,a-s),new z(o+s,a),new Gn(1.5*t.driver.stats.width,1.5*t.driver.stats.width,1,1)),u=c.getAttribute("uv");return u.setXY(0,o,a),u.setXY(2,o,a-s),u.setXY(3,o+s,a-s),u.setXY(1,o+s,a),c}updateRacerPic(t,n){t.design.plane.geometry.dispose();const i=this.getGeometryFromRacer(t,n);t.design.plane.geometry=i,t.design.geometry=i}loadDesignElement(t){return this.loadCharacterMaterial(t).pipe((0,fn.U)(n=>{t.driver.sprite.mat=n;const i=this.getGeometryFromRacer(t,Je.GO_FORWARD),s=new Xe(i,t.driver.sprite.mat),o=new Pe;return o.position.x=t.x,o.position.y=-t.y,o.position.z=.75*t.driver.stats.width,o.add(s),s.rotation.x=Math.PI/2,t.design={material:n,geometry:i,plane:s,obj:o},t.design}))}loadCharacterMaterial(t){return new Ui.y(n=>{(new br).load(t.driver.sprite.url,s=>{s.magFilter=Ge,s.minFilter=Ge;const o=new bt({map:s,transparent:!0,side:2});n.next(o),n.complete()},()=>{},()=>{n.error("ERR_LOAD_MESH")})})}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(Ar),g.LFG(Gi),g.LFG(eh),g.LFG(Cr))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})(),Zx=(()=>{class r{constructor(){}nextFrame(t){switch(t.move.type){case $n.stay:this.stay(t);break;case $n.comeback:this.comeback(t);break;case $n.path:this.path(t)}return this}stay(t){t.tempPos.x=t.pos.x,t.tempPos.y=t.pos.y}comeback(t){const n=t.move;n.i=n.i||0,n.sense?n.i<n.iterations?(t.tempPos.x-=(n.goX-t.pos.x)/n.iterations,t.tempPos.y-=(n.goY-t.pos.y)/n.iterations,n.i++):(n.i=0,n.sense=!1):n.i<n.iterations?(t.tempPos.x+=(n.goX-t.pos.x)/n.iterations,t.tempPos.y+=(n.goY-t.pos.y)/n.iterations,n.i++):(n.i=0,n.sense=!0)}path(t){const n=t.move;if(n.i=n.i||0,n.iterations&&n.path.length){const i=Math.floor(n.i/(n.iterations/n.path.length)),o=n.path[i],a=n.path[(i+1)%n.path.length];t.tempPos.x+=n.path.length*(a.x-o.x)/n.iterations,t.tempPos.y+=n.path.length*(a.y-o.y)/n.iterations,n.i++,n.i>=n.iterations&&(n.i=0)}}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();var Ra=tr.degToRad;let Zs=(()=>{class r{constructor(t,n,i,s,o){this.racerService=t,this.itemService=n,this.controlsService=i,this.circuitService=s,this.audioService=o,this.resultSubject=new dn.x,this.resultState=this.resultSubject.asObservable(),this.resizeSub=null,this.backgroundRefreshInterval=-1,this.physicsInterval=-1,this.currentTime=0,this.lastTime=0,this.beginTime=0,this.fps=0,this.fpsTable=[],this.shake=0,this.playerName=""}static getDist2D(t,n){return Math.sqrt(Math.pow(t.x-n.x,2)+Math.pow(t.y-n.y,2))}setPlayerName(t){this.playerName=t}initScene(t,n){return new Ui.y(i=>{this.container=t,this.race=n,this.beginTime=(new Date).getTime(),this.camera=new ft(100,this.container.clientWidth/this.container.clientHeight,1,4e3),this.camera.position.set(0,0,n.player.z),this.camera.up=new b(0,0,1),this.camera.lookAt(new b(0,80,0));const s=new pa(16777215,.9);s.position.y=-750,s.position.z=1500,s.position.x=750,this.scene=new ds,this.scene.add(s),this.resizeSub&&this.resizeSub.unsubscribe(),this.resizeSub=(0,ju.R)(window,"resize").subscribe(()=>{this.onWindowResize()}),this.loadResources().subscribe(()=>{this.renderer=new He({alpha:!0}),this.renderer.setSize(t.clientWidth,t.clientHeight),this.threeCanvas=this.renderer.domElement,t.appendChild(this.threeCanvas),this.threeCanvas.style.zIndex="13",this.controlsService.bindTouching(this.threeCanvas),this.startAnimate(),this.audioService.stopSound(Le.stageFailed),this.audioService.stopSound(Le.stageSuccess),this.audioService.playSound(Le.stageMusic),i.next(this.race),i.complete()})})}onWindowResize(){this.camera.aspect=this.container.clientWidth/this.container.clientHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.container.clientWidth,this.container.clientHeight)}loadResources(){const t=[];return t.push(this.circuitService.loadCircuit().pipe((0,fn.U)(n=>{this.scene.add(n.three.mesh),this.scene.add(n.background3d.mesh)}))),t.push(this.circuitService.loadItems().pipe((0,fn.U)(n=>{n.forEach(i=>{this.scene.add(i)})}))),t.push(this.circuitService.loadBuildings().pipe((0,fn.U)(n=>{n.forEach(i=>{this.scene.add(i.obj)})}))),t.push(this.circuitService.loadSprites().pipe((0,fn.U)(n=>{n.forEach(i=>{i.positions.forEach(s=>{this.scene.add(s.obj)})})}))),t.push(this.racerService.loadDesignElement(this.race.player).pipe((0,fn.U)(n=>{this.scene.add(n.obj)}))),(0,Ea.D)(t)}startAnimate(){this.physicsInterval>=0&&(clearInterval(this.physicsInterval),this.physicsInterval=-1),this.physicsInterval=setInterval(()=>{this.updatePhysics()},1e3/60),this.animate()}animate(){this.shake=(this.shake+1)%10,this.computeFPS(),this.animatePlayer(),this.animateItems(),this.renderer.render(this.scene,this.camera),this.isGameFinished()?this.sendResult():this.animation=requestAnimationFrame(()=>{this.animate()})}isGameFinished(){return this.race.player.turn>=this.race.rules.turns}sendResult(){const t=(this.race.rules.time-this.race.time)*this.race.rules.timeValue,n=this.race.player.points+t;this.race.result={itemNb:this.race.player.totalItems.length,itemPts:this.race.player.points,timePts:t,totalPts:n,raceTime:this.race.time,objectiveTime:this.race.rules.time,objectivePts:this.race.rules.pts},this.audioService.stopSound(Le.drift),this.audioService.stopSound(Le.engine),this.audioService.stopSound(Le.stageMusic),this.audioService.playSound(this.race.result.objectivePts>n?Le.stageFailed:Le.stageSuccess),this.resultSubject.next(this.race.result)}computeFPS(){this.currentTime=(new Date).getTime();const t=this.currentTime-this.lastTime;this.lastTime=this.currentTime,this.race.time=Math.round((this.currentTime-this.beginTime)/1e3),this.fps=Math.round(1e3/t),this.fpsTable.length>=100&&this.fpsTable.splice(0,1),this.fpsTable.push(this.fps);const n=this.fpsTable.reduce((i,s)=>i+s,0);this.race.fps=Math.floor(n/this.fpsTable.length)}animatePlayer(){const t=this.race.player,n=t.design.obj,i=t.design.plane;if(n){const s=Ra(t.rotation-90);n.position.x=t.x+-2*Math.cos(s),n.position.y=-t.y+-2*Math.sin(s),i.rotation.y=Ra(t.rotation-180),this.camera.position.x=n.position.x+-8*Math.cos(s),this.camera.position.y=n.position.y+-8*Math.sin(s);const o={x:n.position.x+80*Math.cos(s),y:n.position.y+80*Math.sin(s),z:t.z-8};n.position.x+=+(t.status===gt.drifting)*+(this.shake>5)*.1,this.camera.lookAt(new b(o.x,o.y,o.z))}}animateItems(){this.race.circuit.items.forEach(t=>{if(t.obj)if(t.available){t.obj.rotation.x+=.05,t.obj.rotation.y+=.05,this.itemService.nextFrame(t),t.obj.position.x=t.tempPos.x,t.obj.position.y=t.tempPos.y;const i=r.getDist2D(t.obj.position,this.camera.position)<300;t.obj.visible=t.available&&i}else t.obj.visible=!1})}updatePhysics(){const t=this.race.player;this.updateActions(t),this.updateSprites(t)}updateActions(t){const n=this.controlsService.getAction();n[Se.go_backward]&&this.racerService.move(t,Se.go_backward),n[Se.go_forward]&&this.racerService.move(t,Se.go_forward),n[Se.no_move]&&(this.racerService.move(t,Se.no_move),this.racerService.cancelDrift(t)),n[Se.turn_left]&&this.racerService.rotate(t,ke.left),n[Se.turn_right]&&this.racerService.rotate(t,ke.right),n[Se.no_turn]&&this.racerService.rotate(t,ke.front),n[Se.jump]?this.racerService.jump(t):this.racerService.driftTurbo(t),this.defineDriverMaterial(n),this.defineDriverSound()}updateSprites(t){const n=Ra(t.rotation-180);Object.keys(this.race.circuit.sprites).forEach(s=>{const o=this.race.circuit.sprites[s];o.positions.forEach(a=>{const l=r.getDist2D(new z(a.x,-a.y),this.camera.position);o.obj&&(a.obj.visible=l<300,o.autorotate&&(a.obj.rotation.y=n))})})}defineDriverSound(){this.audioService.playSound(Le.engine);const t=this.race.player;t.status===gt.drifting?this.audioService.playSound(Le.drift):this.audioService.stopSound(Le.drift);const n=Math.min(Math.max(t.speed/3,.2),.4);this.audioService.updatePitch(Le.engine,t.speed*(150*t.driver.stats.weight)),this.audioService.updateVolume(Le.engine,n)}defineDriverMaterial(t){const n=this.race.player;let i=Je.GO_FORWARD;if(n.status===gt.drifting){const s=this.shake>6?2:this.shake<3?0:1,o=this.racerService.getDriftingFire(n,this.currentTime);switch(n.driftDirection){case ke.left:switch(o){case Bt.none:switch(s){case 0:i=Je.DRIFT_LEFT_SMOKE;break;case 1:i=Je.DRIFT_LEFT_SMOKE2;break;case 2:i=Je.DRIFT_LEFT_SMOKE3}break;case Bt.red:switch(s){case 0:i=Je.DRIFT_LEFT_RED;break;case 1:i=Je.DRIFT_LEFT_RED2;break;case 2:i=Je.DRIFT_LEFT_RED3}break;case Bt.blue:switch(s){case 0:i=Je.DRIFT_LEFT_BLUE;break;case 1:i=Je.DRIFT_LEFT_BLUE2;break;case 2:i=Je.DRIFT_LEFT_BLUE3}}break;case ke.right:switch(o){case Bt.none:switch(s){case 0:i=Je.DRIFT_RIGHT_SMOKE;break;case 1:i=Je.DRIFT_RIGHT_SMOKE2;break;case 2:i=Je.DRIFT_RIGHT_SMOKE3}break;case Bt.red:switch(s){case 0:i=Je.DRIFT_RIGHT_RED;break;case 1:i=Je.DRIFT_RIGHT_RED2;break;case 2:i=Je.DRIFT_RIGHT_RED3}break;case Bt.blue:switch(s){case 0:i=Je.DRIFT_RIGHT_BLUE;break;case 1:i=Je.DRIFT_RIGHT_BLUE2;break;case 2:i=Je.DRIFT_RIGHT_BLUE3}}}}else t[Se.turn_left]?i=n.speed?Je.TURN_LEFT:Je.SEE_LEFT:t[Se.turn_right]&&(i=n.speed?Je.TURN_RIGHT:Je.SEE_RIGHT);this.racerService.updateRacerPic(n,i)}clearRace(){this.animation&&(cancelAnimationFrame(this.animation),this.animation=null),this.physicsInterval>=0&&clearInterval(this.physicsInterval),this.backgroundRefreshInterval>=0&&clearInterval(this.backgroundRefreshInterval),this.threeCanvas&&(this.container.removeChild(this.threeCanvas),this.threeCanvas=null),this.container=null,this.camera=null,this.scene=null,this.renderer=null,this.race=null,this.backgroundRefreshInterval=-1,this.physicsInterval=-1,this.currentTime=0,this.lastTime=0,this.beginTime=0,this.fps=0,this.fpsTable=[],this.shake=0,this.animation=0,this.audioService.stopSound(Le.drift),this.audioService.stopSound(Le.engine),this.audioService.stopSound(Le.stageMusic)}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(qx),g.LFG(Zx),g.LFG(Gi),g.LFG(Ar),g.LFG(eh))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})(),Xx=(()=>{class r{constructor(){this.driver=null,this.selected=!1,this.intervalId=-1,this.frame=0,this.frames=["-128px 0","-64px 0","-128px 0","-192px 0"]}ngOnInit(){this.intervalId=window.setInterval(()=>{this.frame=(this.frame+1)%this.frames.length},200)}ngOnDestroy(){}getBgStyle(){return{"background-image":'url("'+this.driver.mainBackground+'")'}}getSpriteStyle(){return{"background-image":'url("'+this.driver.sprite.url+'")',"background-position":this.frames[this.selected?this.frame:0]}}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-driver-cell"]],inputs:{driver:"driver",selected:"selected"},decls:2,vars:4,consts:[[1,"driver-cell",3,"ngStyle"],[1,"driver-cell-sprite",3,"ngStyle"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g._UZ(1,"div",1),g.qZA()),2&t&&(g.ekj("selected",n.selected),g.Q6J("ngStyle",n.getBgStyle()),g.xp6(1),g.Q6J("ngStyle",n.getSpriteStyle()))},directives:[Ze.PC],styles:["[_nghost-%COMP%]{margin:10px;cursor:pointer}.driver-cell[_ngcontent-%COMP%]{width:80px;height:80px;image-rendering:pixelated;background-size:cover;display:flex;justify-content:center;align-items:center;overflow:hidden}.driver-cell.selected[_ngcontent-%COMP%]{border:2px solid white}.driver-cell[_ngcontent-%COMP%]   .driver-cell-sprite[_ngcontent-%COMP%]{width:64px;height:64px;image-rendering:pixelated;transform:scale(2)}"]}),r})();function Yx(r,e){if(1&r&&g._UZ(0,"div",5),2&r){const t=e.$implicit,n=g.oxw().$implicit,i=g.oxw();g.Q6J("ngStyle",i.getDriverStyle(n.value>=t))}}function jx(r,e){if(1&r&&(g.TgZ(0,"div",1),g.TgZ(1,"div",2),g._uU(2),g.qZA(),g.TgZ(3,"div",3),g.YNc(4,Yx,1,1,"div",4),g.qZA(),g.qZA()),2&r){const t=e.$implicit,n=g.oxw();g.xp6(2),g.Oqu(t.label),g.xp6(2),g.Q6J("ngForOf",n.valueCells)}}let Jx=(()=>{class r{constructor(){this.driver=null,this.statsList=[],this.valueCells=[]}ngOnInit(){this.valueCells=[];for(let t=1;t<7;t++)this.valueCells.push(t);this.initDriver()}ngOnChanges(t){t.driver&&this.initDriver()}initDriver(){if(this.driver){const t=this.driver.stats;this.statsList.length?this.statsList.forEach(n=>{switch(n.label){case"Speed":n.value=t.speed;break;case"Acceleration":n.value=t.acceleration;break;case"Weight":n.value=t.weight;break;case"Handling":n.value=t.handling;break;case"Traction":n.value=t.traction;break;case"Luck":n.value=t.luck}}):this.statsList=[{label:"Speed",value:t.speed},{label:"Acceleration",value:t.acceleration},{label:"Weight",value:t.weight},{label:"Handling",value:t.handling},{label:"Traction",value:t.traction},{label:"Luck",value:t.luck}]}}getDriverStyle(t){return t?{"background-image":'url("'+this.driver.mainBackground+'")'}:null}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-driver-stats"]],inputs:{driver:"driver"},features:[g.TTD],decls:1,vars:1,consts:[["class","driver-stats",4,"ngFor","ngForOf"],[1,"driver-stats"],[1,"driver-stats-title"],[1,"driver-stats-row"],["class","driver-stats-cell",3,"ngStyle",4,"ngFor","ngForOf"],[1,"driver-stats-cell",3,"ngStyle"]],template:function(t,n){1&t&&g.YNc(0,jx,5,2,"div",0),2&t&&g.Q6J("ngForOf",n.statsList)},directives:[Ze.sg,Ze.PC],styles:["[_nghost-%COMP%]{display:block}.driver-stats[_ngcontent-%COMP%]   .driver-stats-title[_ngcontent-%COMP%]{color:#fff;font-size:24px;margin:8px 0 0}.driver-stats[_ngcontent-%COMP%]   .driver-stats-row[_ngcontent-%COMP%]{display:flex}.driver-stats[_ngcontent-%COMP%]   .driver-stats-row[_ngcontent-%COMP%]   .driver-stats-cell[_ngcontent-%COMP%]{width:40px;height:25px;transition:background .2s ease-in-out;border:2px solid white;image-rendering:pixelated;background-size:cover}"]}),r})();const Qx=["nameInput"],$x=["driverList"];function Kx(r,e){1&r&&(g.TgZ(0,"div",15),g._uU(1," Veuillez entrer un nom (sans caract\xe8res sp\xe9ciaux) "),g.qZA()),2&r&&g.Q6J("@errorAnim",void 0)}function ey(r,e){if(1&r){const t=g.EpF();g.TgZ(0,"app-driver-cell",16),g.NdJ("click",function(){const s=g.CHM(t).$implicit;return g.oxw().selectDriver(s)}),g.qZA()}if(2&r){const t=e.$implicit,n=g.oxw();g.Q6J("driver",t)("selected",n.selectedDriver&&n.selectedDriver.id===t.id)}}function ty(r,e){if(1&r&&(g.TgZ(0,"div",17),g._uU(1),g.qZA()),2&r){const t=g.oxw();g.Q6J("@nameAnim",t.selectedDriverId),g.xp6(1),g.hij(" ",t.selectedDriver.name," ")}}function ny(r,e){if(1&r&&g._UZ(0,"app-driver-stats",18),2&r){const t=g.oxw();g.Q6J("driver",t.selectedDriver)}}let iy=(()=>{class r{constructor(t,n,i,s,o,a){this.driverService=t,this.gameService=n,this.coreService=i,this.router=s,this.controlsService=o,this.footerService=a,this.subs=[],this.playerName=this.gameService.playerName,this.selectedDriver=null,this.selectedDriverId=0,this.error=!1,this.drivers=[],this.fieldFocus=!1,this.fieldFocusTimeout=-1,this.confirming=!1}ngOnInit(){this.subs.push(this.driverService.driversState.subscribe(t=>{this.drivers=t,this.selectDriver(this.driverService.currentDriver||this.drivers[0]),setTimeout(()=>{this.updatePlayerGrid()})})),this.subs.push(this.footerService.actionState.subscribe(t=>{t===vt.game&&this.confirm()})),this.subs.push(this.controlsService.keydownState.subscribe(t=>{this.manageKeyboard(t)})),this.subs.push((0,ju.R)(window,"resize").subscribe(()=>{this.fieldFocus&&window.innerHeight<200?this.coreService.setForcedFullscreen(!0):this.coreService.setForcedFullscreen(!1),this.updatePlayerGrid()})),this.controlsService.isTouchDevice||this.nameInput.nativeElement.focus()}confirm(){this.error=!1,!this.playerName.trim()||this.playerName.trim().length<2||!/^[a-zA-Z0-9\-]*$/.test(this.playerName)?this.error=!0:(this.gameService.setPlayerName(this.playerName.trim()),this.driverService.selectDriver(this.selectedDriver),this.fieldFocus?this.confirming=!0:this.router.navigate(["kart/game"]))}ngOnDestroy(){this.subs.forEach(t=>t.unsubscribe()),this.subs=[]}selectDriver(t){this.selectedDriver=t,this.selectedDriverId=this.drivers.findIndex(n=>n.id===this.selectedDriver.id)}manageKeyboard(t){if(document.activeElement!==this.nameInput.nativeElement){if(this.playerGrid){let n=-1;switch(t){case"ArrowUp":n=this.selectedDriverId-this.playerGrid.nbItemPerRow;break;case"ArrowDown":n=this.selectedDriverId+this.playerGrid.nbItemPerRow;break;case"ArrowLeft":this.selectedDriverId%this.playerGrid.nbItemPerRow>0&&(n=this.selectedDriverId-1);break;case"ArrowRight":this.selectedDriverId%this.playerGrid.nbItemPerRow<this.playerGrid.nbItemPerRow-1&&(n=this.selectedDriverId+1)}const i=this.drivers[n];i&&this.selectDriver(i)}}else"Enter"===t&&(this.nameInput.nativeElement.blur(),this.confirm())}getRowWidth(){return{"max-width":this.playerGrid?this.playerGrid.rowWidth+"px":"none"}}updatePlayerGrid(){const t=this.driverList.nativeElement.getBoundingClientRect().width,o=t-20-(t-20)%100,a=o/100,l=Math.ceil(this.drivers.length/a);this.playerGrid={nbItemPerRow:a,nbRow:l,rowWidth:o}}toggleFieldFocus(t){clearTimeout(this.fieldFocusTimeout),t?this.fieldFocus=!0:this.fieldFocusTimeout=window.setTimeout(()=>{this.confirming&&this.router.navigate(["kart/game"]),this.confirming=!1,this.fieldFocus=!1},250)}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(Cr),g.Y36(Zs),g.Y36(Pr),g.Y36(Wt.F0),g.Y36(Gi),g.Y36(Xs))},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-driver-choice"]],viewQuery:function(t,n){if(1&t&&(g.Gf(Qx,7),g.Gf($x,7)),2&t){let i;g.iGM(i=g.CRH())&&(n.nameInput=i.first),g.iGM(i=g.CRH())&&(n.driverList=i.first)}},decls:16,vars:6,consts:[[1,"player-name"],[1,"player-name-field"],[1,"name-title"],[1,"player-name-input"],["type","text",3,"ngModel","focus","blur","ngModelChange"],["nameInput",""],["class","name-title-error",4,"ngIf"],[1,"driver-choice"],[1,"driver-list"],["driverList",""],[1,"driver-list-content",3,"ngStyle"],[3,"driver","selected","click",4,"ngFor","ngForOf"],[1,"driver-stats"],["class","driver-name",4,"ngIf"],[3,"driver",4,"ngIf"],[1,"name-title-error"],[3,"driver","selected","click"],[1,"driver-name"],[3,"driver"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g.TgZ(1,"div",1),g.TgZ(2,"div",2),g._uU(3,"Merci de taper ton pr\xe9nom"),g.qZA(),g.TgZ(4,"div",3),g.TgZ(5,"input",4,5),g.NdJ("focus",function(){return n.toggleFieldFocus(!0)})("blur",function(){return n.toggleFieldFocus(!1)})("ngModelChange",function(s){return n.playerName=s}),g.qZA(),g.qZA(),g.YNc(7,Kx,2,1,"div",6),g.qZA(),g.qZA(),g.TgZ(8,"div",7),g.TgZ(9,"div",8,9),g.TgZ(11,"div",10),g.YNc(12,ey,1,2,"app-driver-cell",11),g.qZA(),g.qZA(),g.TgZ(13,"div",12),g.YNc(14,ty,2,2,"div",13),g.YNc(15,ny,1,1,"app-driver-stats",14),g.qZA(),g.qZA()),2&t&&(g.xp6(5),g.Q6J("ngModel",n.playerName),g.xp6(2),g.Q6J("ngIf",n.error),g.xp6(4),g.Q6J("ngStyle",n.getRowWidth()),g.xp6(1),g.Q6J("ngForOf",n.drivers),g.xp6(2),g.Q6J("ngIf",n.selectedDriver),g.xp6(1),g.Q6J("ngIf",n.selectedDriver))},directives:[Lr.Fj,Lr.JJ,Lr.On,Ze.O5,Ze.PC,Ze.sg,Xx,Jx],styles:['.player-name[_ngcontent-%COMP%]{margin-top:50px;height:100px;font-size:24px;color:#fff;width:100%;display:flex;justify-content:center}.player-name[_ngcontent-%COMP%]   .player-name-field[_ngcontent-%COMP%]{position:relative;max-width:400px;width:calc(100% - 20px)}.player-name[_ngcontent-%COMP%]   .player-name-field[_ngcontent-%COMP%]   .name-title[_ngcontent-%COMP%]{padding:0 10px}.player-name[_ngcontent-%COMP%]   .player-name-field[_ngcontent-%COMP%]   .name-title-error[_ngcontent-%COMP%]{position:absolute;bottom:10px;left:0;padding:10px 10px 0;color:red;font-size:18px;line-height:12px}.player-name[_ngcontent-%COMP%]   .player-name-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;height:40px;margin-top:5px;font-family:"Visitor",sans-serif;font-size:24px;padding:0 10px}.driver-choice[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center}.driver-choice[_ngcontent-%COMP%]   .driver-list[_ngcontent-%COMP%]{flex:1;margin-right:10px;background:rgba(0,0,0,.5);padding:10px;color:#fff;display:flex;flex-wrap:wrap;justify-content:center;align-items:center}.driver-choice[_ngcontent-%COMP%]   .driver-list[_ngcontent-%COMP%]   .driver-list-content[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.driver-choice[_ngcontent-%COMP%]   .driver-stats[_ngcontent-%COMP%]{padding:10px}.driver-choice[_ngcontent-%COMP%]   .driver-stats[_ngcontent-%COMP%]   .driver-name[_ngcontent-%COMP%]{font-size:36px;margin-bottom:10px;color:#fff;transform-origin:50%;width:100%;text-align:center}'],data:{animation:[(0,$e.X$)("nameAnim",[(0,$e.eR)(":decrement, :increment",[(0,$e.oB)({opacity:0,transform:"translate3D(0, 30px, 0) scale(0.3)"}),(0,$e.jt)("200ms",(0,$e.oB)({opacity:1,transform:"translate3D(0,0,0) scale(1)"}))])]),(0,$e.X$)("errorAnim",[(0,$e.eR)(":enter",[(0,$e.oB)({opacity:0,transform:"translate3D(0, 30px, 0) scale(0.3)"}),(0,$e.jt)("200ms",(0,$e.oB)({opacity:1,transform:"translate3D(0,0,0) scale(1)"}))]),(0,$e.eR)(":leave",[(0,$e.oB)({opacity:0,transform:"translate3D(0, 0, 0) scale(1)"}),(0,$e.jt)("200ms",(0,$e.oB)({opacity:1,transform:"translate3D(0,30px,0) scale(0.3)"}))])])]}}),r})();var Nt=(()=>{return(r=Nt||(Nt={}))[r.retry=0]="retry",r[r.back_to_website=1]="back_to_website",r[r.enter_token_3=2]="enter_token_3",r[r.tweet=3]="tweet",Nt;var r})(),ry=tr.degToRad;let th=(()=>{class r{constructor(t,n,i,s){this.gameService=t,this.driverService=n,this.circuitService=i,this.controlsService=s,this.loadingSubject=new dn.x,this.loadingState=this.loadingSubject.asObservable(),this.raceSubject=new dn.x,this.raceState=this.raceSubject.asObservable(),this.screenElem=null}initRace(t,n){this.rules=n,this.screenElem=t,this.clearRace(),this.loadingSubject.next(!0),this.controlsService.setMode(window.cordova?Kt.touchscreen:Kt.keyboard);const i=this.circuitService.currentCircuit,s=new Ox({driver:this.driverService.currentDriver,rotation:i.direction,x:i.startPosition.x,y:i.startPosition.y,z:8,angle:ry(0),driftDirection:ke.front,accelerationLevel:0,speed:0,ground:1,groundBeforeJump:1,zBeforeJump:0,status:gt.normal,driftingTime:-1,canJump:!0,rotateDirection:ke.front,bonus:1,bonusTimeout:null,design:null,points:0,nbCheckpoint:0,checkpoint:i.checkpoints[0],turn:0,totalTime:0,receivedItems:[],totalItems:[],difficulty:n.difficulty});this.race={player:s,circuit:i,rules:this.rules,result:null,fps:0,time:0},this.raceSubject.next(this.race),setTimeout(()=>{const o=this.gameService.initScene(t,this.race).subscribe(()=>{this.loadingSubject.next(!1),o.unsubscribe()})})}clearRace(){this.gameService.clearRace()}retry(){this.initRace(this.screenElem,this.rules)}}return r.\u0275fac=function(t){return new(t||r)(g.LFG(Zs),g.LFG(Cr),g.LFG(Ar),g.LFG(Gi))},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();function sy(r,e){if(1&r&&g._UZ(0,"div",3),2&r){const t=g.oxw(2);g.Q6J("ngStyle",t.getCurrentStyle())}}function oy(r,e){if(1&r&&(g.TgZ(0,"div",1),g.YNc(1,sy,1,1,"div",2),g.qZA()),2&r){const t=g.oxw();g.Q6J("ngStyle",t.getContentStyle()),g.xp6(1),g.Q6J("ngIf",t.stick.current)}}let ay=(()=>{class r{constructor(t){this.controlsService=t,this.subs=[],this.stick=null}ngOnInit(){this.subs.push(this.controlsService.stickState.subscribe(t=>{this.stick=t}))}ngOnDestroy(){this.subs.forEach(t=>t.unsubscribe()),this.subs=[]}getContentStyle(){return{width:2*this.stick.radius+"px",height:2*this.stick.radius+"px",left:this.stick.begin.x-this.stick.radius+"px",top:this.stick.begin.y-this.stick.radius-10+"px"}}getCurrentStyle(){return{left:this.stick.current.x-this.stick.begin.x+this.stick.radius+"px",top:this.stick.current.y-this.stick.begin.y+this.stick.radius+"px"}}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(Gi))},r.\u0275cmp=g.Xpm({type:r,selectors:[["kart-stick"]],decls:1,vars:1,consts:[["class","stick-circle",3,"ngStyle",4,"ngIf"],[1,"stick-circle",3,"ngStyle"],["class","stick-current",3,"ngStyle",4,"ngIf"],[1,"stick-current",3,"ngStyle"]],template:function(t,n){1&t&&g.YNc(0,oy,2,2,"div",0),2&t&&g.Q6J("ngIf",n.stick)},directives:[Ze.O5,Ze.PC],styles:["[_nghost-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;z-index:15;pointer-events:none}.stick-circle[_ngcontent-%COMP%]{border-radius:50%;position:absolute;display:flex;justify-content:center;align-items:center;background:radial-gradient(rgba(255,255,255,.1),rgba(255,255,255,.3));box-shadow:0 0 2px #fff6}.stick-circle[_ngcontent-%COMP%]   .stick-current[_ngcontent-%COMP%]{position:absolute;width:80px;height:80px;transform:translate(-40px,-40px);background:white;border-radius:50%;background:radial-gradient(rgba(255,255,255,.1),rgba(255,255,255,.4));box-shadow:0 0 2px #ffffff80}"]}),r})(),nh=(()=>{class r{transform(t){const n=t%60;return Math.round((t-n)/60)+":"+(n<10?"0"+n:n)}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275pipe=g.Yjl({name:"time",type:r,pure:!0}),r})();const cy=["screen"];function ly(r,e){1&r&&(g.TgZ(0,"div",9),g._uU(1," Chargement en cours ...\n"),g.qZA())}function uy(r,e){if(1&r&&(g.TgZ(0,"div",10),g.TgZ(1,"div",11),g._uU(2),g.qZA(),g.TgZ(3,"div",12),g._uU(4),g.ALo(5,"time"),g.qZA(),g.qZA()),2&r){const t=g.oxw();g.xp6(2),g.AsE(" score: ",t.race.player.points," pt",t.race.player.points>1?"s":""," "),g.xp6(2),g.hij(" ",g.lcZ(5,3,t.race.time)," ")}}function hy(r,e){if(1&r&&(g.TgZ(0,"div",15),g._UZ(1,"img",16),g._uU(2),g.TgZ(3,"span",17),g._uU(4),g.qZA(),g.qZA()),2&r){const t=e.$implicit;g.Q6J("@itemAppear",void 0),g.xp6(1),g.Q6J("src",t.img,g.LSH),g.xp6(1),g.hij(" ",t.libelle," "),g.xp6(1),g.Q6J("ngClass",t.effectClass),g.xp6(1),g.Oqu(t.effect)}}function dy(r,e){if(1&r&&(g.TgZ(0,"div",13),g.YNc(1,hy,5,5,"div",14),g.qZA()),2&r){const t=g.oxw();g.xp6(1),g.Q6J("ngForOf",t.race.player.receivedItems)}}function fy(r,e){if(1&r&&(g.TgZ(0,"div",18),g.TgZ(1,"div",11),g._uU(2),g._UZ(3,"br"),g._uU(4),g.ALo(5,"time"),g.qZA(),g.qZA()),2&r){const t=g.oxw();g.xp6(2),g.AsE(" objectif: ",t.race.rules.pts," pt",t.race.rules.pts>1?"s":"",""),g.xp6(2),g.hij(" temps: ",g.lcZ(5,3,t.race.rules.time)," ")}}function py(r,e){1&r&&g._UZ(0,"kart-stick")}function my(r,e){if(1&r&&(g.TgZ(0,"div",19),g.TgZ(1,"div",20),g._uU(2," JUMP "),g.qZA(),g.qZA()),2&r){const t=g.oxw();g.xp6(1),g.ekj("pushed",t.jumpButtonPushed)}}let gy=(()=>{class r{constructor(t,n,i,s,o){this.driverService=t,this.circuitService=n,this.gameService=i,this.raceService=s,this.controlsService=o,this.subs=[],this.onExit=new g.vpe,this.rules=null,this.race=null,this.isLoading=!0,this.circuitBack={},this.isTouchScreen=this.controlsService.isTouchDevice,this.jumpButtonPushed=!1}ngOnDestroy(){this.subs.forEach(t=>t.unsubscribe()),this.subs=[],this.raceService.clearRace()}ngOnInit(){this.rules||(this.rules={pts:700,time:90,timeValue:2,turns:1,difficulty:180}),this.subs.push(this.raceService.loadingState.subscribe(t=>{this.isLoading=t})),this.subs.push(this.raceService.raceState.subscribe(t=>{this.race=t})),this.subs.push(this.controlsService.jumpPushedState.subscribe(t=>{this.jumpButtonPushed=t})),this.init()}init(){const n=this.circuitService.currentCircuit;this.driverService.currentDriver&&n?(this.circuitBack={background:n.bgColor},this.raceService.initRace(this.screenRef.nativeElement,this.rules)):this.onExit.emit()}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(Cr),g.Y36(Ar),g.Y36(Zs),g.Y36(th),g.Y36(Gi))},r.\u0275cmp=g.Xpm({type:r,selectors:[["kart-race"]],viewQuery:function(t,n){if(1&t&&g.Gf(cy,7),2&t){let i;g.iGM(i=g.CRH())&&(n.screenRef=i.first)}},inputs:{rules:"rules"},outputs:{onExit:"onExit"},decls:9,vars:9,consts:[["class","game-loading",4,"ngIf"],[1,"game-content"],["class","score-panel",4,"ngIf"],["class","received-items",4,"ngIf"],["class","objective-panel",4,"ngIf"],[1,"game-screen",3,"ngStyle"],["screen",""],[4,"ngIf"],["class","jump-button",4,"ngIf"],[1,"game-loading"],[1,"score-panel"],[1,"score"],[1,"time"],[1,"received-items"],["class","received-item",4,"ngFor","ngForOf"],[1,"received-item"],[3,"src"],[3,"ngClass"],[1,"objective-panel"],[1,"jump-button"],[1,"jump-button-content"]],template:function(t,n){1&t&&(g.YNc(0,ly,2,0,"div",0),g.TgZ(1,"div",1),g.YNc(2,uy,6,5,"div",2),g.YNc(3,dy,2,1,"div",3),g.YNc(4,fy,6,5,"div",4),g.TgZ(5,"div",5,6),g.YNc(7,py,1,0,"kart-stick",7),g.YNc(8,my,3,2,"div",8),g.qZA(),g.qZA()),2&t&&(g.Q6J("ngIf",n.isLoading),g.xp6(1),g.ekj("hidden",n.isLoading),g.xp6(1),g.Q6J("ngIf",n.race&&n.race.player),g.xp6(1),g.Q6J("ngIf",n.race&&n.race.player),g.xp6(1),g.Q6J("ngIf",n.race&&n.race.rules),g.xp6(1),g.Q6J("ngStyle",n.circuitBack),g.xp6(2),g.Q6J("ngIf",n.isTouchScreen),g.xp6(1),g.Q6J("ngIf",n.isTouchScreen))},directives:[Ze.O5,Ze.PC,Ze.sg,Ze.mk,ay],pipes:[nh],styles:["[_nghost-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;background:rgba(0,0,0,.7);overflow:hidden}[_nghost-%COMP%]   .game-loading[_ngcontent-%COMP%]{position:absolute;left:0;top:0;width:100%;height:100%;overflow:hidden;display:flex;justify-content:center;align-items:center;text-align:center;color:#fff;padding:10px;font-size:48px}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]{position:relative;left:0;top:0;width:100%;height:100%;overflow:hidden}[_nghost-%COMP%]   .game-content.hidden[_ngcontent-%COMP%]{visibility:hidden;pointer-events:none}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .score-panel[_ngcontent-%COMP%]{position:absolute;left:0;top:40px;width:100%;text-align:center;pointer-events:none;z-index:2;font-size:28px;color:#fff}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .score-panel[_ngcontent-%COMP%]   .score[_ngcontent-%COMP%]{font-size:40px}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .received-items[_ngcontent-%COMP%]{position:absolute;left:0;top:90px;width:100%;height:calc(60% - 90px);text-align:center;z-index:3;display:flex;flex-direction:column;justify-content:center;align-items:center;font-size:24px;color:#fff;pointer-events:none}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .received-items[_ngcontent-%COMP%]   .received-item[_ngcontent-%COMP%]{position:relative;height:40px;margin:5px;background:rgba(255,255,255,.4);display:flex;align-items:center;padding:0 10px;letter-spacing:.5px;box-shadow:2px 2px #00000080;text-shadow:2px 2px 0 rgba(0,0,0,.5)}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .received-items[_ngcontent-%COMP%]   .received-item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:30px;margin-right:10px}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .received-items[_ngcontent-%COMP%]   .received-item[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:10px}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .received-items[_ngcontent-%COMP%]   .received-item[_ngcontent-%COMP%]   span.bonus[_ngcontent-%COMP%]{color:#0f0}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .received-items[_ngcontent-%COMP%]   .received-item[_ngcontent-%COMP%]   span.superbonus[_ngcontent-%COMP%]{color:#e8d744}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .objective-panel[_ngcontent-%COMP%]{position:absolute;right:10px;bottom:10px;z-index:2;font-size:28px;color:#fff;line-height:24px;pointer-events:none}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .game-screen[_ngcontent-%COMP%]{position:relative;z-index:1;width:100%;height:100%;overflow:hidden;background-color:#fff}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .game-screen[_ngcontent-%COMP%]   .screen-parallax[_ngcontent-%COMP%]{position:absolute;z-index:1;top:0;left:0;width:100%;height:100%;overflow:hidden}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .game-screen[_ngcontent-%COMP%]   .game-screen-scanlines[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%;-webkit-user-select:none;user-select:none;pointer-events:none;background-image:url(scanline.b6e84db9ccc84ad120be.png);background-repeat:repeat;opacity:.1}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .game-screen[_ngcontent-%COMP%]   .jump-button[_ngcontent-%COMP%]{position:absolute;bottom:0;right:0;width:40%;height:600px;max-height:80%;-webkit-user-select:none;user-select:none;pointer-events:none;display:flex;justify-content:center;align-items:center;z-index:20}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .game-screen[_ngcontent-%COMP%]   .jump-button[_ngcontent-%COMP%]   .jump-button-content[_ngcontent-%COMP%]{width:70px;height:70px;border-radius:50%;opacity:.8;overflow:hidden;background:rgba(255,255,255,.1);color:#fff;font-size:24px;letter-spacing:2px;display:flex;justify-content:center;align-items:center;text-align:center;transition:background 60ms ease-in-out}[_nghost-%COMP%]   .game-content[_ngcontent-%COMP%]   .game-screen[_ngcontent-%COMP%]   .jump-button[_ngcontent-%COMP%]   .jump-button-content.pushed[_ngcontent-%COMP%]{background:rgba(255,255,255,.3)}"],data:{animation:[(0,$e.X$)("itemAppear",[(0,$e.eR)(":enter",[(0,$e.oB)({opacity:0,left:-400,transform:"scale(0.3)"}),(0,$e.jt)("200ms",(0,$e.oB)({opacity:1,left:0,transform:"scale(1)"}))]),(0,$e.eR)(":leave",[(0,$e.oB)({opacity:1,left:0,transform:"scale(1)"}),(0,$e.jt)("200ms",(0,$e.oB)({opacity:0,left:-400,transform:"scale(0.3)"}))])])]}}),r})(),vy=(()=>{class r{constructor(){}static setCookie(t,n,i,s=""){let o=`expires=${i.toUTCString()}`;document.cookie=`${t}=${n}; ${o}${s?`; path=${s}`:""}`}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275prov=g.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})();function xy(r,e){1&r&&(g.TgZ(0,"span"),g._uU(1,"F\xe9licitations"),g.qZA())}function yy(r,e){1&r&&(g.TgZ(0,"span"),g._uU(1,"Pas mal pour une premi\xe8re !"),g.qZA())}function _y(r,e){if(1&r&&(g.TgZ(0,"span",14),g._uU(1),g.qZA()),2&r){const t=g.oxw();g.xp6(1),g.hij(" +",t.result.itemPts,"pts ")}}function by(r,e){if(1&r&&(g.TgZ(0,"span",15),g._uU(1),g.qZA()),2&r){const t=g.oxw();g.xp6(1),g.hij(" ",t.result.itemPts,"pts ")}}function wy(r,e){if(1&r&&(g.TgZ(0,"span",14),g._uU(1),g.qZA()),2&r){const t=g.oxw();g.xp6(1),g.hij(" +",t.result.timePts,"pts ")}}function My(r,e){if(1&r&&(g.TgZ(0,"span",15),g._uU(1),g.qZA()),2&r){const t=g.oxw();g.xp6(1),g.hij(" ",t.result.timePts,"pts ")}}function Sy(r,e){1&r&&(g.TgZ(0,"div",16),g._uU(1,"Tu as termin\xe9 la course, et c'est d\xe9j\xe0 pas mal !"),g.qZA())}function Ty(r,e){1&r&&(g.TgZ(0,"div",16),g._uU(1,"Tu as pulv\xe9ris\xe9 l'objectif !"),g.qZA())}function Ey(r,e){1&r&&(g.TgZ(0,"div",16),g._uU(1,"Nous avons h\xe2te de te rencontrer."),g.qZA())}function Ay(r,e){if(1&r){const t=g.EpF();g.TgZ(0,"div",17),g.TgZ(1,"div",18),g.NdJ("click",function(){const s=g.CHM(t).$implicit;return g.oxw().onActionClick(s.action)}),g.TgZ(2,"span"),g._uU(3),g.qZA(),g.qZA(),g.qZA()}if(2&r){const t=e.$implicit,n=g.oxw();g.Q6J("ngClass",t.cssClass),g.xp6(1),g.ekj("win",n.win),g.xp6(2),g.Oqu(t.label)}}let Cy=(()=>{class r{constructor(){this.buttons=[{action:Nt.back_to_website,label:"Je pr\xe9f\xe8re prendre le bus",win:!1},{action:Nt.retry,label:"La prochaine sera la bonne...",win:!1},{action:Nt.tweet,label:"Tweeter mon r\xe9sultat !",cssClass:"twitter",win:!0},{action:Nt.retry,label:"Un deuxi\xe8me tour ?",win:!0},{action:Nt.enter_token_3,label:"Finir l'easter-egg",win:!0}],this.filteredButtons=[],this.onAction=new g.vpe,this.win=!1}ngOnInit(){this.win=this.result.totalPts>=this.result.objectivePts,this.filteredButtons=this.buttons.filter(n=>n.win===this.win);const t=new Date;t.setDate(t.getDate()+3),vy.setCookie("score",this.result.totalPts.toString(),t,"/")}ngOnDestroy(){}onActionClick(t){this.onAction.emit(t)}}return r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-pop-result"]],inputs:{result:"result"},outputs:{onAction:"onAction"},decls:37,vars:22,consts:[[1,"pop-content"],[1,"pop-header"],[4,"ngIf"],[1,"pop-desc"],[1,"desc-row"],["class","desc-pts-good",4,"ngIf"],["class","desc-pts-bad",4,"ngIf"],[1,"desc-total"],[1,"desc-total-pts"],["class","desc-message",4,"ngIf"],[1,"desc-message-token"],[1,"token"],[1,"pop-actions"],["class","pop-action",3,"ngClass",4,"ngFor","ngForOf"],[1,"desc-pts-good"],[1,"desc-pts-bad"],[1,"desc-message"],[1,"pop-action",3,"ngClass"],[1,"pop-action-btn",3,"click"]],template:function(t,n){1&t&&(g.TgZ(0,"div",0),g.TgZ(1,"div",1),g.YNc(2,xy,2,0,"span",2),g.YNc(3,yy,2,0,"span",2),g.qZA(),g.TgZ(4,"div",3),g.TgZ(5,"div",4),g._uU(6," Objets r\xe9colt\xe9s : "),g.TgZ(7,"b"),g._uU(8),g.qZA(),g._uU(9," ("),g.YNc(10,_y,2,1,"span",5),g.YNc(11,by,2,1,"span",6),g._uU(12,") "),g.qZA(),g.TgZ(13,"div",4),g._uU(14," Temps : "),g.TgZ(15,"b"),g._uU(16),g.ALo(17,"time"),g.ALo(18,"time"),g.qZA(),g._uU(19," ("),g.YNc(20,wy,2,1,"span",5),g.YNc(21,My,2,1,"span",6),g._uU(22,") "),g.qZA(),g.TgZ(23,"div",7),g._uU(24," Total "),g.qZA(),g.TgZ(25,"div",8),g._uU(26),g.qZA(),g.YNc(27,Sy,2,0,"div",9),g.YNc(28,Ty,2,0,"div",9),g.YNc(29,Ey,2,0,"div",9),g._UZ(30,"br"),g.TgZ(31,"div",10),g._uU(32,"Voici le Code 1 :"),g.qZA(),g.TgZ(33,"div",11),g._uU(34,"takitaki-kart"),g.qZA(),g.qZA(),g.TgZ(35,"div",12),g.YNc(36,Ay,4,4,"div",13),g.qZA(),g.qZA()),2&t&&(g.xp6(1),g.ekj("pop-header-win",n.win),g.xp6(1),g.Q6J("ngIf",n.win),g.xp6(1),g.Q6J("ngIf",!n.win),g.xp6(5),g.Oqu(n.result.itemNb),g.xp6(2),g.Q6J("ngIf",n.result.itemPts>0),g.xp6(1),g.Q6J("ngIf",n.result.itemPts<=0),g.xp6(5),g.AsE("",g.lcZ(17,18,n.result.raceTime)," / ",g.lcZ(18,20,n.result.objectiveTime),""),g.xp6(4),g.Q6J("ngIf",n.result.timePts>0),g.xp6(1),g.Q6J("ngIf",n.result.timePts<=0),g.xp6(4),g.ekj("total-win",n.win),g.xp6(1),g.hij(" ",n.result.totalPts," pts "),g.xp6(1),g.Q6J("ngIf",!n.win),g.xp6(1),g.Q6J("ngIf",n.win),g.xp6(1),g.Q6J("ngIf",n.win),g.xp6(7),g.Q6J("ngForOf",n.filteredButtons))},directives:[Ze.O5,Ze.sg,Ze.mk],pipes:[nh],styles:['[_nghost-%COMP%]{position:absolute;left:0;top:0;z-index:10;width:100%;height:100%;display:flex;justify-content:center;align-items:center;background:rgba(0,0,0,.2)}.pop-content[_ngcontent-%COMP%]{box-shadow:2px 2px #0006;overflow:hidden;background:white;max-width:400px;width:calc(100% - 20px)}.pop-content[_ngcontent-%COMP%]   .token[_ngcontent-%COMP%]{font-size:38px;margin-bottom:20px;text-align:center;margin-top:5px;color:#cb2468;font-family:"Roboto",sans-serif;text-shadow:2px 2px 0 rgba(0,0,0,.1)}.pop-content[_ngcontent-%COMP%]   .desc-message-token[_ngcontent-%COMP%]{font-size:22px;text-align:center;font-family:"Roboto",sans-serif;color:#222}.pop-content[_ngcontent-%COMP%]   .pop-header[_ngcontent-%COMP%]{height:40px;display:flex;justify-content:center;align-items:center;background:#CB2468;color:#fff;font-size:28px;text-shadow:2px 2px 0 rgba(0,0,0,.5)}.pop-content[_ngcontent-%COMP%]   .pop-header.pop-header-win[_ngcontent-%COMP%]{background:#00aa00}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]{color:#222;padding:10px;font-size:22px;line-height:14px}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-row[_ngcontent-%COMP%]{text-align:center}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-row[_ngcontent-%COMP%]   .desc-pts-good[_ngcontent-%COMP%]{color:#0a0;font-weight:bold}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-row[_ngcontent-%COMP%]   .desc-pts-bad[_ngcontent-%COMP%]{color:#cb2468;font-weight:bold}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-total[_ngcontent-%COMP%]{margin-top:20px;text-align:center;font-size:22px}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-total-pts[_ngcontent-%COMP%]{font-size:38px;margin-bottom:20px;text-align:center;margin-top:5px;color:#cb2468;text-shadow:2px 2px 0 rgba(0,0,0,.1)}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-total-pts.total-win[_ngcontent-%COMP%]{color:#0a0}.pop-content[_ngcontent-%COMP%]   .pop-desc[_ngcontent-%COMP%]   .desc-message[_ngcontent-%COMP%]{font-size:18px;text-align:center;font-family:"Roboto",sans-serif;color:#222}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]   .pop-action[_ngcontent-%COMP%]{margin:5px;flex:1}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]   .pop-action.twitter[_ngcontent-%COMP%]{width:100%;flex:auto}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]   .pop-action.twitter[_ngcontent-%COMP%]   .pop-action-btn[_ngcontent-%COMP%]{background:#09F}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]   .pop-action.twitter[_ngcontent-%COMP%]   .pop-action-btn.win[_ngcontent-%COMP%]{background:#09F}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]   .pop-action[_ngcontent-%COMP%]   .pop-action-btn[_ngcontent-%COMP%]{color:#fff;background:#CB2468;font-size:18px;padding:0 10px;height:30px;display:flex;justify-content:center;align-items:center;text-align:center;cursor:pointer;line-height:11px}.pop-content[_ngcontent-%COMP%]   .pop-actions[_ngcontent-%COMP%]   .pop-action[_ngcontent-%COMP%]   .pop-action-btn.win[_ngcontent-%COMP%]{background:#00aa00}']}),r})();function Ly(r,e){if(1&r){const t=g.EpF();g.TgZ(0,"app-pop-result",7),g.NdJ("onAction",function(i){return g.CHM(t),g.oxw().onResultAction(i)}),g.qZA()}if(2&r){const t=g.oxw();g.Q6J("result",t.result)}}const Ry=[{path:"",component:Xu,children:[{path:"",redirectTo:"welcome"},{path:"welcome",component:Gx,data:{title:"Bienvenue sur l'espace recrutement",footerBtns:[In.EXIT,In.ABOUT,In.DRIVER]}},{path:"about",component:Hx,data:{title:"A propos",footerBtns:[In.HELP,In.DRIVER]}},{path:"driver-choice",component:iy,data:{title:"Choix du pilote",footerBtns:[In.HELP,In.GAME]}},{path:"game",component:(()=>{class r{constructor(t,n,i,s){this.router=t,this.footerService=n,this.gameService=i,this.raceService=s,this.subs=[],this.result=null,this.rules=null}ngOnInit(){this.subs.push(this.gameService.resultState.subscribe(t=>{this.result=t})),this.rules={pts:500,time:180,timeValue:2,turns:1,difficulty:180}}ngOnDestroy(){this.subs.forEach(t=>t.unsubscribe()),this.subs=[]}onResultAction(t){switch(t){case Nt.retry:this.result=null,this.raceService.retry();break;case Nt.back_to_website:this.footerService.setAction(vt.exit);break;case Nt.enter_token_3:this.router.navigate(["/secret"],{queryParams:{token1:"takitaki-kart"}});break;case Nt.tweet:this.tweet()}}tweet(){window.open("https://twitter.com/intent/tweet?text=Je%20viens%20de%20r\xe9aliser%20un%20score%20de%20||PTS||pts%20sur%20le%20takima%20kart%20!%20Essaie%20de%20me%20battre%20!&amp;via=takimafr&amp;url=https%3A%2F%2Ftakima.fr/carrieres".split("||PTS||").join(""+this.result.totalPts),"_blank")}backToChoice(){this.footerService.setAction(vt.driver)}backToSite(){this.footerService.setAction(vt.exit)}}return r.\u0275fac=function(t){return new(t||r)(g.Y36(Wt.F0),g.Y36(Xs),g.Y36(Zs),g.Y36(th))},r.\u0275cmp=g.Xpm({type:r,selectors:[["app-game"]],decls:10,vars:2,consts:[[3,"rules","onExit"],[3,"result","onAction",4,"ngIf"],[1,"back-btn",3,"click"],["src","assets/img/ui/icon-driver.png"],[1,"text"],[1,"back-btn","site",3,"click"],["src","assets/img/ui/icon-exit.png"],[3,"result","onAction"]],template:function(t,n){1&t&&(g.TgZ(0,"kart-race",0),g.NdJ("onExit",function(){return n.backToChoice()}),g.qZA(),g.YNc(1,Ly,1,1,"app-pop-result",1),g.TgZ(2,"div",2),g.NdJ("click",function(){return n.backToChoice()}),g._UZ(3,"img",3),g.TgZ(4,"span",4),g._uU(5,"choix du pilote"),g.qZA(),g.qZA(),g.TgZ(6,"div",5),g.NdJ("click",function(){return n.backToSite()}),g._UZ(7,"img",6),g.TgZ(8,"span",4),g._uU(9,"revenir au site"),g.qZA(),g.qZA()),2&t&&(g.Q6J("rules",n.rules),g.xp6(1),g.Q6J("ngIf",n.result))},directives:[gy,Ze.O5,Cy],styles:["[_nghost-%COMP%]{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;justify-content:center;overflow:hidden}.back-btn[_ngcontent-%COMP%]{position:absolute;bottom:10px;left:10px;border-radius:4px;display:flex;align-items:center;justify-content:center;z-index:16;background:#00aa00;color:#fff;text-align:center;font-size:24px;padding:0 10px;height:40px;min-width:40px;cursor:pointer}.back-btn.site[_ngcontent-%COMP%]{bottom:60px}.back-btn[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:20px}@media (max-height: 600px){.back-btn[_ngcontent-%COMP%]{bottom:auto;top:10px;left:calc(10px + env(safe-area-inset-left))}.back-btn.site[_ngcontent-%COMP%]{top:60px}}.back-btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-left:10px}@media (max-height: 600px){.back-btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:none}}@media (max-width: 600px){.back-btn[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:none}}"]}),r})(),data:{fullscreen:!0}}]}];let Iy=(()=>{class r{}return r.\u0275fac=function(t){return new(t||r)},r.\u0275mod=g.oAB({type:r}),r.\u0275inj=g.cJS({providers:[],imports:[[Lr.u5,Ze.ez,Ba.JF,Yu,Ux,La,Wt.Bz.forChild(Ry)]]}),r})()}}]);